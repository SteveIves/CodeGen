
import CodeGen.Engine
import HarmonyCoreGenerator.Model
import System
import System.Collections.Generic
import System.Collections.ObjectModel
import System.Text

namespace HarmonyCoreGenerator.ViewModel

    public partial class GeneratorViewModel
        
        private _WindowTitle, string, Properties.Settings.Default.WindowTitle

        public property WindowTitle, string
            method get
            proc
                mreturn _WindowTitle
            endmethod
            method set
            proc
                _WindowTitle = value
                NotifyPropertyChanged(^nameof(WindowTitle))
            endmethod
        endproperty
        

        private _SolutionFile, string
        
        public property SolutionFile, string
            method get
            proc
                mreturn _SolutionFile
            endmethod
            method set
            proc
                if (_SolutionFile == ^null || !_SolutionFile.Equals(value))
                begin
                    _SolutionFile = value
                    NotifyPropertyChanged(^nameof(SolutionFile))
                end
            endmethod
        endproperty

        private _SolutionFolder, string

        public property SolutionFolder, string
            method get
            proc
                mreturn _SolutionFolder
            endmethod
            method set
            proc
                if (_SolutionFolder == ^null || !_SolutionFolder.Equals(value))
                begin
                    _SolutionFolder = value
                    NotifyPropertyChanged(^nameof(SolutionFolder))
                end
            endmethod
        endproperty

        private _OriginalFolder, string

        public property OriginalFolder, string
            method get
            proc
                mreturn _OriginalFolder
            endmethod
            method set
            proc
                if (_OriginalFolder == ^null || !_OriginalFolder.Equals(value))
                begin
                    _OriginalFolder = value
                    NotifyPropertyChanged(^nameof(OriginalFolder))
                end
            endmethod
        endproperty

        private _SettingsFile, string

        public property SettingsFile, string
            method get
            proc
                mreturn _SettingsFile
            endmethod
            method set
            proc
                if (_SettingsFile == ^null || !_SettingsFile.Equals(value))
                begin
                    _SettingsFile = value
                    NotifyPropertyChanged(^nameof(SettingsFile))
                end
            endmethod
        endproperty

        private _TasksetFile, string

        public property TasksetFile, string
            method get
            proc
                mreturn _TasksetFile
            endmethod
            method set
            proc
                if (_TasksetFile == ^null || !_TasksetFile.Equals(value))
                begin
                    _TasksetFile = value
                    NotifyPropertyChanged(^nameof(TasksetFile))
                end
            endmethod
        endproperty

        private _SolutionOpen, boolean
        
        public property SolutionOpen, boolean
            method get
            proc
                mreturn _SolutionOpen
            endmethod
            method set
            proc
                if (_SolutionOpen != value)
                begin
                    _SolutionOpen = value
                    NotifyPropertyChanged(^nameof(SolutionOpen))
                end
            endmethod
        endproperty
        
        private _Options, @HarmonyCoreOptions
        
        public property Options, @HarmonyCoreOptions
            method get
            proc
                mreturn _Options
            endmethod
            method set
            proc
                if (_Options != value)
                begin
                    _Options = value
                    NotifyPropertyChanged(^nameof(Options))
                end
            endmethod
        endproperty
        
        private _SelectedTabIndex, int
        
        public property SelectedTabIndex, int
            method get
            proc
                mreturn _SelectedTabIndex
            endmethod
            method set
            proc
                if (_SelectedTabIndex != value)
                begin
                    _SelectedTabIndex = value
                    NotifyPropertyChanged(^nameof(SelectedTabIndex))
                end
            endmethod
        endproperty
        
        private _CodeGenOutput, @ObservableCollection<string>
        
        public property CodeGenOutput, @ObservableCollection<string>
            method get
            proc
                mreturn _CodeGenOutput
            endmethod
            method set
            proc
                if (_CodeGenOutput != value)
                begin
                    _CodeGenOutput = value
                    NotifyPropertyChanged(^nameof(CodeGenOutput))
                end
            endmethod
        endproperty
        
        private _SelectedOdataStructure, @ODataStructureRow
        
        public property SelectedODataStructure, @ODataStructureRow
            method get
            proc
                mreturn _SelectedOdataStructure
            endmethod
            method set
            proc
                if ((_SelectedOdataStructure == ^null) || (_SelectedOdataStructure != value))
                begin
                    _SelectedOdataStructure = value
                    NotifyPropertyChanged(^nameof(SelectedODataStructure))
                end
            endmethod
        endproperty
        
        private _SelectedBridgeStructure, @BridgeStructureRow
        
        public property SelectedBridgeStructure, @BridgeStructureRow
            method get
            proc
                mreturn _SelectedBridgeStructure
            endmethod
            method set
            proc
                if ((_SelectedBridgeStructure == ^null) || (_SelectedBridgeStructure != value))
                begin
                    _SelectedBridgeStructure = value
                    NotifyPropertyChanged(^nameof(SelectedBridgeStructure))
                end
            endmethod
        endproperty
        
        private _CodeGenLoggingLevel, LoggingLevel, LoggingLevel.Normal
        
        public property CodeGenLoggingLevel, LoggingLevel
            method get
            proc
                mreturn _CodeGenLoggingLevel
            endmethod
            method set
            proc
                if (_CodeGenLoggingLevel != value)
                begin
                    _CodeGenLoggingLevel = value
                    NotifyPropertyChanged(^nameof(CodeGenLoggingLevel))
                end
            endmethod
        endproperty
        
        private _StatusBarText, string, String.Empty
        
        public property StatusBarText, string
            method get
            proc
                mreturn _StatusBarText
            endmethod
            method set
            proc
                if (!_StatusBarText.Equals(value))
                begin
                    _StatusBarText = value
                    NotifyPropertyChanged(^nameof(StatusBarText))
                end
            endmethod
        endproperty

	endclass

endnamespace
