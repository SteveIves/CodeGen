
import System
import System.Collections.Generic
import System.Text
import System.Windows.Input

namespace HarmonyCoreGenerator.ViewModel

	public partial class GeneratorViewModel
	
.region "OpenSolutionCommand"
        
        private _OpenSolutionCommand, @ICommand
        
        public property OpenSolutionCommand, @ICommand
            method get
            proc
                lambda generated_lambda1(param)
                begin
                    openSolution()
                end
                if (_OpenSolutionCommand == ^null)
                    _OpenSolutionCommand = new RelayCommand(generated_lambda1)
                mreturn _OpenSolutionCommand
            endmethod
        endproperty
        
.endregion
        
.region "CloseSolutionCommand"
        
        private _CloseSolutionCommand, @ICommand
        
        public property CloseSolutionCommand, @ICommand
            method get
            proc
                lambda execute(param)
                begin
                    closeSolution()
                end
                lambda canExecute(param)
                begin
                    mreturn _SolutionOpen
                end
                if (_CloseSolutionCommand == ^null)
                    _CloseSolutionCommand = new RelayCommand(execute, canExecute)
                mreturn _CloseSolutionCommand
            endmethod
        endproperty
        
.endregion
        
.region "SaveSettingsCommand"
        
        private _SaveSettingsCommand, @ICommand
        
        public property SaveSettingsCommand, @ICommand
            method get
            proc
                lambda execute(param)
                begin
                    saveSettings()
                end
                lambda canExecute(param)
                begin
                    mreturn _SolutionOpen
                end
                if (_SaveSettingsCommand == ^null)
                    _SaveSettingsCommand = new RelayCommand(execute, canExecute)
                mreturn _SaveSettingsCommand
            endmethod
        endproperty
        
.endregion
        
.region "RefreshRepositoryCommand"
        
        private _RefreshRepositoryCommand, @ICommand
        
        public property RefreshRepositoryCommand, @ICommand
            method get
            proc
                lambda execute(param)
                begin
                    refreshRepository(true)
                end
                lambda canExecute(param)
                begin
                    mreturn _SolutionOpen
                end
                if (_RefreshRepositoryCommand == ^null)
                    _RefreshRepositoryCommand = new RelayCommand(execute, canExecute)
                mreturn _RefreshRepositoryCommand
            endmethod
        endproperty
        
.endregion
        
.region "GenerateCodeCommand"
        
        private _GenerateCodeCommand, @ICommand
        
        public property GenerateCodeCommand, @ICommand
            method get
            proc
                lambda execute(param)
                begin
                    generateCode()
                end
                lambda canExecute(param)
                begin
                    mreturn _SolutionOpen
                end
                if (_GenerateCodeCommand == ^null)
                    _GenerateCodeCommand = new RelayCommand(execute, canExecute)
                mreturn _GenerateCodeCommand
            endmethod
        endproperty
        
.endregion

.region "Help Commands"
        
        private _HelpCommand, @ICommand
        
        public property HelpCommand, @ICommand
            method get
            proc
                lambda execute(param)
                begin
                    HelpProvider.ShowHelpTableOfContents()
                end
                if (_HelpCommand == ^null)
                    _HelpCommand = new RelayCommand(execute)
                mreturn _HelpCommand
            endmethod
        endproperty
        
.endregion
        
.region "ExitCommand"
        
        private _ExitCommand, @ICommand
        
        public property ExitCommand, @ICommand
            method get
            proc
                lambda execute(param)
                begin
                    Environment.^id("Exit")(0)
                end
                if (_ExitCommand == ^null)
                    _ExitCommand = new RelayCommand(execute)
                mreturn _ExitCommand
            endmethod
        endproperty
        
.endregion

    endclass

endnamespace
