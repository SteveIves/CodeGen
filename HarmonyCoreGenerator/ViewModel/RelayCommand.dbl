
import System
import System.Diagnostics
import System.Windows.Input

.array 0

namespace HarmonyCoreGenerator.ViewModel

    ;;;  <summary>
    ;;;  A command whose sole purpose is to relay its functionality to other objects by invoking delegates. The
    ;;;  default return value for the CanExecute method is 'true'.
    ;;;  </summary>
    public class RelayCommand implements ICommand

        readonly _execute, @Action<object>
        readonly _canExecute, @Predicate<object>

        ;;;  <summary>
        ;;;  Creates a new command that can always execute.
        ;;;  </summary>
        ;;;  <param name="execute">The execution logic.</param>
        public method RelayCommand
            execute, @Action<object> 
            this(execute, ^null)
        proc

        endmethod

        ;;;  <summary>
        ;;;  Creates a new command.
        ;;;  </summary>
        ;;;  <param name="execute">The execution logic.</param>
        ;;;  <param name="canExecute">The execution status logic.</param>
        public method RelayCommand
            execute, @Action<object> 
            canExecute, @Predicate<object> 
        proc
            if (execute == ^null)
                throw new ArgumentNullException("execute")
            _execute = execute
            _canExecute = canExecute
        endmethod

        ;; [DebuggerStepThrough]
        public method CanExecute, boolean
            parameter, @object 
        proc
            mreturn _canExecute == ^null ? true : _canExecute(parameter)
        endmethod

        public event CanExecuteChanged, @EventHandler, custom
            method add
            proc
                CommandManager.RequerySuggested += value
            endmethod
            method remove
            proc
                CommandManager.RequerySuggested -= value
            endmethod
        endevent

        public method Execute, void
            parameter, @object 
        proc
            _execute(parameter)
        endmethod

.endregion

    endclass

endnamespace
