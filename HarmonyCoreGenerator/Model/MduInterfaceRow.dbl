
import System
import System.Collections.Generic
import System.Text
import CodeGen.MethodCatalogAPI

namespace HarmonyCoreGenerator.Model

    public class MduInterfaceRow  extends ModelBase

        ;;; <summary>
        ;;; Constructor for deserialization
        ;;; </summary>
        public method MduInterfaceRow
        proc
        endmethod

        ;;; <summary>
        ;;; Constructor for initial mdu population
        ;;; </summary>
        ;;; <param name="aInterface">Interface name</param>
        public method MduInterfaceRow
            aInterface, @SmcInterface
            this()
        proc
            _Interface = aInterface
        endmethod

        ;;; <summary>
        ;;; Name of the interface that the method belongs to
        ;;; </summary>
        public property InterfaceName, String
            method get
            proc
                mreturn _Interface.Name
            endmethod
        endproperty

        ;;; <summary>
        ;;; Collection of methods
        ;;; </summary>
        public property Methods, @List<SmcMethod>
            method get
            proc
                mreturn _Interface.Methods
            endmethod
        endproperty

        ;;; <summary>
        ;;; Exposed via Traditional Bridge
        ;;; </summary>
        public property Exposed, boolean
            method get
            proc
                mreturn _Exposed
            endmethod
            method set
            proc
                if (!_Exposed.Equals(value))
                    _Exposed = value
                NotifyPropertyChanged(^nameof(Exposed))
            endmethod
        endproperty

        ;; Property backing fields

        private _Interface, @SmcInterface
        private _Exposed, boolean, false

    endclass

endnamespace
