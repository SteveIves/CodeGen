
import CodeGen.RepositoryAPI
import Newtonsoft.Json
import System
import System.Collections.Generic
import System.Linq
import System.Text
import System.Threading.Tasks

.array 0

namespace HarmonyCoreGenerator.Model

    public class StructureRow extends ModelBase

        ;;;  <summary>
        ;;;  Constructor for deserialization
        ;;;  </summary>
        public method StructureRow
        proc
        endmethod

        ;;;  <summary>
        ;;;  Constructor for initial repository population
        ;;;  </summary>
        ;;;  <param name="str">Repository structure object</param>
        public method StructureRow
            str, @RpsStructure 
            this()
        proc
            Name = str.Name
            Alias = str.Alias.Equals(str.Name) ? String.Empty : str.Alias
            ProcessingMode = "None"
        endmethod

        private _Name, string, String.Empty

        public property Name, string
            method get
            proc
                mreturn _Name
            endmethod
            method set
            proc
                if (!_Name.Equals(value))
                    _Name = value
                NotifyPropertyChanged(^nameof(Name))
            endmethod
        endproperty

        private _Alias, string, String.Empty

        public property Alias, string
            method get
            proc
                mreturn _Alias
            endmethod
            method set
            proc
                data upperValue = value.ToUpper()
                if (!_Alias.Equals(upperValue))
                    _Alias = upperValue
                NotifyPropertyChanged(^nameof(Alias))
            endmethod
        endproperty

        private _ProcessingMode, string, String.Empty

        public property ProcessingMode, string
            method get
            proc
                mreturn _ProcessingMode
            endmethod
            method set
            proc
                if (!_ProcessingMode.Equals(value))
                    _ProcessingMode = value
                NotifyPropertyChanged(^nameof(ProcessingMode))
            endmethod
        endproperty

    endclass

endnamespace
