import System
import System.Collections
import System.Collections.Generic
import System.Diagnostics
import System.Text
import System.Windows
import System.Windows.Controls
import System.Windows.Data
import System.Windows.Documents
import System.Windows.Input
import System.Windows.Shapes
import System.Windows.Media
import System.Windows.Media.Imaging
import System.Windows.Navigation
import System.Collections.Specialized

namespace HarmonyCoreGenerator.View

    public partial class MainWindow extends Window

        public method MainWindow
        proc
            this.InitializeComponent()

            ;;Make the structures DataGrid available to the ViewModel
            data vm = ^as(this.DataContext,HarmonyCoreGenerator.ViewModel.GeneratorViewModel)
            vm.ODataStructuresGrid = dgOdataStructures
            vm.BridgeStructuresGrid = dgBridgeStructures
            vm.InterfacesGrid = dgInterfaces

            lambda onCollectionChanged(s,e)
            begin
                if (e.Action == NotifyCollectionChangedAction.Add)
                begin
                    toolOutputList.ScrollIntoView(toolOutputList.Items[toolOutputList.Items.Count - 1])
                end
            end

            AddHandler(vm.ToolOutput.CollectionChanged,onCollectionChanged)


        endmethod

    endclass

endnamespace
