import System
import System.Collections.Generic
import System.ComponentModel
import System.Data
import System.Drawing
import System.Windows.Forms
import CodeGen.RepositoryAPI

namespace HarmonyCoreGenerator

    public partial class FrmMain extends System.Windows.Forms.Form

        private static processingModeChoices, @List<ProcessingModeChoice>
        private mStructureRows, @List<StructureRow>, new List<StructureRow>()

        static method FrmMain
            endparams
        proc
            processingModeChoices = new List<ProcessingModeChoice>()
            processingModeChoices.Add(new ProcessingModeChoice() { Id="None",Description="None"} )
            processingModeChoices.Add(new ProcessingModeChoice() { Id="StructureAndFile",Description="Structure and File"} )
            processingModeChoices.Add(new ProcessingModeChoice() { Id="StructureOnly",Description="Structure Only"} )
            processingModeChoices.Add(new ProcessingModeChoice() { Id="CustomCodeOnly",Description="Custom Code Only"} )
        endmethod

        public method FrmMain
            endparams
        proc
            this.InitializeComponent()
        endmethod

        private method FrmMain_Load, void
            sender, @object 
            e, @System.EventArgs 
            endparams
        proc
            processingModeChoiceBindingSource.DataSource = processingModeChoices

            data rps, @Repository, new Repository()
            data str, @RpsStructure
            foreach str in rps.Structures
            begin
                if (str.Alias.Equals(str.Name))
                    str.Alias = String.Empty
                mStructureRows.Add(new StructureRow(str))
            end

            structuresBindingSource.DataSource = mStructureRows



        endmethod

    endclass

endnamespace
