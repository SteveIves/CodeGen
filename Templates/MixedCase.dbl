;;*****************************************************************************
;;
;; Title:       MixedCase.dbl
;;
;; Type:        Function
;;
;; Description: Return a string in mixed case
;;
;; Date:        13th August 2010
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2012, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************
;;
function MixedCase          ,a

    required in a_string    ,a
    endparams

    stack record
        pos                 ,i4
        len                 ,i4
        outstring           ,i4
    endrecord

    structure tmpStruct
                            ,a1
    endstructure

proc

    outstring = %mem_proc(DM_ALLOC,%trim(a_string))
    ^m(outstring) = a_string

    if (len=%trimz(^m(outstring)))
    begin

        locase ^m(outstring)
        upcase ^m(tmpStruct(1:1),outstring)

        pos=1
        repeat
        begin
            pos=%instr(pos,^m(outstring),"_")
            if (pos) && (pos<len) then
                upcase ^m(tmpStruct(pos+=1:1),outstring)
            else
                exitloop
        end

        pos=1
        repeat
        begin
            pos=%instr(pos,^m(outstring),".")
            if (pos) && (pos<len) then
                upcase ^m(tmpStruct(pos+=1:1),outstring)
            else
                exitloop
        end

    end

    freturn %atrim(^m(outstring))

endfunction

