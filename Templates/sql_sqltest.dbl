;;*****************************************************************************
;;
;; Title:       sql_sqltest.dbl
;;
;; Type:        Program
;;
;; Description: A Synergy program which connects to a SQL Server relational
;;              database.  The program is intended to be used as a test
;;              environment for routines generated from various SQL templates.
;;
;; Date:        12th March 2008
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2012, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************
;;
main sqltest

    .define DB_CONSTR "VTX12_SQLNATIVE://DataBaseName/.\\SQLEXPRESS///Trusted_connection=yes"

    .include "CONNECTDIR:ssql.def"

    record
        ok          ,boolean, true  ;;OK to continue?
        dbinit      ,boolean        ;;Is the database channel initialized?
        tt          ,int            ;;Terminal channel
        dbchn       ,int            ;;Database channel to use
        dbcursor    ,int            ;;A database cursor
        sts         ,int            ;;Return status
        len         ,int            ;;Length of a string
        errtxt      ,a512           ;;Error text
    endrecord

proc

    ;;-------------------------------------------------------------------------
    ;;Open the terminal

    open(tt=%syn_freechn,i,"tt:")
    xcall flags(7004020,1)

    ;;-------------------------------------------------------------------------
    ;;Initialize SQL Connection

    .ifdef OS_VMS
    xcall init_ssql
    .else
    sts=%option(48,1)
    .endc

    ;;-------------------------------------------------------------------------
    ;;Initialize a database channel

    if (%ssc_init(dbchn=1)==SSQL_NORMAL) then
    begin
        dbinit = true
        writes(tt,"Database channel initialized")
    end
    else
    begin
        ok = false
        writes(tt,"Failed to initialize database channel!")
    end

    ;;-------------------------------------------------------------------------
    ;;Connect to the database

    if (ok)
    begin
        if (%ssc_connect(dbchn,DB_CONSTR)==SSQL_NORMAL) then
            writes(tt,"Connected to database")
        else
        begin
            ok = false
            xcall ssc_getemsg(dbchn,errtxt,len)
            writes(tt,"Failed to connect to database!")
            writes(tt,"Connect string was " + DB_CONSTR)
            writes(tt,"Error was: " + errtxt(1:len))
        end
    end

    ;;-------------------------------------------------------------------------
    ;;If the ok variable is true, then we are connected to the database

    if (ok)
    begin
        writes(tt,"Ready to do some work!")

        ;Add code to interact with the database here.  The database channel is
        ;referenced by the variable dbchn.











    end

    ;;-------------------------------------------------------------------------
    ;; Disconnect from the database

    if (dbinit)
    begin
        if (%ssc_release(dbchn)==SSQL_FAILURE)
        begin
            ok = false
            if (%ssc_getemsg(dbchn,errtxt,len)==SSQL_FAILURE) then
                writes(tt,"Failed to release database channel!")
            else
            begin
                writes(tt,"Failed to release database channel!\n")
                writes(tt,errtxt(1:len))
            end
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Close the terminal

    close tt
    stop

endmain

;;*****************************************************************************
;;
;;Does a string contain a numeric value?
;;
function IsNumeric ,^val

    required in a_string    ,a
    endparams

    stack record local_data
        numeric     ,boolean
        d18         ,d18
    endrecord

proc

    init local_data

    try
    begin
        d18 = %atrim(a_string)
        numeric = true
    end
    catch (ex, @Exception)
        nop
    endtry

    freturn numeric

endfunction

