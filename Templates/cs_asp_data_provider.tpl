<CODEGEN_FILENAME><StructureName>BLL.cs</CODEGEN_FILENAME>
;//*****************************************************************************
;//
;// Title:       cs_app_data_provider.tpl
;//
;// Type:        CodeGen Template
;//
;// Description: This template generates a C# class which wraps a Synergy
;//              xfNetLink .NET data class, and adds various "data annotation"
;//              attributes (see System.ComponentModel.DataAnnotations).
;//
;// Date:        17th October 2008
;//
;// Author:      Steve Ives, Synergex Professional Services Group
;//              http://www.synergex.com
;//
;//****************************************************************************
;//
;// Copyright (c) 2012, Synergex International, Inc.
;// All rights reserved.
;//
;// Redistribution and use in source and binary forms, with or without
;// modification, are permitted provided that the following conditions are met:
;//
;// * Redistributions of source code must retain the above copyright notice,
;//   this list of conditions and the following disclaimer.
;//
;// * Redistributions in binary form must reproduce the above copyright notice,
;//   this list of conditions and the following disclaimer in the documentation
;//   and/or other materials provided with the distribution.
;//
;// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;// POSSIBILITY OF SUCH DAMAGE.
;//
//*****************************************************************************
//
// Author:      <AUTHOR>
//
// Company:     <COMPANY>
//
//*****************************************************************************
//
// WARNING:     This code was generated by CodeGen. Any changes that you make
//              to this file will be lost if the code is regenerated.
//
//*****************************************************************************
//
using System.Web;
using System.Web.SessionState;

/*
 * This class is the business object for the <Structure_noalias>DT class. It is used
 * by the ObjectDataSource controls on foms
 */

[System.ComponentModel.DataObject]
public class <StructureName>BLL
{
    //Constructor
    public <StructureName>BLL()
    {
        _name = "<XF_NAMESPACE>.<Structure_noalias>";
    }

    private string _name;
    public string NameProperty
    {
        get { return _name; }
        set { _name = value; }
    }

    [System.ComponentModel.DataObjectMethodAttribute (System.ComponentModel.DataObjectMethodType.Select, true)]
    public <XF_NAMESPACE>.<Structure_noalias>DT GetAll<StructureName>s(<PRIMARY_KEY><SEGMENT_LOOP_FILTER><SEGMENT_CSTYPE> <SegmentName><,></SEGMENT_LOOP_FILTER></PRIMARY_KEY>)
    {
        HttpSessionState Session = HttpContext.Current.Session;
        <XF_NAMESPACE>.<XF_INTERFACE> <XF_SERVER_VARIABLE> = (<XF_NAMESPACE>.<XF_INTERFACE>)Session["<XF_SESSION_VARIABLE>"];
        <XF_NAMESPACE>.<Structure_noalias>DT <structure_name>DT = new <XF_NAMESPACE>.<Structure_noalias>DT();
        <XF_SERVER_VARIABLE>.GetAll<StructureName>s(<PRIMARY_KEY><SEGMENT_LOOP_FILTER><SegmentName>,</SEGMENT_LOOP_FILTER></PRIMARY_KEY>ref <structure_name>DT);
        return <structure_name>DT;
    }

    [System.ComponentModel.DataObjectMethodAttribute (System.ComponentModel.DataObjectMethodType.Select, false)]
    public <XF_NAMESPACE>.<Structure_noalias>DT Get<StructureName>(<PRIMARY_KEY><SEGMENT_LOOP><SEGMENT_CSTYPE> <SegmentName><,></SEGMENT_LOOP></PRIMARY_KEY>)
    {
        HttpSessionState Session = HttpContext.Current.Session;
        <XF_NAMESPACE>.<XF_INTERFACE> <XF_SERVER_VARIABLE> = (<XF_NAMESPACE>.<XF_INTERFACE>)Session["<XF_SESSION_VARIABLE>"];
        <XF_NAMESPACE>.<Structure_noalias>DT <structure_name>DT = new <XF_NAMESPACE>.<Structure_noalias>DT();
        <XF_SERVER_VARIABLE>.Get<StructureName>(<PRIMARY_KEY><SEGMENT_LOOP><SegmentName><,></SEGMENT_LOOP></PRIMARY_KEY>,ref <structure_name>DT);
        return <structure_name>DT;
    }

    [System.ComponentModel.DataObjectMethodAttribute (System.ComponentModel.DataObjectMethodType.Insert, true)]
    public bool Add<StructureName>(<XF_NAMESPACE>.<Structure_noalias> <structure_name>)
    {
        HttpSessionState Session = HttpContext.Current.Session;
        <XF_NAMESPACE>.<XF_INTERFACE> <XF_SERVER_VARIABLE> = (<XF_NAMESPACE>.<XF_INTERFACE>)Session["<XF_SESSION_VARIABLE>"];
        return <XF_SERVER_VARIABLE>.Add<StructureName>(<structure_name>);
    }

    [System.ComponentModel.DataObjectMethodAttribute (System.ComponentModel.DataObjectMethodType.Update, true)]
    public bool Update<StructureName>(<XF_NAMESPACE>.<Structure_noalias> <structure_name>)
    {
        HttpSessionState Session = HttpContext.Current.Session;
        <XF_NAMESPACE>.<XF_INTERFACE> <XF_SERVER_VARIABLE> = (<XF_NAMESPACE>.<XF_INTERFACE>)Session["<XF_SESSION_VARIABLE>"];
        return <XF_SERVER_VARIABLE>.Update<StructureName>(<structure_name>);
    }

    [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
    public bool Delete<StructureName>(<XF_NAMESPACE>.<Structure_noalias> <structure_name>)
    {
        HttpSessionState Session = HttpContext.Current.Session;
        <XF_NAMESPACE>.<XF_INTERFACE> <XF_SERVER_VARIABLE> = (<XF_NAMESPACE>.<XF_INTERFACE>)Session["<XF_SESSION_VARIABLE>"];
        return <XF_SERVER_VARIABLE>.Delete<StructureName>(<PRIMARY_KEY><SEGMENT_LOOP><structure_name>.<Segment_field><,></SEGMENT_LOOP></PRIMARY_KEY>);
    }
}
