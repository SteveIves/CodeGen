
import System
import System.Collections.ObjectModel
import System.IO
import System.Windows
import System.Windows.Input

namespace TemplateBrowser

	public class OptionsViewModel extends ViewModelBase

		private mWindow, @Window

		public method OptionsViewModel
			required in aWindow, @Window
			endparams
		proc
			mWindow = aWindow
		endmethod

		public property UserTemplatesFolder, String
			method get
			proc
				mreturn Properties.Settings.Default.UserTemplateFolder
			endmethod
			method set
			proc
				if (String.IsNullOrWhiteSpace(value)) then
				begin
					Properties.Settings.Default.UserTemplateFolder = string.Empty
					Properties.Settings.Default.Save()
				end
				else if (Directory.Exists(value)) then
				begin
					Properties.Settings.Default.UserTemplateFolder = value
					Properties.Settings.Default.Save()
				end
				else
				begin
					UserTemplatesFolder = Properties.Settings.Default.UserTemplateFolder
				end
				NotifyPropertyChanged("UserTemplatesFolder")
			endmethod
		endproperty
	
		private mCloseCommand, @ICommand

		public property CloseCommand, @ICommand
			method get
			proc
				if (mCloseCommand==^null)
				begin
					lambda doCloseCommand(param)
					begin
						mWindow.DialogResult = true
					end
					mCloseCommand = new RelayCommand(doCloseCommand)
				end
				mreturn mCloseCommand
			endmethod
		endproperty

	endclass

endnamespace
