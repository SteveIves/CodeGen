;;*****************************************************************************
;;
;; Title:       OptionsViewModel.dbl
;;
;; Type:        Class
;;
;; Description: ViwModel for OptionsDialog.xaml
;;
;; Date:        30th July 2014
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2014, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import System
import System.Collections.ObjectModel
import System.IO
import System.Windows
import System.Windows.Input

namespace TemplateBrowser

	public class OptionsViewModel extends ViewModelBase

		private mWindow, @Window

		public method OptionsViewModel
			required in aWindow, @Window
			endparams
		proc
			mWindow = aWindow
		endmethod

		public property UserTemplatesFolder, String
			method get
			proc
				mreturn Properties.Settings.Default.UserTemplateFolder
			endmethod
			method set
			proc
				if (String.IsNullOrWhiteSpace(value)) then
				begin
					Properties.Settings.Default.UserTemplateFolder = string.Empty
					Properties.Settings.Default.Save()
				end
				else if (Directory.Exists(value)) then
				begin
					Properties.Settings.Default.UserTemplateFolder = value
					Properties.Settings.Default.Save()
				end
				else
				begin
					UserTemplatesFolder = Properties.Settings.Default.UserTemplateFolder
				end
				NotifyPropertyChanged("UserTemplatesFolder")
			endmethod
		endproperty
	
		private mCloseCommand, @ICommand

		public property CloseCommand, @ICommand
			method get
			proc
				if (mCloseCommand==^null)
				begin
					lambda doCloseCommand(param)
					begin
						mWindow.DialogResult = true
					end
					mCloseCommand = new RelayCommand(doCloseCommand)
				end
				mreturn mCloseCommand
			endmethod
		endproperty

	endclass

endnamespace
