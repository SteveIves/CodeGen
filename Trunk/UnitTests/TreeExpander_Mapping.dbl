
import System
import Microsoft.VisualStudio.TestTools.UnitTesting
import CodeGen.Engine

.array 0

namespace UnitTests
	
	public partial class TreeExpanderTests
		
		private method runMappingTest, void
		proc
			data actual, String
			data errorText, String
			if (mappingSimulator.ExpandCode(template,actual,errorText)) then
			begin
				Assert.IsTrue(expected==actual,StringTools.GetResultMessage(expected,actual))
			end
			else
				Assert.Fail(string.Format("Parse of template code failed. Parser error was {0}",errorText))
		endmethod
		
		{TestMethod}
		{TestCategory("Expansion - Mapping")}
		public method TreeExpander_Mapping001, void
		proc
			template = '.include "<MAPPED_STRUCTURE>" repository, stack record="old_<mapped_structure>"'
			expected = '.include "MAPPED_TO" repository, stack record="old_mapped_to"'
			runMappingTest()
		endmethod
		
		{TestMethod}
		{TestCategory("Expansion - Mapping")}
		public method TreeExpander_Mapping002, void
		proc
			template = 'open(filechn=%syn_freechn,i:i,"<MAPPED_FILE>") [ERR=fnf]'
			expected = 'open(filechn=%syn_freechn,i:i,"DAT:mapped_to.ism") [ERR=fnf]'
			runMappingTest()
		endmethod
		
	endclass
	
endnamespace
