
import System
import Microsoft.VisualStudio.TestTools.UnitTesting
import CodeGen.Engine

.array 0

namespace UnitTests

	public partial class TreeExpanderTests
	
		{TestMethod}
		{TestCategory("TreeExpander - Field Loop")}
		public method TreeExpander_FieldName001, void
		proc
			template = "<FIELD_LOOP><FIELD_NAME><,></FIELD_LOOP>"
			expected = "FIELD1,FIELD2,FIELD3,FIELD4,FIELD5,FIELD6,FIELD_SEVEN[1],FIELD_SEVEN[2],FIELD_SEVEN[3],FIELD_SEVEN[4]"
			runTest()
		endmethod
		
		{TestMethod}
		{TestCategory("TreeExpander - Field Loop")}
		public method TreeExpander_FieldName002, void
		proc
			;;This is a test for extra whitespace generated by loops.
			;	<FIELD_LOOP>
			;	<FIELD_NAME>
			;	<FIELD_LOOP>
			template = tab+"<FIELD_LOOP>"+crlf+tab+"<FIELD_NAME>"+crlf+tab+"</FIELD_LOOP>"+crlf
			
			;	FIELD1
			;	FIELD2
			;	FIELD3
			;	FIELD4
			;	FIELD5
			;	FIELD6
			;	FIELD_SEVEN[1]
			;	FIELD_SEVEN[2]
			;	FIELD_SEVEN[3]
			;	FIELD_SEVEN[4]
			expected = tab + "FIELD1"+crlf+tab+"FIELD2"+crlf+tab+"FIELD3"+crlf+tab+"FIELD4"+crlf+tab+"FIELD5"+crlf+tab+"FIELD6"+crlf+tab+"FIELD_SEVEN[1]"+crlf+tab+"FIELD_SEVEN[2]"+crlf+tab+"FIELD_SEVEN[3]"+crlf+tab+"FIELD_SEVEN[4]"+crlf
			
			runTest()
			
		endmethod
		
		{TestMethod}
		{TestCategory("TreeExpander - Field Loop")}
		public method TreeExpander_FieldSqlName001, void
		proc
			template = "<FIELD_LOOP><FIELD_SQLNAME><,></FIELD_LOOP>"
			expected = "FIELD1,FIELD2,FIELD3,FIELD4,FIELD5,FIELD6,FIELD_SEVEN1,FIELD_SEVEN2,FIELD_SEVEN3,FIELD_SEVEN4"
			runTest()
		endmethod
		
		{TestMethod}
		{TestCategory("TreeExpander - Field Loop")}
		public method TreeExpander_FieldSqlName002, void
		proc
			template = "<FIELD_LOOP><field_sqlname><,></FIELD_LOOP>"
			expected = "field1,field2,field3,field4,field5,field6,field_seven1,field_seven2,field_seven3,field_seven4"
			runTest()
		endmethod
		
		{TestMethod}
		{TestCategory("TreeExpander - Field Loop")}
		public method TreeExpander_FieldSqlName003, void
		proc
			template = "<FIELD_LOOP><Field_sqlname><,></FIELD_LOOP>"
			expected = "Field1,Field2,Field3,Field4,Field5,Field6,Field_seven1,Field_seven2,Field_seven3,Field_seven4"
			runTest()
		endmethod
		
		{TestMethod}
		{TestCategory("TreeExpander - Field Loop")}
		public method TreeExpander_FieldSqlName004, void
		proc
			template = "<FIELD_LOOP><Field_Sqlname><,></FIELD_LOOP>"
			expected = "Field1,Field2,Field3,Field4,Field5,Field6,Field_Seven1,Field_Seven2,Field_Seven3,Field_Seven4"
			runTest()
		endmethod
		
		{TestMethod}
		{TestCategory("TreeExpander - Field Loop")}
		public method TreeExpander_FieldSqlName005, void
		proc
			template = "<FIELD_LOOP><FieldSqlName><,></FIELD_LOOP>"
			expected = "Field1,Field2,Field3,Field4,Field5,Field6,FieldSeven1,FieldSeven2,FieldSeven3,FieldSeven4"
			runTest()
		endmethod
		
		{TestMethod}
		{TestCategory("TreeExpander - Field Loop")}
		public method TreeExpander_FieldSqlName006, void
		proc
			template = "<FIELD_LOOP><fieldSqlName><,></FIELD_LOOP>"
			expected = "field1,field2,field3,field4,field5,field6,fieldSeven1,fieldSeven2,fieldSeven3,fieldSeven4"
			runTest()
		endmethod
		
		{TestMethod}
		{TestCategory("TreeExpander - Field Loop")}
		public method TreeExpander_FieldSpec001, void
		proc
			template = "<FIELD_LOOP><FIELD_SPEC><,></FIELD_LOOP>"
			expected = "A1,D1,D2.1,I1,D8,D6,A10,A10,A10,A10"
			runTest()
		endmethod

		{TestMethod}
		{TestCategory("TreeExpander")}
		public method TreeExpanderIfElse001_NEEDS_FIXING, void
		proc
			;FAILS

			template = '<FIELD_LOOP>' + crlf
			&	+      'recordSpec.fields[<FIELD#LOGICAL>].fieldDecimals = <IF PRECISION><FIELD_PRECISION></IF PRECISION><IF NOPRECISION>0</IF NOPRECISION>' + crlf
			&	+      '</FIELD_LOOP>'
			
			expected = 'recordSpec.fields[1].fieldDecimals = 0' + crlf
			&	+      'recordSpec.fields[2].fieldDecimals = 0' + crlf
			&	+      'recordSpec.fields[3].fieldDecimals = 1' + crlf
			&	+      'recordSpec.fields[4].fieldDecimals = 0' + crlf
			&	+      'recordSpec.fields[5].fieldDecimals = 0' + crlf
			&	+      'recordSpec.fields[6].fieldDecimals = 0' + crlf
			&	+      'recordSpec.fields[7].fieldDecimals = 0' + crlf
			&	+      'recordSpec.fields[8].fieldDecimals = 0' + crlf
			&	+      'recordSpec.fields[9].fieldDecimals = 0' + crlf
			&	+      'recordSpec.fields[10].fieldDecimals = 0' + crlf

			;runTest()
			runTest(true)
			
		endmethod		
		
		{TestMethod}
		{TestCategory("TreeExpander")}
		public method TreeExpanderIfElse002, void
		proc
			;WORKS

			template = '<FIELD_LOOP>' + crlf
			&	+      'recordSpec.fields[<FIELD#LOGICAL>].fieldDecimals = <IF PRECISION><FIELD_PRECISION><ELSE>0</IF PRECISION>' + crlf
			&	+      '</FIELD_LOOP>'
			
			expected = 'recordSpec.fields[1].fieldDecimals = 0' + crlf
			&	+      'recordSpec.fields[2].fieldDecimals = 0' + crlf
			&	+      'recordSpec.fields[3].fieldDecimals = 1' + crlf
			&	+      'recordSpec.fields[4].fieldDecimals = 0' + crlf
			&	+      'recordSpec.fields[5].fieldDecimals = 0' + crlf
			&	+      'recordSpec.fields[6].fieldDecimals = 0' + crlf
			&	+      'recordSpec.fields[7].fieldDecimals = 0' + crlf
			&	+      'recordSpec.fields[8].fieldDecimals = 0' + crlf
			&	+      'recordSpec.fields[9].fieldDecimals = 0' + crlf
			&	+      'recordSpec.fields[10].fieldDecimals = 0' + crlf
			
			;runTest()
			runTest(true)
			
		endmethod		
		
		{TestMethod}
		{TestCategory("TreeExpander")}
		public method TreeExpanderIfElse003_NEEDS_FIXING, void
		proc
			;FAILS

			template = '<FIELD_LOOP>' + crlf
			&	+      'recordSpec.fields[<FIELD#LOGICAL>].fieldDecimals = <IF PRECISION><FIELD_PRECISION></IF PRECISION>' + crlf
			&	+      '</FIELD_LOOP>'
			
			expected = 'recordSpec.fields[1].fieldDecimals = ' + crlf
			&	+      'recordSpec.fields[2].fieldDecimals = ' + crlf
			&	+      'recordSpec.fields[3].fieldDecimals = 1' + crlf
			&	+      'recordSpec.fields[4].fieldDecimals = ' + crlf
			&	+      'recordSpec.fields[5].fieldDecimals = ' + crlf
			&	+      'recordSpec.fields[6].fieldDecimals = ' + crlf
			&	+      'recordSpec.fields[7].fieldDecimals = ' + crlf
			&	+      'recordSpec.fields[8].fieldDecimals = ' + crlf
			&	+      'recordSpec.fields[9].fieldDecimals = ' + crlf
			&	+      'recordSpec.fields[10].fieldDecimals = ' + crlf
			
			;runTest()
			runTest(true)
			
		endmethod		
		
		{TestMethod}
		{TestCategory("TreeExpander")}
		public method TreeLoseLeadingWhiteSpace001_NEEDS_FIXING, void
		proc
			;This one REALLY needs fixing!
			template = '            recordSpec.fieldCount = <STRUCTURE_FIELDS>'
			expected = '            recordSpec.fieldCount = 10'
			;actual  = 'recordSpec.fieldCount = 10'
			runTest()
			;runTest(true)
		endmethod		
		
	endclass

endnamespace
