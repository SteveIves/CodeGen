<CODEGEN_FILENAME><Structure_name>_Visibility.CodeGen.dbc</CODEGEN_FILENAME>
;//****************************************************************************
;//
;// Title:       Symphony_Visibility.tpl
;//
;// Type:        CodeGen Template
;//
;// Description: Template to define field level visibility properties
;//
;// Author:      Richard C. Morris, Synergex Professional Services Group
;//
;// Copyright (c) 2012, Synergex International, Inc. All rights reserved.
;//
;// Redistribution and use in source and binary forms, with or without
;// modification, are permitted provided that the following conditions are met:
;//
;// * Redistributions of source code must retain the above copyright notice,
;//   this list of conditions and the following disclaimer.
;//
;// * Redistributions in binary form must reproduce the above copyright notice,
;//   this list of conditions and the following disclaimer in the documentation
;//   and/or other materials provided with the distribution.
;//
;// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;// POSSIBILITY OF SUCH DAMAGE.
;//
;//****************************************************************************
;;****************************************************************************
;; WARNING: This code was generated by CodeGen. Any changes that you
;;          make to this code will be overwritten if the code is regenerated!
;;
;; Template author:	Richard C. Morris, Synergex Professional Services Group
;;
;; Template Name:	Symphony Framework : <TEMPLATE>.tpl
;;
;;***************************************************************************
import System
import System.Collections.Generic
import System.Text
import System.Windows
import System.ComponentModel

import Symphony.Conductor.Model
import Symphony.Conductor.Commands

namespace <NAMESPACE>

	public class <Structure_name>_Visibility extends DataVisibilityBase

		record mBinaryVisibiliyValue
			<FIELD_LOOP>
			<IF LANGUAGE>
			<IF TOOLKIT>
			m<Field_sqlname>Visibility	,Boolean
			</IF TOOLKIT>
			</IF LANGUAGE>
			</FIELD_LOOP>
		endrecord

		public method <Structure_name>_Visibility
			in req identifier		,String
		proc
			if (LoadAttributes(identifier, mBinaryVisibiliyValue) == false)
			begin
				<FIELD_LOOP>
				<IF LANGUAGE>
				<IF TOOLKIT>
				m<Field_sqlname>Visibility = <SYMPHONY_DEFAULT_VISIBILITY>
				</IF TOOLKIT>
				</IF LANGUAGE>
				</FIELD_LOOP>
			end
		endmethod

		public method <Structure_name>_Visibility
			in req identifier		,String
			in req defaultSetting	,boolean
		proc
			if (LoadAttributes(identifier, mBinaryVisibiliyValue) == false)
			begin
				<FIELD_LOOP>
				<IF LANGUAGE>
				<IF TOOLKIT>
				<IF PKSEGMENT>
					m<Field_sqlname>Visibility = true
				</IF PKSEGMENT>
				<IF NOTPKSEGMENT>
					m<Field_sqlname>Visibility = defaultSetting
				</IF NOTPKSEGMENT>
				</IF TOOLKIT>
				</IF LANGUAGE>
				</FIELD_LOOP>
			end
		endmethod

		<FIELD_LOOP>
		<IF LANGUAGE>
		<IF TOOLKIT>
		public property <Field_sqlname>Visibility	,Boolean
			method get
			proc
				mreturn m<Field_sqlname>Visibility
			endmethod
			method set
			proc
				m<Field_sqlname>Visibility = value
				raiseevent(PropertyChanged, this, new PropertyChangedEventArgs("<Field_sqlname>Visibility"))
				this.SaveAttributes(mBinaryVisibiliyValue)
			endmethod
		endproperty
		</IF TOOLKIT>
		</IF LANGUAGE>
		</FIELD_LOOP>

		public event PropertyChanged	,@PropertyChangedEventHandler

	endclass

endnamespace

