<CODEGEN_FILENAME><Structure_name>_Select.CodeGen.dbc</CODEGEN_FILENAME>
<OPTIONAL_USERTOKEN>RPSDATAFILES= </OPTIONAL_USERTOKEN>
;//****************************************************************************
;//
;// Title:       Symphony_Select.tpl
;//
;// Type:        CodeGen Template
;//
;// Description: Template to build a selection entities
;//
;// Author:      Richard C. Morris, Synergex Professional Services Group
;//
;// Copyright (c) 2012, Synergex International, Inc. All rights reserved.
;//
;// Redistribution and use in source and binary forms, with or without
;// modification, are permitted provided that the following conditions are met:
;//
;// * Redistributions of source code must retain the above copyright notice,
;//   this list of conditions and the following disclaimer.
;//
;// * Redistributions in binary form must reproduce the above copyright notice,
;//   this list of conditions and the following disclaimer in the documentation
;//   and/or other materials provided with the distribution.
;//
;// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;// POSSIBILITY OF SUCH DAMAGE.
;//
;//****************************************************************************
;;****************************************************************************
;; WARNING: This code was generated by CodeGen. Any changes that you
;;          make to this code will be overwritten if the code is regenerated!
;;
;; Template author:	Richard C. Morris, Synergex Professional Services Group
;;
;; Template Name:	Symphony Framework : <TEMPLATE>.tpl
;;****************************************************************************

import System
import System.Collections.Generic
import System.Text

import Synergex.SynergyDE.Select

import Symphony.Conductor.Model

namespace <NAMESPACE>

	public class <Structure_name>_Select

		public static method WhereClause	,@Where
			in req <structure_name>		,STR<Structure_name>
			in req criteriaData		,@DataObjectBase
			in req visibilityData		,@DataVisibilityBase
			endparams

			.include '<structure_name>' repository <RPSDATAFILES>, static record = "criteria"

			record
				clause		,@Where
			endrecord
		proc
			clause = new Where()

			data tmpDO	,@<Structure_name>_Data		,(<Structure_name>_Data)criteriaData
			data tmpVis	,@<Structure_name>_Visibility	,(@<Structure_name>_Visibility)visibilityData

			criteria = criteriaData.SynergyRecord

			;;do any tag values
			<TAG_LOOP>
			.ifndef FILE_HAS_TAGS
			.define FILE_HAS_TAGS YESITDOES
			.endc
			</TAG_LOOP>

			.ifdef FILE_HAS_TAGS
			<TAG_LOOP>
			clause = clause .and. (Where)<STRUCTURE_NAME>.str_<TAGLOOP_FIELD_NAME> <TAGLOOP_OPERATOR_DBL> <TAGLOOP_TAG_VALUE>
			</TAG_LOOP>
			.endc

			;;add each criteria value to the where clause
			<FIELD_LOOP>
			<IF NOTARRAY>
			<IF CUSTOM_NOT_SYMPHONY_ARRAY_FIELD>
			<IF LANGUAGE>
			<IF TOOLKIT>
			<IF REPORT>
			<IF BOOLEAN>
			if (tmpVis.<Field_sqlname>Visibility)
			<ELSE>
			if (tmpVis.<Field_sqlname>Visibility && criteria.<field_name>)
			</IF BOOLEAN>
			begin
				<IF PKSEGMENT>
				<IF ALPHA>
				clause = clause .and. (Where)(<structure_name>.str_<field_name> .eq. %atrim(criteria.<field_name>))
				</IF ALPHA>
				<IF NUMERIC>
				clause = clause .and. (Where)(<structure_name>.str_<field_name> .eq. criteria.<field_name>)
				</IF NUMERIC>
				</IF PKSEGMENT>
				;//
				<IF NOTPKSEGMENT>
				<IF ALPHA>
				clause = clause .and. (Where)Where.Contains(<structure_name>.str_<field_name>, %atrim(criteria.<field_name>))
				</IF ALPHA>
				<IF NUMERIC>
				clause = clause .and. (Where)(<structure_name>.str_<field_name> .eq. criteria.<field_name>)
				</IF NUMERIC>
				<IF BOOLEAN>
				clause = clause .and. (Where)(<structure_name>.str_<field_name> .eq. criteria.<field_name>)
				</IF BOOLEAN>
				</IF NOTPKSEGMENT>
			end
			</IF REPORT>
			</IF TOOLKIT>
			</IF LANGUAGE>
			</IF CUSTOM_NOT_SYMPHONY_ARRAY_FIELD>
			</IF NOTARRAY>
			</FIELD_LOOP>

			mreturn clause

		endmethod

	endclass

endnamespace


