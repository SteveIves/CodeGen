<CODEGEN_FILENAME><Structure_name>MainView.CodeGen.xaml</CODEGEN_FILENAME>
<REQUIRES_USERTOKEN>VIEWNAMESPACE</REQUIRES_USERTOKEN>
<REQUIRES_USERTOKEN>VIEWMODELNAMESPACE</REQUIRES_USERTOKEN>
<PROCESS_TEMPLATE>Symphony_CRUDMainView_code</PROCESS_TEMPLATE>
;//****************************************************************************
;//
;// Title:       Symphony_CRUDMainView.tpl
;//
;// Type:        CodeGen Template
;//
;// Description: Template that defines the main CRUD view
;//
;// Author:      Richard C. Morris, Synergex Professional Services Group
;//
;// Copyright (c) 2012, Synergex International, Inc. All rights reserved.
;//
;// Redistribution and use in source and binary forms, with or without
;// modification, are permitted provided that the following conditions are met:
;//
;// * Redistributions of source code must retain the above copyright notice,
;//   this list of conditions and the following disclaimer.
;//
;// * Redistributions in binary form must reproduce the above copyright notice,
;//   this list of conditions and the following disclaimer in the documentation
;//   and/or other materials provided with the distribution.
;//
;// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;// POSSIBILITY OF SUCH DAMAGE.
;//
;//****************************************************************************
<!--
 WARNING: This code was generated by CodeGen. Any changes that you
          make to this code will be overwritten if the code is regenerated!

 Template author:	Richard C. Morris, Synergex Professional Services Group

 Template Name:	Symphony Framework : <TEMPLATE>.tpl

-->
<UserControl x:Class="<NAMESPACE>.<Structure_name>MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:<VIEWNAMESPACE>"
    xmlns:symphonyUI="clr-namespace:Symphony.Crescendo.Presentation;assembly=SymphonyCrescendo"
	xmlns:symphonyVM="clr-namespace:Symphony.Conductor.ViewModel;assembly=SymphonyConductor">

    <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="applicationStates">
            <VisualState x:Name="KeyEntryState">
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="dataEntry" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="dataEntry" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="dataEntry" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="confirm" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="confirm" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="confirm" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="<structure_name>Lookup" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="<structure_name>Lookup" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="<structure_name>Lookup" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="keyEntry" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="1" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="keyEntry" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="keyEntry" Storyboard.TargetProperty="(Panel.ZIndex)" To="1" />
					<!-- remove all lookups-->

					<FIELD_LOOP>
					<IF DRILL>
					<DoubleAnimation Storyboard.TargetName="<field_drillm>Drill" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
					<BooleanAnimationUsingKeyFrames Storyboard.TargetName="<field_drillm>Drill" Storyboard.TargetProperty="(IsEnabled)">
						<DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
					</BooleanAnimationUsingKeyFrames>
					<Int32Animation Storyboard.TargetName="<field_drillm>Drill" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />
					</IF DRILL>
					</FIELD_LOOP>
                </Storyboard>
            </VisualState>

            <VisualState x:Name="DataEntryState">
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="keyEntry" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="keyEntry" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="keyEntry" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="confirm" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="confirm" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="confirm" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="<structure_name>Lookup" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="<structure_name>Lookup" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="<structure_name>Lookup" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="dataEntry" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="1" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="dataEntry" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="dataEntry" Storyboard.TargetProperty="(Panel.ZIndex)" To="1" />

                </Storyboard>
            </VisualState>

            <VisualState x:Name="ConfirmState">
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="mainMenu" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0.4" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="mainMenu" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="mainMenu" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="mainToolbar" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0.4" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="mainToolbar" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="mainToolbar" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="keyEntry" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="keyEntry" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="keyEntry" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="dataEntry" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0.4" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="dataEntry" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="dataEntry" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="<structure_name>Lookup" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="<structure_name>Lookup" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="<structure_name>Lookup" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="confirm" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="1" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="confirm" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="confirm" Storyboard.TargetProperty="(Panel.ZIndex)" To="1" />

                </Storyboard>
            </VisualState>

            <VisualState x:Name="PrimaryLookupState">
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="keyEntry" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="keyEntry" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="keyEntry" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="dataEntry" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="dataEntry" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="dataEntry" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="confirm" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="confirm" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="confirm" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="<structure_name>Lookup" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="1" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="<structure_name>Lookup" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="<structure_name>Lookup" Storyboard.TargetProperty="(Panel.ZIndex)" To="1" />

                </Storyboard>
            </VisualState>

			<FIELD_LOOP>
			<IF DRILL>
			<VisualState x:Name="<FIELD_DRILLM>DrillState">
				<Storyboard>
					<DoubleAnimation Storyboard.TargetName="keyEntry" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
					<BooleanAnimationUsingKeyFrames Storyboard.TargetName="keyEntry" Storyboard.TargetProperty="(IsEnabled)">
						<DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
					</BooleanAnimationUsingKeyFrames>
					<Int32Animation Storyboard.TargetName="keyEntry" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

					<DoubleAnimation Storyboard.TargetName="dataEntry" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
					<BooleanAnimationUsingKeyFrames Storyboard.TargetName="dataEntry" Storyboard.TargetProperty="(IsEnabled)">
						<DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
					</BooleanAnimationUsingKeyFrames>
					<Int32Animation Storyboard.TargetName="dataEntry" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

					<DoubleAnimation Storyboard.TargetName="confirm" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
					<BooleanAnimationUsingKeyFrames Storyboard.TargetName="confirm" Storyboard.TargetProperty="(IsEnabled)">
						<DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
					</BooleanAnimationUsingKeyFrames>
					<Int32Animation Storyboard.TargetName="confirm" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

					<DoubleAnimation Storyboard.TargetName="partLookup" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
					<BooleanAnimationUsingKeyFrames Storyboard.TargetName="partLookup" Storyboard.TargetProperty="(IsEnabled)">
						<DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
					</BooleanAnimationUsingKeyFrames>
					<Int32Animation Storyboard.TargetName="partLookup" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

					<DoubleAnimation Storyboard.TargetName="<field_drillm>Drill" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="1" />
					<BooleanAnimationUsingKeyFrames Storyboard.TargetName="<field_drillm>Drill" Storyboard.TargetProperty="(IsEnabled)">
						<DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"></DiscreteBooleanKeyFrame>
					</BooleanAnimationUsingKeyFrames>
					<Int32Animation Storyboard.TargetName="<field_drillm>Drill" Storyboard.TargetProperty="(Panel.ZIndex)" To="1" />
				</Storyboard>
			</VisualState>
			</IF DRILL>
			</FIELD_LOOP>

        </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" IsMainMenu="True" Name="mainMenu">
            <MenuItem Header="_File">
                <MenuItem Command="{Binding Path=AddCommand}" Header="_New" >
                    <MenuItem.Icon>
                        <Image Width="16" Height="16">
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=AddCommand.IsExecutable}" Value="true">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/16x16/New.png" ></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=AddCommand.IsExecutable}" Value="false">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/16x16/Disabled/New.png" ></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator></Separator>
                <MenuItem Command="{Binding Path=ExitTheState}" Header="_Close" >
                    <MenuItem.Icon>
                        <Image Width="16" Height="16">
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=ExitTheState.IsExecutable}" Value="true">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/16x16/Back.png" ></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=ExitTheState.IsExecutable}" Value="false">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/16x16/Disabled/Back.png" ></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator></Separator>
                <MenuItem Command="Close" Header="_Exit" />
            </MenuItem>
            <MenuItem Header="_Options">
                <MenuItem Command="{Binding Path=SearchCommand}" Header="_Search" CommandParameter="PrimaryLookupState">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16">
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=SearchCommand.IsExecutable}" Value="true">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/16x16/Search.png" ></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=SearchCommand.IsExecutable}" Value="false">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/16x16/Disabled/Search.png" ></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator></Separator>
                <MenuItem Command="{Binding Path=RemoveCommand}" Header="_Delete">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16">
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=RemoveCommand.IsExecutable}" Value="true">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/16x16/Delete.png" ></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=RemoveCommand.IsExecutable}" Value="false">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/16x16/Disabled/Delete.png" ></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="Cut" Command="Cut">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/SymphonyCrescendo;component/Images/16x16/Cut.png"
                               Width="16" Height="16"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Copy" Command="Copy">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/SymphonyCrescendo;component/Images/16x16/Copy.png"
                               Width="16" Height="16"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Paste" Command="Paste">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/SymphonyCrescendo;component/Images/16x16/Paste.png"
                               Width="16" Height="16"></Image>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
			<MenuItem Header="_Data">
				<MenuItem Command="{Binding Path=NavigateDataCommand}" CommandParameter="FIRST" Header="_First" >
					<MenuItem.Icon>
						<Image Width="16" Height="16">
							<Image.Style>
								<Style>
									<Style.Triggers>
										<DataTrigger Binding="{Binding Path=NavigateDataCommand.IsExecutable}" Value="true">
											<Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/16x16/db-First-2.png" ></Setter>
										</DataTrigger>
										<DataTrigger Binding="{Binding Path=NavigateDataCommand.IsExecutable}" Value="false">
											<Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/16x16/Disabled/db-First-2.png" ></Setter>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Image.Style>
						</Image>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Command="{Binding Path=NavigateDataCommand}" CommandParameter="PREV" Header="_Previous" >
					<MenuItem.Icon>
						<Image Width="16" Height="16">
							<Image.Style>
								<Style>
									<Style.Triggers>
										<DataTrigger Binding="{Binding Path=NavigateDataCommand.IsExecutable}" Value="true">
											<Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/16x16/db-Previous-2.png" ></Setter>
										</DataTrigger>
										<DataTrigger Binding="{Binding Path=NavigateDataCommand.IsExecutable}" Value="false">
											<Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/16x16/Disabled/db-Previous-2.png" ></Setter>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Image.Style>
						</Image>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Command="{Binding Path=NavigateDataCommand}" CommandParameter="NEXT" Header="_Next" >
					<MenuItem.Icon>
						<Image Width="16" Height="16">
							<Image.Style>
								<Style>
									<Style.Triggers>
										<DataTrigger Binding="{Binding Path=NavigateDataCommand.IsExecutable}" Value="true">
											<Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/16x16/db-Next-2.png" ></Setter>
										</DataTrigger>
										<DataTrigger Binding="{Binding Path=NavigateDataCommand.IsExecutable}" Value="false">
											<Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/16x16/Disabled/db-Next-2.png" ></Setter>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Image.Style>
						</Image>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Command="{Binding Path=NavigateDataCommand}" CommandParameter="LAST" Header="_Last" >
					<MenuItem.Icon>
						<Image Width="16" Height="16">
							<Image.Style>
								<Style>
									<Style.Triggers>
										<DataTrigger Binding="{Binding Path=NavigateDataCommand.IsExecutable}" Value="true">
											<Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/16x16/db-Last-2.png" ></Setter>
										</DataTrigger>
										<DataTrigger Binding="{Binding Path=NavigateDataCommand.IsExecutable}" Value="false">
											<Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/16x16/Disabled/db-Last-2.png" ></Setter>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Image.Style>
						</Image>
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem>
        </Menu>

        <ToolBar Grid.Row="1" Name="mainToolbar">
            <Button Command="{Binding Path=ExitTheState}" >
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <Image Margin="0,0,5,0" Width="24" Height="24">
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="true">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/24x24/Back.png" ></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="false">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/24x24/Disabled/Back.png" ></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Separator></Separator>
            <Button Command="{Binding Path=SearchCommand}" CommandParameter="PrimaryLookupState" >
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <Image Margin="0,0,5,0" Width="24" Height="24">
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="true">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/24x24/Search.png" ></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="false">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/24x24/Disabled/Search.png" ></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <TextBlock Text="Search" VerticalAlignment="Center"></TextBlock>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Separator></Separator>
            <Button Command="{Binding Path=AddCommand}">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <Image Margin="0,0,5,0" Width="24" Height="24">
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="true">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/24x24/New.png" ></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="false">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/24x24/Disabled/New.png" ></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <TextBlock Text="New" VerticalAlignment="Center"></TextBlock>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button Command="{Binding Path=RemoveCommand}">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <Image Margin="0,0,5,0" Width="24" Height="24">
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="true">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/24x24/Delete.png" ></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="false">
                                            <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/24x24/Disabled/Delete.png" ></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <TextBlock Text="Remove" VerticalAlignment="Center"></TextBlock>
                    </StackPanel>
                </Button.Content>
            </Button>
			<Separator Width="2"></Separator>
			<!-- this is the navigation bar -->
			<Button Command="{Binding Path=NavigateDataCommand}" CommandParameter="FIRST">
				<Button.Content>
					<StackPanel Orientation="Horizontal">
						<Image Margin="0,0,5,0" Width="24" Height="24">
							<Image.Style>
								<Style>
									<Style.Triggers>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="true">
											<Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/24x24/db-First-2.png" ></Setter>
										</DataTrigger>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="false">
											<Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/24x24/Disabled/db-First-2.png" ></Setter>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Image.Style>
						</Image>
					</StackPanel>
				</Button.Content>
			</Button>
			<Button Command="{Binding Path=NavigateDataCommand}" CommandParameter="PREV">
				<Button.Content>
					<StackPanel Orientation="Horizontal">
						<Image Margin="0,0,5,0" Width="24" Height="24">
							<Image.Style>
								<Style>
									<Style.Triggers>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="true">
											<Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/24x24/db-Previous-2.png" ></Setter>
										</DataTrigger>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="false">
											<Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/24x24/Disabled/db-Previous-2.png" ></Setter>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Image.Style>
						</Image>
					</StackPanel>
				</Button.Content>
			</Button>
			<Button Command="{Binding Path=NavigateDataCommand}" CommandParameter="NEXT">
				<Button.Content>
					<StackPanel Orientation="Horizontal">
						<Image Margin="0,0,5,0" Width="24" Height="24">
							<Image.Style>
								<Style>
									<Style.Triggers>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="true">
											<Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/24x24/db-Next-2.png" ></Setter>
										</DataTrigger>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="false">
											<Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/24x24/Disabled/db-Next-2.png" ></Setter>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Image.Style>
						</Image>
					</StackPanel>
				</Button.Content>
			</Button>
			<Button Command="{Binding Path=NavigateDataCommand}" CommandParameter="LAST">
				<Button.Content>
					<StackPanel Orientation="Horizontal">
						<Image Margin="0,0,5,0" Width="24" Height="24">
							<Image.Style>
								<Style>
									<Style.Triggers>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="true">
											<Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/24x24/db-Last-2.png" ></Setter>
										</DataTrigger>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsEnabled}" Value="false">
											<Setter Property="Image.Source" Value="pack://application:,,,/SymphonyCrescendo;component/Images/24x24/Disabled/db-Last-2.png" ></Setter>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Image.Style>
						</Image>
					</StackPanel>
				</Button.Content>
			</Button>
        </ToolBar>

        <Border Name="keyEntry" Grid.Row="2" Opacity="0" Panel.ZIndex="0" IsEnabled="False">
            <local:<Structure_name>_KeyView></local:<Structure_name>_KeyView>
        </Border>

        <Border Name="dataEntry" Grid.Row="2" Opacity="0" Panel.ZIndex="0" IsEnabled="False">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                </Grid.RowDefinitions>
                <TabControl Grid.Row="0" SelectedIndex="{Binding Path=SelectedTabIndex, Mode=TwoWay}">
                    <TabItem Header="<Structure_name> details">
                        <local:<Structure_name>_DataView></local:<Structure_name>_DataView>
                    </TabItem>
                </TabControl>
                <Grid Grid.Row="1" HorizontalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <!-- control button -->
                    <Button Grid.Column="0" Command="{Binding Path=MasterDataComplete}"
				            CommandParameter="DataEntryState"
				            Margin="10"
				            IsDefault="True">
                        <Button.Style>
                            <Style>
                                <Style.Triggers>
                                    <!-- add mode -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=CurrentProgramMode}" Value="{x:Static symphonyVM:ProgramMode.Add}"></Condition>
                                            <Condition Binding="{Binding Path=IsAddCommandAvailable}" Value="true"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Button.Visibility" Value="Visible"></Setter>
                                        <Setter Property="Button.Content" Value="_Create and Exit"></Setter>
                                    </MultiDataTrigger>

                                    <!-- NOT add mode -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=CurrentProgramMode}" Value="{x:Static symphonyVM:ProgramMode.Add}"></Condition>
                                            <Condition Binding="{Binding Path=IsAddCommandAvailable}" Value="false"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Button.Visibility" Value="Hidden"></Setter>
                                    </MultiDataTrigger>

                                    <!-- Modify mode -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=CurrentProgramMode}" Value="{x:Static symphonyVM:ProgramMode.Modify}"></Condition>
                                            <Condition Binding="{Binding Path=IsModifyCommandAvailable}" Value="true"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Button.Visibility" Value="Visible"></Setter>
                                        <Setter Property="Button.Content" Value="_Save and Exit"></Setter>
                                    </MultiDataTrigger>

                                    <!-- NOT Modify mode -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=CurrentProgramMode}" Value="{x:Static symphonyVM:ProgramMode.Modify}"></Condition>
                                            <Condition Binding="{Binding Path=IsModifyCommandAvailable}" Value="false"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Button.Visibility" Value="Hidden"></Setter>
                                    </MultiDataTrigger>

                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button Grid.Column="1" Command="{Binding Path=QuitState}"
				            Margin="10"
				            IsCancel="True">
                        <Button.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsModifyCommandAvailable}" Value="true">
                                        <Setter Property="Button.Content" Value="_Abort Changes"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsAddCommandAvailable}" Value="true">
                                        <Setter Property="Button.Content" Value="_Abort Changes"></Setter>
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=IsModifyCommandAvailable}" Value="false"></Condition>
                                            <Condition Binding="{Binding Path=IsAddCommandAvailable}" Value="false"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Button.Content" Value="_Close"></Setter>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Grid>
        </Border>

        <Border Name="confirm" Grid.Row="2" Opacity="0" Panel.ZIndex="0" IsEnabled="False">
            <symphonyUI:DialogControl DataContext="{Binding Path=DialogVM}"></symphonyUI:DialogControl>
        </Border>

        <Border Name="<structure_name>Lookup" Grid.Row="2" Opacity="0" Panel.ZIndex="0" IsEnabled="False">
            <local:<Structure_name>_LookupView DataContext="{Binding Path=<Structure_name>ListVM}"></local:<Structure_name>_LookupView>
        </Border>

		<!-- drill lookups-->
		<FIELD_LOOP>
		<IF DRILL>
		<Border Name="<field_drillm>Drill" Grid.Row="2" Opacity="0" Panel.ZIndex="0" IsEnabled="False">
			<local:<Field_drillm>_LookupView DataContext="{Binding Path=<Field_drillm>DrillVM}"></local:<Field_drillm>_LookupView>
		</Border>
		</IF DRILL>
		</FIELD_LOOP>

    </Grid>

</UserControl>
