import System
import System.Collections
import System.Collections.Generic
import System.Diagnostics
import System.Text
import System.Windows
import System.Windows.Controls
import System.Windows.Data
import System.Windows.Documents
import System.Windows.Input
import System.Windows.Shapes
import System.Windows.Media
import System.Windows.Media.Imaging
import System.Windows.Navigation

import Symphony.Orchestrator.Library.ViewModel

namespace SymphonyOrchestrator
	
	public partial class MainWindow1 extends Window
		
		public method MainWindow1
			endparams
		proc
			this.InitializeComponent()
			
		endmethod
		
		
		private method Border_MouseLeftButtonDown, void
			sender, @object 
			e, @System.Windows.Input.MouseButtonEventArgs 
			endparams
		proc
			DragMove()
		endmethod
		
		private mVM	,@OrchestratorViewModel
		
		private method Window_Loaded, void
			sender, @object 
			e, @System.Windows.RoutedEventArgs 
			endparams
		proc
			mVM = new OrchestratorViewModel(this, new  Symphony.Orchestrator.Library.AppLogic.SymphonyOrchestratorInjectorDummy())
			mVM.DefaultValues.Use_command_line = Properties.Settings.Default.UseCommandLineInterface
			addhandler(mVM.ApplicaitonClosing, appClosing)
			this.DataContext = mVM
		endmethod
		
		private method appClosing, void
			endparams
		proc
			if (mVM.DefaultValues.Template_folder .nes. "    ")
				Properties.Settings.Default.Template_folder = mVM.DefaultValues.Template_folder
			
			Properties.Settings.Default.UseCommandLineInterface = (mVM.DefaultValues.Use_command_line == 1)
			
			Properties.Settings.Default.Save()
			
			this.Close()
			
		endmethod
		
	endclass
endnamespace
