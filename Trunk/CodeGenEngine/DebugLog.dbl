;;*****************************************************************************
;;
;; Title:       DebugLog.dbl
;;
;; Type:        Subroutine
;;
;; Description: Display a message to the screen if we're in debug mode
;;
;; Date:        6th November 2009
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2012, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import CodeGen.Engine
import CodeGen.RepositoryAPI

namespace CodeGen.Engine

    subroutine DebugLog
        required in text, a
        required in BlankLineBefore, boolean
        required in BlankLineAfter, boolean
        endparams
    proc
		if (Env.Debug&&!Env.SuppressLogging)
		begin
			if (Env.TaskMessages!=^null) then
			begin
				if (BlankLineBefore)
					Env.TaskMessages.Add("")
				Env.TaskMessages.Add(%atrim(text))
				if (BlankLineAfter)
					Env.TaskMessages.Add("")
			end
			else
			begin
				if (BlankLineBefore)
					writes(Env.Tt,"")
				writes(Env.Tt,%atrim(text))
				if (BlankLineAfter)
					writes(Env.Tt,"")
			end
		end
		xreturn
    endsubroutine

endnamespace
