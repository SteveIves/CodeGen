;; *****************************************************************************
;; 
;;  Title:       ICodeGenProvider.dbl
;; 
;;  Type:        Interfaces
;; 
;;  Description: Defines interfaces for custom token and expression classes
;; 
;;  Date:        30th August 2014
;; 
;;  Author:      Steve Ives, Synergex Professional Services Group
;;               http://www.synergex.com
;; 
;; *****************************************************************************
;; 
;;  Copyright (c) 2014, Synergex International, Inc.
;;  All rights reserved.
;; 
;;  Redistribution and use in source and binary forms, with or without
;;  modification, are permitted provided that the following conditions are met:
;; 
;;  * Redistributions of source code must retain the above copyright notice,
;;    this list of conditions and the following disclaimer.
;; 
;;  * Redistributions in binary form must reproduce the above copyright notice,
;;    this list of conditions and the following disclaimer in the documentation
;;    and/or other materials provided with the distribution.
;; 
;;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;;  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;;  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;;  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;;  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;;  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;;  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;;  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;;  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;;  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;;  POSSIBILITY OF SUCH DAMAGE.
;; 
;; *****************************************************************************

import System
import System.Collections.Generic

.array 0

namespace CodeGen.Engine

	public enum TokenCaseMode
        UppercaseOnly
        UppercaseAndLowerCase
        AllCasingOptions
    endenum
	
	;; Expansion token
    public interface IExpansionToken

        property TokenName, String
            method get
            endmethod
        endproperty

        property Description, String
            method get
            endmethod
        endproperty

        property Validity, TokenValidity
            method get
            endmethod
        endproperty

        property TokenCase, TokenCaseMode
            method get
            endmethod
        endproperty

        method Expand, String
            tkn, @Token 
            file, @FileNode 
            loops, @IEnumerable<LoopNode> 
            endparams
        endmethod

	endinterface

    ;; Expression token
    public interface IExpressionToken

        property TokenName, String
            method get
            endmethod
        endproperty

        property Description, String
            method get
            endmethod
        endproperty

        property Validity, TokenValidity
            method get
            endmethod
        endproperty

        method Evaluate, boolean
            tkn, @Token 
            file, @FileNode 
            loops, @IEnumerable<LoopNode> 
            endparams
        endmethod
    endinterface
endnamespace

