;;*****************************************************************************
;;
;; Title:       SqlName.dbl
;;
;; Type:        Function
;;
;; Description: Constructs and returns a new "SQL Name" from a field name:
;;
;; Date:        24th February 2012
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2012, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import CodeGen.Engine
import CodeGen.RepositoryAPI

namespace CodeGen.Engine

    function SqlName, string
        required in FieldName, a
        endparams

        stack record
            outdata ,string
            mh      ,i4
            ix      ,int
        endrecord

        structure chr
                    ,a1
        endstructure

    proc

        ;; Example
        ;;  Before: FIELD[2,3,4,5].FIELD.FIELD[2,3]
        ;;  After:  FIELD2_3_4_5_FIELD_FIELD2_3

        mh = mem_proc(DM_ALLOC,trim(FieldName))
        ^m(mh) = FieldName

        ;;Remove any [ characters
        repeat
        begin
            if (!instr(1,^m(mh),"["))
                exitloop
            ^m(mh) = ^m(mh) - "["
        end

        ;;Remove any ] characters
        repeat
        begin
            if (!instr(1,^m(mh),"]"))
                exitloop
            ^m(mh) = ^m(mh) - "]"
        end

        ;;Replace any , with _
        repeat
        begin
            if (!(ix=instr(1,^m(mh),",")))
                exitloop
            ^m(chr[ix],mh) = "_"
        end

		;;Replace any . with _
		repeat
		begin
			if (!(ix=instr(1,^m(mh),".")))
				exitloop
			^m(chr[ix],mh) = "_"
		end
		
		;;Replace any $ with _
		repeat
		begin
			if (!(ix=instr(1,^m(mh),"$")))
				exitloop
			^m(chr[ix],mh) = "_"
		end
		
        outdata = %atrim(^m(mh))

        mh = mem_proc(DM_FREE,mh)

        freturn outdata

    endfunction

endnamespace

