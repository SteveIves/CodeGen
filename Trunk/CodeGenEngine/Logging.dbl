;;*****************************************************************************
;;
;; Title:       Logging.dbl
;;
;; Type:        Class
;;
;; Description: Implements message logging
;;
;; Date:        20th October 2014
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2014, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************


import System

namespace CodeGen.Engine

	public class Logging

		public static method Log, void
			required in text, String
			required in BlankLineBefore, boolean
			required in BlankLineAfter, boolean
			endparams
		proc
			if (!Env.SuppressLogging)
			begin
				;;Log the message to the current task, if there is one
				if (Env.TaskMessages!=^null)
				begin
					if (BlankLineBefore)
						Env.TaskMessages.Add("")
					Env.TaskMessages.Add(text)
					if (BlankLineAfter)
						Env.TaskMessages.Add("")
				end
				
				;;Always log the message to the current task set
				if (BlankLineBefore)
					Env.TaskSetMessages.Add("")
				Env.TaskSetMessages.Add(text)
				if (BlankLineAfter)
					Env.TaskSetMessages.Add("")
			end
		endmethod
		
		public static method Log, void
			required in text, String
			endparams
		proc
			if (!Env.SuppressLogging)
				Logging.Log(text,false,false)
		endmethod
	
		public static method VerboseLog, void
			required in text, a
			required in BlankLineBefore, boolean
			required in BlankLineAfter, boolean
			endparams
		proc
			if (Env.Verbose&&!Env.SuppressLogging)
				Logging.Log(text,BlankLineBefore,BlankLineAfter)
		endmethod
		
		public static method VerboseLog, void
			required in text, a
			endparams
		proc
			if (Env.Verbose&&!Env.SuppressLogging)
				Logging.Log(text,false,false)
		endmethod
		
		public static method ErrorLog, void
			required in text, String
			endparams
		proc
			if (!Env.SuppressLogging)
			begin
				Logging.Log(String.Format("ERROR: {0}",text))
				Env.LastErrorMessage = text
			end
		endmethod
		
		public static method DebugLog, void
			required in text, String
			required in BlankLineBefore, boolean
			required in BlankLineAfter, boolean
			endparams
		proc
			if (Env.Debug&&!Env.SuppressLogging)
				Logging.Log(text,BlankLineBefore,BlankLineAfter)
		endmethod
		
		public static method DebugLog, void
			required in text, String
			endparams
		proc
			if (Env.Debug&&!Env.SuppressLogging)
				Logging.Log(text,false,false)
		endmethod
	endclass

endnamespace
