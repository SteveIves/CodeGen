
import System
import System.Collections.Generic
import CodeGen.Engine
import CodeGen.RepositoryAPI

namespace Symphony.CodeGen.Extensions
	
	public class SymphonyConverterResources implements IExpansionToken
		
		public property TokenName, String
			method get
			proc
				mreturn "SYMPHONY_CONVERTER_RESOURCES"
			endmethod
		endproperty
		
		public property Description, String
			method get
			proc
				mreturn "SYMPHONY_CONVERTER_RESOURCES"
			endmethod
		endproperty
		
		public property Validity, TokenValidity
			method get
			proc
				mreturn TokenValidity.Anywhere
			endmethod
		endproperty
		
		public property TokenCase, TokenCaseMode
			method get
			proc
				mreturn TokenCaseMode.UppercaseOnly
			endmethod
		endproperty
		
		public method Expand, String
			tkn, @Token
			file, @FileNode 
			loops, @IEnumerable<LoopNode>
			endparams
		proc
			mreturn '<SymphonyConverters:SynergyAlphaConverter x:Key="alphaConverter" />' + %char(13) + %char(10)
			&	+ '<SymphonyConverters:SynergyAlphaDateTimeConverter x:Key="alphaDateConverter"/>' + %char(13) + %char(10)
			&	+ '<SymphonyConverters:SynergyAlphaYNConverter x:Key="alphaYnConverter"/>' + %char(13) + %char(10)
			&	+ '<SymphonyConverters:SynergyDecimalConverter x:Key="decimalConverter"/>' + %char(13) + %char(10)
			&	+ '<SymphonyConverters:SynergyDecimalDateConverter x:Key="decimalDateConverter"/>' + %char(13) + %char(10)
			&	+ '<SymphonyConverters:SynergyDecimalTFConverter x:Key="decimalTFConverter"/>' + %char(13) + %char(10)
			&	+ '<SymphonyConverters:SynergyImpliedDecimalConverter x:Key="impliedDecimalConverter"/>' + %char(13) + %char(10)
			&	+ '<SymphonyConverters:SynergyIntConverter x:Key="intConverter"/>' + %char(13) + %char(10)
			&	+ '<SymphonyConverters:SynergyIntTFConverter x:Key="intTFConverter"/>' + %char(13) + %char(10)
			&	+ '<SymphonyConverters:AlphaEnumToBooleanConverter x:Key="alphaEnumConverter"/>' + %char(13) + %char(10)
			&	+ '<SymphonyConverters:DecimalEnumToBooleanConverter x:Key="decimalEnumConverter"/>' + %char(13) + %char(10)
			&	+ '<SymphonyConverters:IntEnumToBooleanConverter x:Key="intEnumConverter"/>'
		endmethod
		
	endclass
	
endnamespace
