;;*****************************************************************************
;;
;; Title:       Profile.dbl
;;
;; Type:        Class
;;
;; Description: Represents an RpsBrowser profile (repository and logical names).
;;
;; Date:        21st August 2012
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2012, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import System
import System.Collections.Generic
import System.Text

namespace RpsBrowser.Profiles

    public class Profile
        
        private mName, String, ""
        private mRpsMainFile, String, ""
        private mRpsTextFile, String, ""
        private mLogicals, @List<Logical>

        public method Profile
            endparams
        proc
            mLogicals = new List<Logical>()
        endmethod

        public property Name, String
            method get
            proc
                mreturn mName
            endmethod
            method set
            proc
                mName = value
            endmethod
        endproperty

        public property RpsMainFile, String
            method get
            proc
                mreturn mRpsMainFile
            endmethod
            method set
            proc
                mRpsMainFile = value
            endmethod
        endproperty
        
        public property RpsTextFile, String
            method get
            proc
                mreturn mRpsTextFile
            endmethod
            method set
            proc
                mRpsTextFile = value
            endmethod
        endproperty

        public property Logicals, @List<Logical>
            method get
            proc
                mreturn mLogicals
            endmethod
            method set
            proc
                mLogicals = value
            endmethod
        endproperty
        
        public class Logical

            private mLogicalName, String, ""
            private mValue, String, ""

            public method Logical
                endparams
            proc
                
            endmethod

            public method Logical
                required in aLogicalName, String
                required in aValue, String
                endparams
            proc
                mLogicalName = aLogicalName
                mValue = aValue
            endmethod

            public property LogicalName, String
                method get
                proc
                    mreturn mLogicalName
                endmethod
                method set
                proc
                    mLogicalName = value
                endmethod
            endproperty
            
            public property Value, String
                method get
                proc
                    mreturn mValue
                endmethod
                method set
                proc
                    mValue = value
                endmethod
            endproperty
            
        endclass


    endclass

endnamespace

