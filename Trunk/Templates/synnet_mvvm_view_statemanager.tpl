<CODEGEN_FILENAME>StateManager.dbl</CODEGEN_FILENAME>
<REQUIRES_USERTOKEN>MVVM_UI_NAMESPACE</REQUIRES_USERTOKEN>
;//****************************************************************************
;//
;// Title:       mvvm_view_statemanager.tpl
;//
;// Type:        CodeGen Template
;//
;// Description: Generates a WPF visual state manager
;//
;// Date:        17th February 2011
;//
;// Author:      Steve Ives, Synergex Professional Services Group
;//              http://www.synergex.com
;//
;//****************************************************************************
;//
;// Copyright (c) 2012, Synergex International, Inc.
;// All rights reserved.
;//
;// Redistribution and use in source and binary forms, with or without
;// modification, are permitted provided that the following conditions are met:
;//
;// * Redistributions of source code must retain the above copyright notice,
;//   this list of conditions and the following disclaimer.
;//
;// * Redistributions in binary form must reproduce the above copyright notice,
;//   this list of conditions and the following disclaimer in the documentation
;//   and/or other materials provided with the distribution.
;//
;// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;// POSSIBILITY OF SUCH DAMAGE.
;//
;;*****************************************************************************
;;
;; File:        StateManager.dbl
;;
;; Description: WPF visual state manager
;;
;; Type:        Class
;;
;; Author:      <AUTHOR>, <COMPANY>
;;
;;*****************************************************************************
;;
;; WARNING:     This code was generated by CodeGen. Any changes that you make
;;              to this file will be lost if the code is regenerated.
;;
;;*****************************************************************************

import System
import System.Windows
import System.Windows.Controls

namespace <MVVM_UI_NAMESPACE>

    public class StateManager extends DependencyObject

        public static method GetVisualStateProperty, @String
            required in obj, @DependencyObject
            endparams
        proc
            mreturn (string)obj.GetValue(VisualStatePropertyProperty)
        endmethod

        public static method SetVisualStateProperty, void
            required in obj, @DependencyObject
            required in value, @String
            endparams
        proc
            obj.SetValue(VisualStatePropertyProperty, value)
        endmethod

        ;;TODO: BUG: should also be "readonly"
        public static VisualStatePropertyProperty, @DependencyProperty

        static method StateManager
            endparams
        proc
            VisualStatePropertyProperty = DependencyProperty.RegisterAttached(
            &   "VisualStateProperty",
            &   ^typeof(string),
            &   ^typeof(StateManager),
            &   new FrameworkPropertyMetadata(^null,FrameworkPropertyMetadataOptions.AffectsRender,new PropertyChangedCallback(propertyChanged)))

        endmethod

        public static method propertyChanged, Void
            byval s, @DependencyObject
            byval e, DependencyPropertyChangedEventArgs
            endparams
            record
                propertyName, @String
                ctrl, @Control
            endrecord
        proc
            propertyName = (string)e.NewValue
            ctrl = (Control)s
            if (ctrl == ^null)
                throw new InvalidOperationException("This attached property only supports types derived from Control.")
            System.Windows.VisualStateManager.GoToState(ctrl, (string)e.NewValue, true)
        endmethod

    endclass

endnamespace

