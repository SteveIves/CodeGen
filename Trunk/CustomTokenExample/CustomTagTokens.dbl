;;*****************************************************************************
;;
;; Title:       CustomTagTokens.dbl
;;
;; Type:        Classes
;;
;; Description: An example of implementing custom tag loop tokens.
;;
;; Date:        26th July 2013
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2012, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import System
import CodeGen.Engine
import CodeGen.RepositoryAPI

namespace CodeGen.CustomTokenExample
	
	public class CustomTagToken1 extends CustomTagToken
		
		public override property Token, String
			method get
			proc
				mreturn "<CUSTOM_TAG_TOKEN_1>"
			endmethod
		endproperty
		
		public override method Replace         ,Boolean
			required in    Str                 ,@RpsStructure	;;Current structure
			required in    Tag                 ,@RpsTag		    ;;Current tag
			required in    TagNbr              ,int				;;Current tag number
			required in    TokenStart          ,int				;;Start position of token in buffer
			required in    TokenEnd            ,int				;;End position of token in buffer
			required in    Loop1OutputOff      ,boolean			;;Is output suppressed because of an expression
			required inout buffer              ,a			    ;;Buffer containing the token to be expanded
			required inout ErrStatus           ,boolean         ;;Error status (set to true to abort processing)
			endparams
		proc
			mreturn ReplaceToken(buffer,this.Token,"Custom tag token 1")
		endmethod
		
	endclass
	
	public class CustomTagToken2 extends CustomTagToken
		
		public override property Token, String
			method get
			proc
				mreturn "<CUSTOM_TAG_TOKEN_2>"
			endmethod
		endproperty
		
		public override method Replace         ,Boolean
			required in    Str                 ,@RpsStructure	;;Current structure
			required in    Tag                 ,@RpsTag 		;;Current tag
			required in    TagNbr              ,int				;;Current tag number
			required in    TokenStart          ,int				;;Start position of token in buffer
			required in    TokenEnd            ,int				;;End position of token in buffer
			required in    Loop1OutputOff      ,boolean			;;Is output suppressed because of an expression
			required inout buffer              ,a			    ;;Buffer containing the token to be expanded
			required inout ErrStatus           ,boolean         ;;Error status (set to true to abort processing)
			endparams
		proc
			mreturn ReplaceToken(buffer,this.Token,"Custom tag token 2")
		endmethod
		
	endclass
	
	
endnamespace

