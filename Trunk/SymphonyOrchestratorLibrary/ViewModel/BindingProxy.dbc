;;**********************************************************************
;;
;; Title:       BindingProxy.dbc
;;
;; Type:        Class
;;
;; Description: Simple proxy class to help with bindings not in the visual/logical tree
;;
;; Author:      Richard C. Morris, Synergex Professional Services Group
;;				Addapted from an example posted by Thomas Levesque (http://www.thomaslevesque.com/2011/03/21/wpf-how-to-bind-to-data-when-the-datacontext-is-not-inherited/)
;;
;; Copyright (c) 2012, Synergex International, Inc. All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************
import System
import System.Collections.Generic
import System.Text

import System.Windows

namespace Symphony.Orchestrator.Library.ViewModel
	
	public class BindingProxy extends Freezable
		
		protected override method CreateInstanceCore	,@Freezable
			endparams
		proc
			mreturn new BindingProxy()
		endmethod
		
		public property Data	,@Object
			method get
			proc
				mreturn (@Object)GetValue(DataProperty)
			endmethod
			method set
			proc
				SetValue(DataProperty, value)
			endmethod
		endproperty

		;;  Using a DependencyProperty as the backing store for Data.  This enables animation, styling, binding, etc...
		public static readonly DataProperty, @DependencyProperty, DependencyProperty.Register("Data", ^typeof(object), ^typeof(BindingProxy), new UIPropertyMetadata(^null))
	endclass
	
		
endnamespace
