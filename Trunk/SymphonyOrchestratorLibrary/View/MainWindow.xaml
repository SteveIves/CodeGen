<Window x:Class="Symphony.Orchestrator.Library.View.MainWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:ui="clr-namespace:Symphony.Orchestrator.Library.View;assembly=SymphonyOrchestratorLibrary"
             Height="500" Width="1030"  WindowStyle="None" BorderThickness="0" AllowsTransparency="True" WindowStartupLocation="CenterOwner"
             Title="Symphony Orchestrator" >
    
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/SymphonyOrchestratorVS;component/Resources/Application_Style.xaml"></ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/SymphonyConductor;component/Resources/Converters.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="applicationStates">

            <!--defbutton-->

            <VisualState x:Name="InputViewState">
                <Storyboard>

                    <DoubleAnimation Storyboard.TargetName="defbutton" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="1" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="defbutton" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="defbutton" Storyboard.TargetProperty="(Panel.ZIndex)" To="1" />

                    <DoubleAnimation Storyboard.TargetName="workingPanel" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="workingPanel" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="workingPanel" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="workingView" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="workingView" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="workingView" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="menuPanel" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="1" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="menuPanel" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="menuPanel" Storyboard.TargetProperty="(Panel.ZIndex)" To="1" />

                    <DoubleAnimation Storyboard.TargetName="inputView" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="1" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="inputView" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="inputView" Storyboard.TargetProperty="(Panel.ZIndex)" To="1" />

                </Storyboard>
            </VisualState>

            <VisualState x:Name="WorkingViewState">
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="defbutton" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="defbutton" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="defbutton" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="menuPanel" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="menuPanel" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="menuPanel" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="inputView" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="inputView" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="inputView" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="workingView" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="1" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="workingView" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="workingView" Storyboard.TargetProperty="(Panel.ZIndex)" To="1" />

                    <DoubleAnimation Storyboard.TargetName="workingPanel" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="1" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="workingPanel" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="workingPanel" Storyboard.TargetProperty="(Panel.ZIndex)" To="1" />

                </Storyboard>
            </VisualState>

            <VisualState x:Name="DefaultEntryState">

                <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="defbutton" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="defbutton" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="defbutton" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="menuPanel" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="menuPanel" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="menuPanel" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="inputView" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="inputView" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="inputView" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="workingView" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="workingView" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="workingView" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="defaultentry" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="1" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="defaultentry" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="defaultentry" Storyboard.TargetProperty="(Panel.ZIndex)" To="1" />

                </Storyboard>

            </VisualState>

            <VisualState x:Name="ErrorState">

                <Storyboard>

                    <DoubleAnimation Storyboard.TargetName="exitButton" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="exitButton" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="exitButton" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="defbutton" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="defbutton" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="defbutton" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="menuPanel" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="menuPanel" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="menuPanel" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="inputView" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="inputView" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="inputView" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="workingView" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="workingView" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="workingView" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />

                    <DoubleAnimation Storyboard.TargetName="error" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0" To="1" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="error" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="error" Storyboard.TargetProperty="(Panel.ZIndex)" To="1" />

                </Storyboard>

            </VisualState>


        </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>


    <Grid Background="Black">

        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
        </Grid.RowDefinitions>

        <Border x:Name="menuBar"  Margin="1" Grid.Row="0" BorderBrush="{DynamicResource SymphonyBorderColor}" BorderThickness="1" CornerRadius="5"
                HorizontalAlignment="Stretch" Background="{DynamicResource SymphonyBorderBackground}"
                MouseLeftButtonDown="Border_MouseLeftButtonDown">
            <!--MouseLeftButtonDown="Border_MouseLeftButtonDown"-->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Button x:Name="exitButton" Grid.Row="0" Grid.Column="0" ToolTip="Close Orchestrator" Margin="10,2,10,2" Style="{StaticResource TransperentButtonStyle}" Command="{Binding Path=ExitApplicationCommand}">
                    <Button.Content>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Image Grid.Row="0" Grid.Column="0" Source="pack://application:,,,/SymphonyOrchestratorLibrary;component/Images/dark-blue-led-circle-hi.png"></Image>
                            <Image Grid.Row="0" Grid.Column="0" Source="pack://application:,,,/SymphonyOrchestratorLibrary;component/Images/Exit.png"
                               VerticalAlignment="Center" HorizontalAlignment="Center" Width="28" Height="28"></Image>
                        </Grid>
                    </Button.Content>
                </Button>

                <StackPanel Grid.Row="0" Grid.Column="1" x:Name="menuPanel" Orientation="Horizontal" Visibility="Visible">
                    <Button ToolTip="New Command" Margin="10,2,10,2"  Style="{StaticResource TransperentButtonStyle}" Command="{Binding Path=AddCodegenCommand}">
                        <Button.Content>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Row="0" Grid.Column="0" Source="pack://application:,,,/SymphonyOrchestratorLibrary;component/Images/dark-blue-led-circle-hi.png"></Image>
                                <Image Grid.Row="0" Grid.Column="0" Source="pack://application:,,,/SymphonyOrchestratorLibrary;component/Images/Plus.png"
                               VerticalAlignment="Center" HorizontalAlignment="Center" Width="28" Height="28">
                                </Image>
                            </Grid>
                        </Button.Content>
                    </Button>

                    <Button ToolTip="Delete Command"  Margin="10,2,10,2" Style="{StaticResource TransperentButtonStyle}" Command="{Binding Path=DeleteCodegenCommand}">
                        <Button.Content>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Row="0" Grid.Column="0" Source="pack://application:,,,/SymphonyOrchestratorLibrary;component/Images/dark-blue-led-circle-hi.png">
                                </Image>
                                <Image Grid.Row="0" Grid.Column="0" 
                               VerticalAlignment="Center" HorizontalAlignment="Center" Width="28" Height="28">
                                    <Image.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=DeleteCodegenCommand.IsExecutable}" Value="True">
                                                    <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyOrchestratorLibrary;component/Images/Minus.png"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=DeleteCodegenCommand.IsExecutable}" Value="False">
                                                    <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyOrchestratorLibrary;component/Images/Disabled/Minus.png"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Grid>
                        </Button.Content>
                    </Button>

                    <Button ToolTip="Build selected"  Margin="10,2,10,2" Style="{StaticResource TransperentButtonStyle}" Command="{Binding Path=DoBuildCommand}" CommandParameter="SELECTED">
                        <Button.Content>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Row="0" Grid.Column="0" Source="pack://application:,,,/SymphonyOrchestratorLibrary;component/Images/dark-blue-led-circle-hi.png"></Image>
                                <Image Grid.Row="0" Grid.Column="0" 
                               VerticalAlignment="Center" HorizontalAlignment="Center" Width="28" Height="28">
                                    <Image.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=DoBuildCommand.IsExecutable}" Value="True">
                                                    <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyOrchestratorLibrary;component/Images/mm-Play.png"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=DoBuildCommand.IsExecutable}" Value="False">
                                                    <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyOrchestratorLibrary;component/Images/Disabled/mm-Play.png"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Grid>
                        </Button.Content>
                    </Button>
                    <Button ToolTip="Build all"  Margin="10,2,10,2" Style="{StaticResource TransperentButtonStyle}" Command="{Binding Path=DoBuildCommand}" CommandParameter="ALL">
                        <Button.Content>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Row="0" Grid.Column="0" Source="pack://application:,,,/SymphonyOrchestratorLibrary;component/Images/dark-blue-led-circle-hi.png"></Image>
                                <Image Grid.Row="0" Grid.Column="0" 
                               VerticalAlignment="Center" HorizontalAlignment="Center" Width="28" Height="28">
                                    <Image.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=DoBuildCommand.IsExecutable}" Value="True">
                                                    <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyOrchestratorLibrary;component/Images/mm-FastForward.png"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=DoBuildCommand.IsExecutable}" Value="False">
                                                    <Setter Property="Image.Source" Value="pack://application:,,,/SymphonyOrchestratorLibrary;component/Images/Disabled/mm-FastForward.png"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Grid>
                        </Button.Content>
                    </Button>
                </StackPanel>

                <StackPanel x:Name="workingPanel" Grid.Row="0" Grid.Column="1" Opacity="0" Orientation="Vertical" VerticalAlignment="Center">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Processing:" FontSize="14" Margin="0,0,20,0"></TextBlock>
                        <TextBlock Text="{Binding Path=ProcessingFileName}" FontSize="16"></TextBlock>
                    </StackPanel>
                    <ProgressBar Width="290" IsIndeterminate="{Binding Path=ProcessingFileNameActive}" Margin="5,5,5,5" Height="10"
                                 HorizontalAlignment="Left"></ProgressBar>
                </StackPanel>

                <Button x:Name="defbutton" Grid.Row="0" Grid.Column="3" ToolTip="Defaults" Margin="10,2,10,2" Style="{StaticResource TransperentButtonStyle}" Command="{Binding Path=NavigateState}"
                        CommandParameter="DefaultEntryState">
                    <Button.Content>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Image Grid.Row="0" Grid.Column="0" Source="pack://application:,,,/SymphonyOrchestratorLibrary;component/Images/dark-blue-led-circle-hi.png"></Image>
                            <Image Grid.Row="0" Grid.Column="0" Source="pack://application:,,,/SymphonyOrchestratorLibrary;component/Images/icon-symphony-28x28.png"
                               VerticalAlignment="Center" HorizontalAlignment="Center" Width="28" Height="28"></Image>
                        </Grid>
                    </Button.Content>
                </Button>

            </Grid>
        </Border>

        <Border x:Name="inputView" Margin="1" Grid.Row="1" BorderBrush="{DynamicResource SymphonyBorderColor}" BorderThickness="1" CornerRadius="5" HorizontalAlignment="Stretch"
                Opacity="0" IsEnabled="False" Panel.ZIndex="0">
            <Grid Grid.Row="1">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MinWidth="300"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <ui:CommandList Grid.Column="0" ></ui:CommandList>

                <Border Grid.Column="1" Background="{DynamicResource SymphonyBorderBackground}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Row="0" Grid.Column="1" Text="Null command lists" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,20,0,0"></TextBlock>

                        <ui:CommandDetails Grid.Row="0" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="3" DataContext="{Binding Path=SingleCodeGenCommand}">
                            <ui:CommandDetails.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.ItemSelected}" Value="true">
                                            <Setter Property="ui:CommandDetails.Visibility" Value="Visible"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.ItemSelected}" Value="false">
                                            <Setter Property="ui:CommandDetails.Visibility" Value="Hidden"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ui:CommandDetails.Style>
                        </ui:CommandDetails>


                    </Grid>
                </Border>
            </Grid>
        </Border>

        <Border x:Name="workingView" Margin="1" Grid.Row="1" BorderBrush="{DynamicResource SymphonyBorderColor}" BorderThickness="1" CornerRadius="5" HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Opacity="0" IsEnabled="False" Panel.ZIndex="0">

            <ui:ExecutionResults></ui:ExecutionResults>

        </Border>

        <Border x:Name="defaultentry" Margin="1" Grid.Row="1" BorderBrush="{DynamicResource SymphonyBorderColor}" BorderThickness="1" CornerRadius="5" HorizontalAlignment="Stretch"
                 VerticalAlignment="Stretch"
                Opacity="0" IsEnabled="False" Panel.ZIndex="0"
                Background="{DynamicResource SymphonyBorderBackground}">
            <ui:DefaultValuesView DataContext="{Binding Path=DefaultValues}"></ui:DefaultValuesView>

        </Border>

        <Border x:Name="error" Margin="1" Grid.Row="1" BorderBrush="{DynamicResource SymphonyBorderColor}" BorderThickness="1" CornerRadius="5" HorizontalAlignment="Stretch"
                 VerticalAlignment="Stretch"
                Opacity="0" IsEnabled="False" Panel.ZIndex="0"
                Background="{DynamicResource SymphonyBorderBackground}">
            <ui:ErrorView></ui:ErrorView>

        </Border>

        <StatusBar Grid.Row="2" Background="#2a3a57" >
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>

            <StatusBarItem Grid.Column="0">
                <TextBlock Text="{Binding Path=ProjectFileName}" Margin="2,1,2,1" Foreground="White"></TextBlock>
            </StatusBarItem>

            <StatusBarItem Grid.Column="2">
                <TextBlock Text="[" Margin="1,1,1,1" Foreground="White"></TextBlock>
            </StatusBarItem>
            <StatusBarItem Grid.Column="3">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Path=ProductVersion, Mode=OneTime}" Margin="2,1,2,1" Foreground="White"></TextBlock>
                    <TextBlock Text="/" Foreground="White"></TextBlock>
                    <TextBlock Text="{Binding Path=LibraryVersion, Mode=OneTime}" Margin="2,1,2,1" Foreground="White"></TextBlock>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem Grid.Column="4">
                <TextBlock Text="]" Margin="1,1,1,1" Foreground="White"></TextBlock>
            </StatusBarItem>
        </StatusBar>

    </Grid>

</Window>
