<!--
 WARNING: This code was generated by CodeGen. Any changes that you
          make to this code will be overwritten if the code is regenerated!

 Template author:	Richard C. Morris, Synergex Professional Services Group

 Template Name:	Symphony Framework : SYMPHONY_STYLE.tpl

-->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:symphonyConverters="clr-namespace:Symphony.Conductor.Converters;assembly=SymphonyConductor"
    xmlns:symphonyTriggers="clr-namespace:Symphony.Conductor.Triggers;assembly=SymphonyConductor"
    xmlns:symphonyUI="clr-namespace:Symphony.Crescendo.Presentation;assembly=SymphonyCrescendo"
    xmlns:symphonyControls="clr-namespace:Symphony.Conductor.Controls;assembly=SymphonyConductor"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity">

    <ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/SymphonyConductor;component/Resources/Styles.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SymphonyConductor;component/Resources/Converters.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SymphonyOrchestratorLibrary;component/Resources/Orchestrator_defaults_Content.CodeGen.xaml"/>
     </ResourceDictionary.MergedDictionaries>

	<Style x:Key="Orchestrator_defaults_Rps_main_file_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="RPS Main file"
						IsEnabled="{Binding Path=Rps_main_fileIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="Orchestrator_defaults_Rps_main_file_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <symphonyUI:SearchTextBox
						HorizontalAlignment="Left"
                        Name="ctlOrchestrator_defaults_Rps_main_file"
                        Text="{Binding Path=Rps_main_file, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=PropertyChanged,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
						SearchMode="Delayed"
						                        Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.FindFileCommand}"
                        CommandParameter="FindDEFRPSMAINDrillState"
                        MaxLength="255"
						Width="500"
                        IsEnabled="{Binding Path=Rps_main_fileIsEnabled}"
						IsReadOnly="{Binding Path=Rps_main_fileIsReadOnly}"
						VerticalAlignment="Center"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                        <symphonyUI:SearchTextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Rps_main_fileIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Rps_main_file}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background" >
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </symphonyUI:SearchTextBox.Style>
                    </symphonyUI:SearchTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Orchestrator_defaults_Rps_main_file_noDrill_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        Name="ctlOrchestrator_defaults_Rps_main_file_noDrill"
                        Text="{Binding Path=Rps_main_file, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=PropertyChanged,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="255"
						Width="500"
                        IsEnabled="{Binding Path=Rps_main_fileIsEnabled}"
						IsReadOnly="{Binding Path=Rps_main_fileIsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						<TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Rps_main_fileIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Rps_main_file_noDrill}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background" >
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="Orchestrator_defaults_Rps_text_file_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="RPS Text file"
						IsEnabled="{Binding Path=Rps_text_fileIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="Orchestrator_defaults_Rps_text_file_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <symphonyUI:SearchTextBox
						HorizontalAlignment="Left"
                        Name="ctlOrchestrator_defaults_Rps_text_file"
                        Text="{Binding Path=Rps_text_file, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=PropertyChanged,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
						SearchMode="Delayed"
						                        Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.FindFileCommand}"
                        CommandParameter="FindDEFRPSTEXTDrillState"
                        MaxLength="255"
						Width="500"
                        IsEnabled="{Binding Path=Rps_text_fileIsEnabled}"
						IsReadOnly="{Binding Path=Rps_text_fileIsReadOnly}"
						VerticalAlignment="Center"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                        <symphonyUI:SearchTextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Rps_text_fileIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Rps_text_file}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background" >
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </symphonyUI:SearchTextBox.Style>
                    </symphonyUI:SearchTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Orchestrator_defaults_Rps_text_file_noDrill_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        Name="ctlOrchestrator_defaults_Rps_text_file_noDrill"
                        Text="{Binding Path=Rps_text_file, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=PropertyChanged,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="255"
						Width="500"
                        IsEnabled="{Binding Path=Rps_text_fileIsEnabled}"
						IsReadOnly="{Binding Path=Rps_text_fileIsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						<TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Rps_text_fileIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Rps_text_file_noDrill}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background" >
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="Orchestrator_defaults_Template_folder_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Template folder"
						IsEnabled="{Binding Path=Template_folderIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="Orchestrator_defaults_Template_folder_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <symphonyUI:SearchTextBox
						HorizontalAlignment="Left"
                        Name="ctlOrchestrator_defaults_Template_folder"
                        Text="{Binding Path=Template_folder, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=PropertyChanged,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
						SearchMode="Delayed"
						                        Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.FindFolderCommand}"
                        CommandParameter="FindDEFTemplateDrillState"
                        MaxLength="255"
						Width="500"
                        IsEnabled="{Binding Path=Template_folderIsEnabled}"
						IsReadOnly="{Binding Path=Template_folderIsReadOnly}"
						VerticalAlignment="Center"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                        <symphonyUI:SearchTextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Template_folderIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Template_folder}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background" >
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </symphonyUI:SearchTextBox.Style>
                    </symphonyUI:SearchTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Orchestrator_defaults_Template_folder_noDrill_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        Name="ctlOrchestrator_defaults_Template_folder_noDrill"
                        Text="{Binding Path=Template_folder, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=PropertyChanged,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="255"
						Width="500"
                        IsEnabled="{Binding Path=Template_folderIsEnabled}"
						IsReadOnly="{Binding Path=Template_folderIsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						<TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Template_folderIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Template_folder_noDrill}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background" >
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="Orchestrator_defaults_Output_folder_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Output folder"
						IsEnabled="{Binding Path=Output_folderIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="Orchestrator_defaults_Output_folder_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <symphonyUI:SearchTextBox
						HorizontalAlignment="Left"
                        Name="ctlOrchestrator_defaults_Output_folder"
                        Text="{Binding Path=Output_folder, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=PropertyChanged,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
						SearchMode="Delayed"
						                        Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.FindFolderCommand}"
                        CommandParameter="FindDEFOutputDrillState"
                        MaxLength="255"
						Width="500"
                        IsEnabled="{Binding Path=Output_folderIsEnabled}"
						IsReadOnly="{Binding Path=Output_folderIsReadOnly}"
						VerticalAlignment="Center"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                        <symphonyUI:SearchTextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Output_folderIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Output_folder}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background" >
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </symphonyUI:SearchTextBox.Style>
                    </symphonyUI:SearchTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Orchestrator_defaults_Output_folder_noDrill_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        Name="ctlOrchestrator_defaults_Output_folder_noDrill"
                        Text="{Binding Path=Output_folder, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=PropertyChanged,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="255"
						Width="500"
                        IsEnabled="{Binding Path=Output_folderIsEnabled}"
						IsReadOnly="{Binding Path=Output_folderIsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						<TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Output_folderIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Output_folder_noDrill}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background" >
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="Orchestrator_defaults_Add_folder_to_namespace_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Add folder name to namespace?"
						IsEnabled="{Binding Path=Add_folder_to_namespaceIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="Orchestrator_defaults_Add_folder_to_namespace_style" TargetType="{x:Type symphonyControls:FieldControl}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <CheckBox
						HorizontalAlignment="Left"
                        Name="ctlOrchestrator_defaults_Add_folder_to_namespace"
						Content="Add folder name to namespace?"
                        IsChecked="{Binding Path=Add_folder_to_namespace, Converter={StaticResource decimalTFConverter}}"
                        IsEnabled="{Binding Path=Add_folder_to_namespaceIsEnabled}"
                        VerticalAlignment="Center"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                        <CheckBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Add_folder_to_namespaceIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Add_folder_to_namespace}"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="Orchestrator_defaults_Replace_file_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Replace exiting file?"
						IsEnabled="{Binding Path=Replace_fileIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="Orchestrator_defaults_Replace_file_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <ComboBox
						HorizontalAlignment="Left"
                        Name="ctlOrchestrator_defaults_Replace_file"
                        ItemsSource="{Binding Source={StaticResource REPLACE_FILEitems}}"
                        DisplayMemberPath="Description"
                        SelectedValue="{Binding Path=Replace_file, Converter={StaticResource decimalConverter},
						ValidatesOnDataErrors=True}"
						Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        SelectedValuePath="IndexValue"
                        IsEnabled="{Binding Path=Replace_fileIsEnabled}"
						Width="48"
						Margin="0,1,0,1"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                        <ComboBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Replace_fileIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Replace_file}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="ComboBox.Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="Orchestrator_defaults_Namespace_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Namespace"
						IsEnabled="{Binding Path=NamespaceIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="Orchestrator_defaults_Namespace_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        Name="ctlOrchestrator_defaults_Namespace"
                        Text="{Binding Path=Namespace, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="100"
						Width="300"
                        IsEnabled="{Binding Path=NamespaceIsEnabled}"
						IsReadOnly="{Binding Path=NamespaceIsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						<TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=NamespaceIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Namespace}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="Orchestrator_defaults_Character_width_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Character width"
						IsEnabled="{Binding Path=Character_widthIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="Orchestrator_defaults_Character_width_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <symphonyUI:SynergyDecimalBox
						HorizontalAlignment="Left"
                        Name="ctlOrchestrator_defaults_Character_width"
                        Text="{Binding Path=Character_width, Converter={StaticResource decimalConverter}  
						,UpdateSourceTrigger=Default
                        ,ValidatesOnDataErrors=True}"
                        Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        IsEnabled="{Binding Path=Character_widthIsEnabled}"
						IsReadOnly="{Binding Path=Character_widthIsReadOnly}"
                        SynergyDecimalField="False"                         MaxLength="3"
						Width="48"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                        <symphonyUI:SynergyDecimalBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Character_widthIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Character_width}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </symphonyUI:SynergyDecimalBox.Style>
                    </symphonyUI:SynergyDecimalBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="Orchestrator_defaults_Prefix_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Field prefix value"
						IsEnabled="{Binding Path=PrefixIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="Orchestrator_defaults_Prefix_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        Name="ctlOrchestrator_defaults_Prefix"
                        Text="{Binding Path=Prefix, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="30"
						Width="480"
                        IsEnabled="{Binding Path=PrefixIsEnabled}"
						IsReadOnly="{Binding Path=PrefixIsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						<TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=PrefixIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Prefix}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="Orchestrator_defaults_Show_verbose_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Show verbose CodeGen output"
						IsEnabled="{Binding Path=Show_verboseIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="Orchestrator_defaults_Show_verbose_style" TargetType="{x:Type symphonyControls:FieldControl}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <CheckBox
						HorizontalAlignment="Left"
                        Name="ctlOrchestrator_defaults_Show_verbose"
						Content="Show verbose CodeGen output"
                        IsChecked="{Binding Path=Show_verbose, Converter={StaticResource decimalTFConverter}}"
                        IsEnabled="{Binding Path=Show_verboseIsEnabled}"
                        VerticalAlignment="Center"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                        <CheckBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Show_verboseIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Show_verbose}"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="Orchestrator_defaults_Use_command_line_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Use command line interface?"
						IsEnabled="{Binding Path=Use_command_lineIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="Orchestrator_defaults_Use_command_line_style" TargetType="{x:Type symphonyControls:FieldControl}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <CheckBox
						HorizontalAlignment="Left"
                        Name="ctlOrchestrator_defaults_Use_command_line"
						Content="Use command line interface?"
                        IsChecked="{Binding Path=Use_command_line, Converter={StaticResource decimalTFConverter}}"
                        IsEnabled="{Binding Path=Use_command_lineIsEnabled}"
                        VerticalAlignment="Center"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                        <CheckBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Use_command_lineIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Use_command_line}"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="Orchestrator_defaults_Create_command_script_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Create CodeGen input script?"
						IsEnabled="{Binding Path=Create_command_scriptIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="Orchestrator_defaults_Create_command_script_style" TargetType="{x:Type symphonyControls:FieldControl}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <CheckBox
						HorizontalAlignment="Left"
                        Name="ctlOrchestrator_defaults_Create_command_script"
						Content="Create CodeGen input script?"
                        IsChecked="{Binding Path=Create_command_script, Converter={StaticResource decimalTFConverter}}"
                        IsEnabled="{Binding Path=Create_command_scriptIsEnabled}"
                        VerticalAlignment="Center"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                        <CheckBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Create_command_scriptIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Create_command_script}"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="Orchestrator_defaults_Command_script_name_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Command script name"
						IsEnabled="{Binding Path=Command_script_nameIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="Orchestrator_defaults_Command_script_name_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <symphonyUI:SearchTextBox
						HorizontalAlignment="Left"
                        Name="ctlOrchestrator_defaults_Command_script_name"
                        Text="{Binding Path=Command_script_name, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
						SearchMode="Delayed"
						                        Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.FindFileCommand}"
                        CommandParameter="FindCommandScriptDrillState"
                        MaxLength="255"
						Width="500"
                        IsEnabled="{Binding Path=Command_script_nameIsEnabled}"
						IsReadOnly="{Binding Path=Command_script_nameIsReadOnly}"
						VerticalAlignment="Center"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                        <symphonyUI:SearchTextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Command_script_nameIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Command_script_name}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background" >
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </symphonyUI:SearchTextBox.Style>
                    </symphonyUI:SearchTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Orchestrator_defaults_Command_script_name_noDrill_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        Name="ctlOrchestrator_defaults_Command_script_name_noDrill"
                        Text="{Binding Path=Command_script_name, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="255"
						Width="500"
                        IsEnabled="{Binding Path=Command_script_nameIsEnabled}"
						IsReadOnly="{Binding Path=Command_script_nameIsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						<TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Command_script_nameIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Command_script_name_noDrill}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background" >
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="Orchestrator_defaults_Data_mapping_filename_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Data mapping filename"
						IsEnabled="{Binding Path=Data_mapping_filenameIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="Orchestrator_defaults_Data_mapping_filename_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <symphonyUI:SearchTextBox
						HorizontalAlignment="Left"
                        Name="ctlOrchestrator_defaults_Data_mapping_filename"
                        Text="{Binding Path=Data_mapping_filename, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
						SearchMode="Delayed"
						                        Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.FindFileCommand}"
                        CommandParameter="FindMappingFileDrillState"
                        MaxLength="255"
						Width="500"
                        IsEnabled="{Binding Path=Data_mapping_filenameIsEnabled}"
						IsReadOnly="{Binding Path=Data_mapping_filenameIsReadOnly}"
						VerticalAlignment="Center"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                        <symphonyUI:SearchTextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Data_mapping_filenameIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Data_mapping_filename}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background" >
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </symphonyUI:SearchTextBox.Style>
                    </symphonyUI:SearchTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Orchestrator_defaults_Data_mapping_filename_noDrill_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        Name="ctlOrchestrator_defaults_Data_mapping_filename_noDrill"
                        Text="{Binding Path=Data_mapping_filename, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="255"
						Width="500"
                        IsEnabled="{Binding Path=Data_mapping_filenameIsEnabled}"
						IsReadOnly="{Binding Path=Data_mapping_filenameIsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						<TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Data_mapping_filenameIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Data_mapping_filename_noDrill}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background" >
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="Orchestrator_defaults_Show_column_display_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Show column display"
						IsEnabled="{Binding Path=Show_column_displayIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="Orchestrator_defaults_Show_column_display_style" TargetType="{x:Type symphonyControls:FieldControl}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <CheckBox
						HorizontalAlignment="Left"
                        Name="ctlOrchestrator_defaults_Show_column_display"
						Content="Show column display"
                        IsChecked="{Binding Path=Show_column_display, Converter={StaticResource decimalTFConverter}}"
                        IsEnabled="{Binding Path=Show_column_displayIsEnabled}"
                        VerticalAlignment="Center"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                        <CheckBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Show_column_displayIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Show_column_display}"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="Orchestrator_defaults_Project_relative_path_root_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Root folder path"
						IsEnabled="{Binding Path=Project_relative_path_rootIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="Orchestrator_defaults_Project_relative_path_root_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        Name="ctlOrchestrator_defaults_Project_relative_path_root"
                        Text="{Binding Path=Project_relative_path_root, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=Default,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="255"
						Width="500"
                        IsEnabled="{Binding Path=Project_relative_path_rootIsEnabled}"
						IsReadOnly="{Binding Path=Project_relative_path_rootIsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						<TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Project_relative_path_rootIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Project_relative_path_root}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="Orchestrator_defaults_Use_project_folder_as_root_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Use project folder?"
						IsEnabled="{Binding Path=Use_project_folder_as_rootIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="Orchestrator_defaults_Use_project_folder_as_root_style" TargetType="{x:Type symphonyControls:FieldControl}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <CheckBox
						HorizontalAlignment="Left"
                        Name="ctlOrchestrator_defaults_Use_project_folder_as_root"
						Content="Use project folder?"
                        IsChecked="{Binding Path=Use_project_folder_as_root, Converter={StaticResource decimalTFConverter}}"
                        IsEnabled="{Binding Path=Use_project_folder_as_rootIsEnabled}"
                        VerticalAlignment="Center"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                        <CheckBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Use_project_folder_as_rootIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Use_project_folder_as_root}"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="Orchestrator_defaults_Custom_data_mapping_prompt" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Label
						Content="Custom mapping"
						IsEnabled="{Binding Path=Custom_data_mappingIsEnabled}">
					</Label>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="Orchestrator_defaults_Custom_data_mapping_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <symphonyUI:SearchTextBox
						HorizontalAlignment="Left"
                        Name="ctlOrchestrator_defaults_Custom_data_mapping"
                        Text="{Binding Path=Custom_data_mapping, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=PropertyChanged,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
						SearchMode="Delayed"
						                        Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.FindFileCommand}"
                        CommandParameter="FindCUSTOMMAPDrillState"
                        MaxLength="255"
						Width="500"
                        IsEnabled="{Binding Path=Custom_data_mappingIsEnabled}"
						IsReadOnly="{Binding Path=Custom_data_mappingIsReadOnly}"
						VerticalAlignment="Center"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
                        <symphonyUI:SearchTextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Custom_data_mappingIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Custom_data_mapping}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background" >
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </symphonyUI:SearchTextBox.Style>
                    </symphonyUI:SearchTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Orchestrator_defaults_Custom_data_mapping_noDrill_style" TargetType="{x:Type symphonyControls:FieldControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type symphonyControls:FieldControl}">
                    <TextBox
                        Name="ctlOrchestrator_defaults_Custom_data_mapping_noDrill"
                        Text="{Binding Path=Custom_data_mapping, Converter={StaticResource alphaConverter}, UpdateSourceTrigger=PropertyChanged,
                                ValidatesOnDataErrors=True}"
                                Validation.ErrorTemplate="{StaticResource validationTemplate}"
                        MaxLength="255"
						Width="500"
                        IsEnabled="{Binding Path=Custom_data_mappingIsEnabled}"
						IsReadOnly="{Binding Path=Custom_data_mappingIsReadOnly}"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						ToolTip="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors), Converter={StaticResource errorConveter}}">
						<TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Custom_data_mappingIsFocused}" Value="true">
                                        <Setter Property="FocusManager.FocusedElement"
                                                Value="{Binding ElementName=ctlOrchestrator_defaults_Custom_data_mapping_noDrill}"></Setter>
                                    </DataTrigger>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(Validation.HasError)}" Value="True">
										<Setter Property="TextBox.Background" >
											<Setter.Value>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStop Offset="0.2" Color="WhiteSmoke" />
														<GradientStop Offset="3" Color="Red" />
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
</ResourceDictionary>

