
Using CodeGen on OpenVMS
===============================================================================

IMPORTANT NOTES

 1. Because of the long names generated by the prototyping procedures the 
    CodeGen environment MUST be located on an OpenVMS disk volume that is 
    formatted as ODS-5. You will not be able to build CodeGen on ODS-2
    formatted disks.

 2. Because of the format of the ZIP files that CodePlex creates when you 
    download a project, care needs to be taken when unzipping the files onto 
	an OpenVMS system. We recommend that you use the UnZip tool from Info-ZIP 
	and use the -aa option, which treats all files as text files. Without 
	using this option all files are treated as binary files, which corrupts 
	the line termination characters of the extracted source files and command
	procedures. If this happens you won't be able to build CodeGen. You can
	download the Info-ZIP UnZip tool for free from:
	
	ftp://ftp.info-zip.org/pub/infozip/vms. 

Build Procedure

 1. Ensure that you have a recent version of Synergy/DE installed on your
    OpenVMS system.

 2. Download the latest source code zip file from CodePlex.

 3. FTP the zip file to the OpenVMS system using BINARY MODE. 

 4. Create a new empty directory where you would like the CodeGen source
    files to be extracted, then move to that directory. We recommend that
	you name the directory "CODEGEN". For example:

	$ CREATE/DIR DKA0:[DEVELOPMENT.CODEGEN]
	$ SET DEF DKA0:[DEVELOPMENT.CODEGEN]

 5. Move the ZIP file to your new directory and extract its contents. Several
    new sub-directories will be created. You need to ensure that you unzip all
	of the files as "text" files. If you are using the Info-ZIP unzip tool then
	you do this using the -aa command line option. For example: 

    $ COPY DKA0:[DOWNLOADS]CODEGEN-16219.ZIP DKA0:[DEVELOPMENT.CODEGEN]
	$ UNZIP -aa CODEGEN-16219.ZIP

	Note: that the "16219" represents the "change set number" of the source
	code distribution that you downloaded. This number changes each time new
	code is checked in.
 
 6. Move to the [.TRADITIONALSYNERGY.OPENVMS] directory which was created when
    when you unzipped the source distribution:
 
    $ SET DEF [.TRADITIONALSYNERGY.OPENVMS]
 
 7. Execute the BUILD.COM command procedure. You will see various messages as
    the build proceeds:
 
    $ @BUILD ALL

 8. Once the build has completed, configure your CodeGen environment by setting
    one or more of these logical names:

    CODEGEN_TPLDIR		Directory spec     Default location of template files
    CODEGEN_OUTDIR		Directory spec     Default location for generated files
    CODEGEN_AUTHOR		"Your name"	       Inserted by the <AUTHOR> token
    CODEGEN_COMPANY		"Your company"     Inserted by the <COMPANY> token

    You should also call CodeGen's SETUP.COM file (you'll find it in the same
    directory as BUILD.COM) after you have set the above configuration options.
	The SETUP.COM procedure defines any of these logicals that you have not set
	and also defines various global symbols that are used to execute the
	various programs that CodeGen provides.

	For example, you might configure your environment in your LOGIN.COM file
	like this:

	$ DEFINE/NOLOG CODEGEN_TPLDIR  DKA0:[DEVELOPMENT.TEMPLATES]
	$ DEFINE/NOLOG CODEGEN_OUTDIR  DKA0:[DEVELOPMENT.SOURCE.GENERATED]
	$ DEFINE/NOLOG CODEGEN_AUTHOR  "Steve Ives"
	$ DEFINE/NOLOG CODEGEN_COMPANY "Synergex International, Inc."
	$ @DKA0:[DEVELOPMENT.CODEGEN.TRADITIONALSYNERGY.OPENVMS]SETUP.COM

 9. Having executed these commands you should be able to use CodeGen. Give it
    a try:

	$ CODEGEN

	If you don't specify any command line options then CodeGen doesn't know
	what you want to do, so it should respond like this:

	$ CODEGEN
	Nothing to do - specify template(s) with -t option!

Congratulations, if you made it this far then CodeGen is now ready to be used!
