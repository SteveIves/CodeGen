# *****************************************************************************
#
# Title:       build
#
# Type:        Linux shell script (BASH)
#
# Description: Builds CodeGen and utilities under Traditional Synergy on Linux
#
# Date:        10th May 2012
#
# Author:      Steve Ives, Synergex Professional Services Group
#              http://www.synergex.com
#
# *****************************************************************************
#
# Copyright (c) 2012, Synergex International, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# *****************************************************************************
echo
echo CodeGen Traditional Synergy build
echo =================================
export ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
#
pushd $ROOT &> /dev/null
#
echo Converting files to UNIX format ...
find $ROOT/../../. -type f -exec dos2unix {} {} ';' &> /dev/null
#
echo Configuring environment ...
export REPOSITORY_SRC=$ROOT/../../RepositoryAPI
export SMC_SRC=$ROOT/../../MethodCatalogAPI
export CODEGEN_SRC=$ROOT/../../CodeGenEngine
export CUSTOM_SRC=$ROOT/../../CustomTokenExample
export MAINLINE_SRC=$ROOT/../../CodeGen
export CREATEFILE_SRC=$ROOT/../../CreateFile
export MAPPREP_SRC=$ROOT/../../MapPrep
export RPSINFO_SRC=$ROOT/../../RpsInfo
export SMCINFO_SRC=$ROOT/../../SmcInfo
export CODEGEN_OBJ=$ROOT/obj
export CODEGEN_EXE=$ROOT/exe
export SYNEXPDIR=$ROOT/hdr
export SYNIMPDIR=$ROOT/hdr
#
if ! [ -a "$SYNEXPDIR/." ]
then
  echo Creating hdr directory
  mkdir $SYNEXPDIR
fi
if ! [ -a "$CODEGEN_OBJ/." ]
then
  echo Creating obj directory
  mkdir $CODEGEN_OBJ
fi
if ! [ -a "$CODEGEN_EXE/." ]
then
  echo Creating exe directory
  mkdir $CODEGEN_EXE
fi
#
if [ $1=="debug" ]
then
  echo Debug mode enabled
  export DBG=-d
fi
#
# -----------------------------------------------------------------------------
#:PROTOTYPE
#
#echo Deleting old prototypes ...
rm $SYNEXPDIR/*.dbp &> /dev/null
#
echo Prototyping Repository API ...
dblproto $REPOSITORY_SRC/*.dbl
#
echo Prototyping Method Catalog API ...
dblproto $SMC_SRC/*.dbl
#
echo Prototyping CodeGen Engine ...
dblproto $CODEGEN_SRC/*.dbl
#
#echo Prototyping CustomTokenExample ...
#dblproto $CUSTOM_SRC/*.dbl
#
# -----------------------------------------------------------------------------
echo Building Repository API ...
dbl $DBG -XTo CODEGEN_OBJ:repositoryapi.dbo $REPOSITORY_SRC/*.dbl
dblink $DBG -l CODEGEN_EXE:repositoryapi.elb CODEGEN_OBJ:repositoryapi.dbo RPSLIB:ddlib.elb
# -----------------------------------------------------------------------------
echo Building Method Catalog API ...
dbl $DBG -XTo CODEGEN_OBJ:methodcatalog.dbo $SMC_SRC/*.dbl
dblink $DBG -l CODEGEN_EXE:methodcatalog.elb CODEGEN_OBJ:methodcatalog.dbo CODEGEN_EXE:repositoryapi.elb DBLDIR:synxml.elb
# -----------------------------------------------------------------------------
echo Building CodeGen Engine ...
dbl $DBG -XTo CODEGEN_OBJ:codegenengine.dbo $CODEGEN_SRC/*.dbl
dblink $DBG -l CODEGEN_EXE:codegenengine.elb CODEGEN_OBJ:codegenengine.dbo CODEGEN_EXE:methodcatalog.elb CODEGEN_EXE:repositoryapi.elb DBLDIR:synxml.elb
# -----------------------------------------------------------------------------
#echo Building CustomTokenExample ...
#dbl $DBG -XTo CODEGEN_OBJ:customtokens.dbo $CUSTOM_SRC/*.dbl
#dblink $DBG -l CODEGEN_EXE:customtokens.elb CODEGEN_OBJ:customtokens.dbo CODEGEN_EXE:codegenengine.elb
# -----------------------------------------------------------------------------
echo Building CodeGen ...
dbl $DBG -XTo CODEGEN_OBJ:codegen.dbo MAINLINE_SRC:CodeGen.dbl MAINLINE_SRC:CodeGenLauncher.dbl MAINLINE_SRC:Documentation.dbl MAINLINE_SRC:Usage.dbl
dblink $DBG -o CODEGEN_EXE:codegen.dbr CODEGEN_OBJ:codegen.dbo CODEGEN_EXE:codegenengine.elb CODEGEN_EXE:repositoryapi.elb
# -----------------------------------------------------------------------------
echo Building CreateFile ...
dbl $DBG -XTo CODEGEN_OBJ:createfile.dbo CREATEFILE_SRC:CreateFile.dbl CREATEFILE_SRC:CreateFileFromRpsFile.dbl CREATEFILE_SRC:CreateFileFromRpsStruct.dbl CREATEFILE_SRC:DoCreateFile.dbl
dblink $DBG -o CODEGEN_EXE:createfile.dbr CODEGEN_OBJ:createfile.dbo CODEGEN_EXE:codegenengine.elb
# -----------------------------------------------------------------------------
echo Building MapPrep ...
dbl $DBG -XTo CODEGEN_OBJ:mapprep.dbo MAPPREP_SRC:MapPrep.dbl
dblink $DBG -o CODEGEN_EXE:mapprep.dbr CODEGEN_OBJ:mapprep.dbo CODEGEN_EXE:codegenengine.elb
# -----------------------------------------------------------------------------
echo Building RpsInfo ...
dbl $DBG -XTo CODEGEN_OBJ:rpsinfo.dbo RPSINFO_SRC:RpsInfo.dbl
dblink $DBG -o CODEGEN_EXE:rpsinfo.dbr CODEGEN_OBJ:rpsinfo.dbo CODEGEN_EXE:codegenengine.elb
# -----------------------------------------------------------------------------
echo Building SmcInfo ...
dbl $DBG -XTo CODEGEN_OBJ:smcinfo.dbo SMCINFO_SRC:SmcInfo.dbl
dblink $DBG -o CODEGEN_EXE:smcinfo.dbr CODEGEN_OBJ:smcinfo.dbo CODEGEN_EXE:methodcatalog.elb CODEGEN_EXE:codegenengine.elb
# -----------------------------------------------------------------------------
#echo Checking batch files ...
#
if [ -a "$ROOT/setup" ]
then
   rm $ROOT/setup
fi
if [ -a "$CODEGEN_EXE/codegen" ]
then
  rm $CODEGEN_EXE/codegen
fi
if [ -a "$CODEGEN_EXE/codegend" ]
then
  rm $CODEGEN_EXE/codegend
fi
if [ -a "$CODEGEN_EXE/createfile" ]
then
  rm $CODEGEN_EXE/createfile
fi
if [ -a "$CODEGEN_EXE/mapprep" ]
then
  rm $CODEGEN_EXE/mapprep
fi
if [ -a "$CODEGEN_EXE/rpsinfo" ]
then
  rm $CODEGEN_EXE/rpsinfo
fi
if [ -a "$CODEGEN_EXE/smcinfo" ]
then
  rm $CODEGEN_EXE/smcinfo
fi
#
echo Creating setup script ...
echo export CODEGEN_EXE=$CODEGEN_EXE >> $ROOT/setup
echo export CODEGEN_TPLDIR=$ROOT/../../Templates >> $ROOT/setup
echo export CODEGEN_OUTDIR=$ROOT/../../Output >> $ROOT/setup
chmod 777 $ROOT/setup
chmod +x $ROOT/setup
#
if ! [ -a "$ROOT/../../Output/." ]
then
  echo Creating Output directory
  mkdir $ROOT/../../Output
fi
#
echo Creating codegen script ...
echo dbs CODEGEN_EXE:codegen \$@ > $CODEGEN_EXE/codegen
chmod 777 $CODEGEN_EXE/codegen
chmod +x $CODEGEN_EXE/codegen
#
echo Creating codegend script ...
echo dbr -d CODEGEN_EXE:codegen \$@ > $CODEGEN_EXE/codegend
chmod 777 $CODEGEN_EXE/codegend
chmod +x $CODEGEN_EXE/codegend
#
echo creating createfile script ...
echo dbs CODEGEN_EXE:createfile.dbr \$@ > $CODEGEN_EXE/createfile
chmod 777 $CODEGEN_EXE/createfile
chmod +x $CODEGEN_EXE/createfile
#
echo creating mapprep script ...
echo dbs CODEGEN_EXE:mapprep.dbr \$@ > $CODEGEN_EXE/mapprep
chmod 777 $CODEGEN_EXE/mapprep
chmod +x $CODEGEN_EXE/mapprep
#
echo Creating rpsinfo script ...
echo dbs CODEGEN_EXE:rpsinfo.dbr \$@ > $CODEGEN_EXE/rpsinfo
chmod 777 $CODEGEN_EXE/rpsinfo
chmod +x $CODEGEN_EXE/rpsinfo
#
echo Creating smcinfo script ...
echo dbs CODEGEN_EXE:smcinfo.dbr \$@ > $CODEGEN_EXE/smcinfo
chmod 777 $CODEGEN_EXE/smcinfo
chmod +x $CODEGEN_EXE/smcinfo
#
if ! [ -a "$CODEGEN_EXE/DefaultButtons.xml" ]
then
  echo Providing DefaultButtons.xml
  cp $CODEGEN_SRC/DefaultButtons.xml $CODEGEN_EXE/DefaultButtons.xml
fi
#
if ! [ -a "$CODEGEN_EXE/DataMappingsExample.xml" ]
then
  echo Providing DataMappings.xml
  cp $REPOSITORY_SRC/DataMappingsExample.xml $CODEGEN_EXE/DataMappingsExample.xml
fi
#
echo
echo BUILD COMPLETE!
echo
echo To use CodeGen from any command prompt, add this folder to PATH:
echo
echo    $CODEGEN_EXE
echo
echo and execute this script during login:
echo
echo    . $ROOT/setup
echo
#
popd &> /dev/null
#