;;*****************************************************************************
;;
;; Title:       CreateOutputFile.dbl
;;
;; Type:        Function
;;
;; Description: Creates a new output file
;;
;; Date:        5th November 2009
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2012, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import CodeGen.Engine
import CodeGen.RepositoryAPI

namespace CodeGen.Engine

    function CreateOutputFile   ,boolean

        required in FileSpec    ,string
        required out OutCh      ,int
        endparams

        stack record local_data
            ok                  ,boolean
        endrecord

    proc

        init local_data

        try
        begin
            open(OutCh=0,o:s,Env.OutputDir+atrim(FileSpec))
            ok = true
            if (Env.Debug) then
                DebugLog(" - Generating " + atrim(FileSpec),false,false)
            else if (Env.Verbose)
                VerboseLog("Generating " + atrim(FileSpec),false,false)
        end
        catch (ex, @FileReplaceException)
        begin
            ;;Can't replace existing file (-r was not used)
            if (Env.Debug) then
                DebugLog(" - Not replacing " + atrim(FileSpec) + ". Use -r to replace.",false,false)
            else if (Env.Verbose)
                VerboseLog("Not replacing " + atrim(FileSpec) + ". Use -r to replace.",false,false)
        end
        catch (ex, @ProtectionViolationException)
        begin
            ;;Can't replace existing file, may be read-only?
            ErrorLog("Not replacing " + atrim(FileSpec) + ". File may be read only.")
        end
        catch (ex, @SynException)
        begin
            ErrorLog("Failed to create file "+atrim(FileSpec)+". "+atrim(ex.Message))
        end
        endtry

        freturn ok

    endfunction

endnamespace
