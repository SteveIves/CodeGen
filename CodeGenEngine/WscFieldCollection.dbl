;;*****************************************************************************
;;
;; Title:       WscFieldCollection.dbl
;;
;; Type:        Class
;;
;; Description: Represents a collection of window script input fields
;;
;; Date:        9th November 2007
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2012, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import CodeGen.Engine
import CodeGen.RepositoryAPI
import System.Collections

namespace CodeGen.Engine

    public sealed class WscFieldCollection

        private p_Collection, @ArrayList
        private p_StructureName, String

        ;;Default constructor
        public method WscFieldCollection
            endparams
        proc
            p_Collection = new ArrayList()
        endmethod

        ;;Alternate constructor, with structure name specified
        public method WscFieldCollection
            required in aStructureName, String
            endparams
        proc
            p_Collection = new ArrayList()
            p_StructureName = aStructureName
        endmethod

        ;;Destructor
        method ~WscFieldCollection
        proc
            clear p_Collection
        endmethod

        ;;---------------------------------------------------------------------
        ;;Public methods and properties

        ;;; <summary>
        ;;; The name of the Structure that the fields are associated with
        ;;; </summary>
        public property StructureName, String
            method get
            proc
                mreturn p_StructureName
            endmethod
            method set
            proc
                p_StructureName = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; Does a field index represent the bast field in the collection?
        ;;; </summary>
        ;;; <param name="Index">Index of field to check</param>
        ;;; <returns>true=yes, false=no</returns>
        public method IsLastField, boolean
            required in Index, int
            endparams
        proc
            mreturn (Index==p_Collection.Count-1)
        endmethod

        ;;; <summary>
        ;;; Expose the internal ArrayList so consumers can use FOREACH
        ;;; </summary>
        ;;; <returns>Internal ArrayList used to store fields.</returns>
        public method GetEnumerator, @ArrayList
            endparams
        proc
            mreturn p_Collection
        endmethod

        ;;---------------------------------------------------------------------
        ;;The follwoing members make the collection look just like an ArrayList

        ;;Gets or sets the number of elements that the collection can contain.
        public property Capacity, int
            method get
            proc
                mreturn p_Collection.Capacity
            endmethod
            method set
            proc
                p_Collection.Capacity = value
            endmethod
        endproperty

        ;;Gets the number of elements actually contained in the collection.
        public property Count, int
            method get
            proc
                mreturn p_Collection.Count
            endmethod
        endproperty

        ;;Gets or sets the element at the specified index.
        public property Indexer, @WscField
            required in Index, int
            method get
            proc
                mreturn (WscField)p_Collection[Index]
            endmethod
            method set
            proc
                p_Collection[Index] = value
            endmethod
        endproperty

        ;;Adds an element to the end of the collection.
        public method Add, int
            required in WscField, @WscField
            endparams
        proc
            mreturn p_Collection.Add(WscField)
        endmethod

        ;;Removes the element at the specified index of the collection.
        public method RemoveAt, void
            required in Index, int
        proc
            p_Collection.RemoveAt(Index)
        endmethod

        ;;Searches for the specified element and returns the one-based index
        ;;of the first occurrence within the entire collection.
        public method IndexOf, int
            required in WscField, @WscField
        proc
            mreturn p_Collection.IndexOf(WscField)
        endmethod

        ;;Searches for the specified element and returns the one-based index
        ;;of the first occurrence within the range of elements in the collection
        ;;that extends from the specified index to the last element.
        public method IndexOf, int
            required in WscField, @WscField
            required in StartIndex, int
        proc
            mreturn p_Collection.IndexOf(WscField,StartIndex)
        endmethod

        ;;Searches for the specified element and returns the one-based index
        ;;of the first occurrence within the range of elements in the collection
        ;;that starts at the specified index and contains the specified number of
        ;;elements.
        public method IndexOf, int
            required in WscField, @WscField
            required in StartIndex, int
            required in Count, int
        proc
            mreturn p_Collection.IndexOf(WscField,StartIndex,Count)
        endmethod

        ;;Removes all elements from the collection.
        public method Clear, void
        proc
            p_Collection.Clear()
        endmethod

        ;;Inserts an element into the collection at the specified index.
        public method Insert, void
            required in AtIndex, int
            required in WscField, @WscField
            endparams
        proc
            p_Collection.Insert(AtIndex,WscField)
        endmethod

        ;;Searches for the specified object and returns the one-based index of
        ;;the last occurrence within the entire collection.
        public method LastIndexOf, int
            required in WscField, @WscField
        proc
            mreturn p_Collection.LastIndexOf(WscField)
        endmethod

        ;;Searches for the specified object and returns the one-based index of
        ;;the last occurrence within the range of elements in the collection that
        ;;extends from the first element to the specified index.
        public method LastIndexOf, int
            required in WscField, @WscField
            required in StartIndex, int
        proc
            mreturn p_Collection.LastIndexOf(WscField,StartIndex)
        endmethod

        ;;Searches for the specified object and returns the one-based index of
        ;;the last occurrence within the range of elements in the collection that
        ;;contains the specified number of elements and ends at the specified index.
        public method LastIndexOf, int
            required in WscField, @WscField
            required in StartIndex, int
            required in Count, int
        proc
            mreturn p_Collection.LastIndexOf(WscField,StartIndex,Count)
        endmethod

    endclass

endnamespace
