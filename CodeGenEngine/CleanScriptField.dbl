;;*****************************************************************************
;;
;; Title:       CleanScriptField.dbl
;;
;; Type:        Function
;;
;; Description: Takes a string containing input field qualifiers fom a .field
;;              statement in a UI Toolkit Windows script file, and cleans it up
;;              to make it easier to parse.  Spaces not in quoted strings are
;;              removed, and commas not in parentheses are replaced with |.
;;
;; Date:        24th October 2007
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2012, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import CodeGen.Engine
import CodeGen.RepositoryAPI

namespace CodeGen.Engine

    function CleanScriptField, a
        required in a_FieldParams, a
        endparams

        record local_vars
            outdata             ,a2048
            pos                 ,int
            in_string_single    ,int
            in_string_double    ,int
            in_string           ,long @in_string_single
            in_parens           ,int
            next_pos            ,int
            char                ,a1
        endrecord

    proc

        init local_vars

        for pos from 1 thru trim(a_FieldParams)
        begin
            ;;What is the character
            char = a_FieldParams(pos:1)

            ;;Is it a single quote
            if (char=="'")
            begin
                outdata(next_pos+=1:1)=char
                in_string_single=!in_string_single
                nextloop
            end

            ;;Is it a double quote
            if (char=='"')
            begin
                outdata(next_pos+=1:1)=char
                in_string_double=!in_string_double
                nextloop
            end

            ;;Is in an open or close paren
            if ((char=="(")||(char==")"))
            begin
                outdata(next_pos+=1:1)=char
                in_parens=!in_parens
                nextloop
            end

            ;;If it's a space and we're not in a quoted string, remove it
            if (!char&&(!in_string))
                nextloop

            ;;If it's a comma and we're not in parentheses, replace it with |
            if (char==","&&(!in_parens))
            begin
                outdata(next_pos+=1:1)="|"
                nextloop
            end

            ;;Anything else, add the character, in upper case unless it's in a string
            if (!in_string)
                upcase char

            outdata(next_pos+=1:1)=char


        end

        ;;Add a trailing |
        outdata = atrim(outdata) + "|"

        freturn atrim(outdata)

    endfunction

endnamespace

