;;*****************************************************************************
;;
;; Title:       ProcessSelectionExpression.dbl
;;
;; Type:        Function
;;
;; Description: Processes field selection loop expressions
;;
;; Date:        5th November 2009
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2012, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import CodeGen.Engine
import CodeGen.RepositoryAPI
import System.Collections

namespace CodeGen.Engine

    function ProcessSelectionExpression         ,boolean

        required in    Fld                      ,@RpsField
        required in    SelNbr                   ,int
        required in    TokenStart               ,int
        required in    TokenEnd                 ,int
        required in	   Loop1OutputOff           ,boolean
        required inout Loop2ConditionMode       ,@ArrayList
        required inout Loop2ConditionApplies    ,@ArrayList
        required inout Loop2OutputOff           ,boolean
        required inout buffer                   ,a
        required inout ErrStatus                ,int
        endparams

    proc

        Loop2ConditionMode.Add((@a)buffer(TokenStart+4,TokenEnd-1))
        Loop2ConditionApplies.Add((@boolean)false)

        using ((a)Loop2ConditionMode[Loop2ConditionMode.Count-1]) select

        ("FIRST "),
            if (SelNbr == 0)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("INFOLINE "),
            if (Fld.InfoLineText)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("LAST "),
            if (SelNbr == Fld.SelectionList.Count-1)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("MORE "),
            if (SelNbr < Fld.SelectionList.Count-1)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOMORE "),
            if (SelNbr == Fld.SelectionList.Count-1)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
        (),
        begin
			ErrorLog("Invalid selection loop expression " + buffer(TokenStart,TokenEnd))
			ErrStatus = 1
        end
		
		endusing

		if (ErrStatus) then
			freturn false
		else
			freturn ProcessExpression(TokenStart,TokenEnd,Loop2ConditionMode,Loop2ConditionApplies,Loop2OutputOff,Loop1OutputOff,buffer)

    endfunction

endnamespace
