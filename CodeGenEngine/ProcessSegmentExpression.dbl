;;*****************************************************************************
;;
;; Title:       ProcessSegmentExpression.dbl
;;
;; Type:        Function
;;
;; Description: Processes key segment loop expressions
;;
;; Date:        5th November 2009
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2012, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import CodeGen.Engine
import CodeGen.RepositoryAPI
import System.Collections

namespace CodeGen.Engine

    function ProcessSegmentExpression           ,boolean

        required in    Segment                  ,@RpsKeySegment
        required in    Fld                      ,@RpsField
        required in    TokenStart               ,int
        required in    TokenEnd                 ,int
        required in    Loop1OutputOff           ,boolean
        required inout Loop2ConditionMode       ,@ArrayList
        required inout Loop2ConditionApplies    ,@ArrayList
        required inout Loop2OutputOff           ,boolean
        required inout buffer                   ,a
        required inout ErrStatus                ,int
        endparams

    proc

        Loop2ConditionMode.Add((@a)buffer(TokenStart+4,TokenEnd-1))
        Loop2ConditionApplies.Add((@boolean)false)

        using ((a)Loop2ConditionMode[Loop2ConditionMode.Count-1]) select

		;;Segment properties

		("SEG_ALPHA"),
			Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (Segment.DataType == RpsKeySegmentDataType.Alpha)
			
		("SEG_ASCENDING"),
			Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (Segment.Order == RpsKeySegmentOrder.Ascending)

		.ifdef DBLV10
		("SEG_AUTO_SEQUENCE"),
			Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (Segment.DataType == RpsKeySegmentDataType.AutoSequence)
		.endc

		.ifdef DBLV10			
		("SEG_AUTO_TIMESTAMP"),
			Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (Segment.DataType == RpsKeySegmentDataType.AutoTimestamp)
		.endc
			
		("SEG_DECIMAL"),
			Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (Segment.DataType == RpsKeySegmentDataType.Decimal)
			
		("SEG_DESCENDING"),
			Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (Segment.Order == RpsKeySegmentOrder.Descending)

		("SEG_NOCASE"),
			Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (Segment.DataType == RpsKeySegmentDataType.NoCaseAlpha)
			
		("SEG_SIGNED"),
			Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (Segment.DataType == RpsKeySegmentDataType.SignedInteger)
			
		("SEG_TYPE_EXTERNAL"),
			Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (Segment.SegmentType == RpsKeySegmentType.External)

		("SEG_TYPE_FIELD"),
			Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (Segment.SegmentType == RpsKeySegmentType.Field)

		("SEG_TYPE_LITERAL"),
			Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (Segment.SegmentType == RpsKeySegmentType.Literal)

		("SEG_TYPE_RECNUM"),
			Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (Segment.SegmentType == RpsKeySegmentType.RecordNumber)

		("SEG_UNSIGNED"),
			Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (Segment.DataType == RpsKeySegmentDataType.UnsignedInteger)

		;;These two are implemented via @AUTOINCREMENT in the field user text or long description
		
		("INCREMENT "),
            if (Fld.AutoIncrement)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOINCREMENT "),
            if (!Fld.AutoIncrement)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true


        ("ALPHA "),
            if (Fld.DataType==RpsFieldDataType.Alpha)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("ALLOW_LIST "),
			if (Fld.AllowList.Count>0)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("ALTERNATE_NAME "),
			if (Fld.AlternateName.nes.Fld.Name)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("ARRAY "),
            if (Fld.ArrayDimension[1]>1)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("ARRIVE "),
            if (Fld.ArriveMethod)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("BINARY "),
			if (Fld.DataType==RpsFieldDataType.Binary)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("BOLD "),
            if (Fld.RenditionHighlight)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("BOOLEAN "),
            if (Fld.DataType==RpsFieldDataType.Boolean)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("BZERO "),
            if (Fld.BlankIfZero)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("BREAK "),
			if (Fld.BreakMode!=RpsFieldBreak.None)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("BREAK_CHANGE "),
			if (Fld.BreakMode==RpsFieldBreak.Change)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("BREAK_ALWAYS "),
			if (Fld.BreakMode==RpsFieldBreak.Always)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("BREAK_RETURN "),
			if (Fld.BreakMode==RpsFieldBreak.OnReturn)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("CHANGE "),
            if (Fld.ChangeMethod)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("CHECKBOX "),
            if (Fld.ViewAs==RpsFieldViewAs.Checkbox)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("COERCEBOOLEAN"),
			if (Fld.CoercedType==RpsFieldCoercedType.CtBoolean)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("COMBOBOX "),
            if ((Fld.ViewAs==RpsFieldViewAs.Field)&&(Fld.SelectionList.Count))
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DATE "),
			if ((Fld.TypeName=="DATE") || (Fld.TypeName=="NULLABLEDATETIME"))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DATEORTIME "),
			if ((Fld.TypeName=="DATE") || (Fld.TypeName=="NULLABLEDATETIME") || (Fld.TypeName=="TIME"))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DATETODAY "),
            if (Fld.DateDefaultToday)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DATE_JULIAN "),
			if ((Fld.TypeName=="DATE")&&((Fld.DataTypeSubclass==RpsFieldSubclass.DateYYJJJ)
			&	||(Fld.DataTypeSubclass==RpsFieldSubclass.DateYYYYJJJ)))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DATE_NOT_JULIAN "),
			if ((Fld.TypeName=="DATE")&&((Fld.DataTypeSubclass!=RpsFieldSubclass.DateYYJJJ)
			&	&&(Fld.DataTypeSubclass!=RpsFieldSubclass.DateYYYYJJJ)))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DATE_NOT_NULLABLE "),
			if (Fld.TypeName=="DATE")
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DATE_NOT_PERIOD "),
			if ((Fld.TypeName=="DATE")&&((Fld.DataTypeSubclass!=RpsFieldSubclass.DateYYPP)
			&	&&(Fld.DataTypeSubclass!=RpsFieldSubclass.DateYYYYPP)))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DATE_NOT_YMD "),
			if ((Fld.TypeName=="DATE")&&(Fld.DataTypeSubclass!=RpsFieldSubclass.DateYYMMDD)
			&	&&(Fld.DataTypeSubclass!=RpsFieldSubclass.DateYYYYMMDD))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DATE_NOT_YYYYMMDD "),
			if ((Fld.TypeName=="DATE")&&(Fld.DataTypeSubclass!=RpsFieldSubclass.DateYYYYMMDD))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DATE_NULLABLE "),
			if (Fld.TypeName=="NULLABLEDATETIME")
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
				
		("DATE_PERIOD "),
			if ((Fld.TypeName=="DATE")&&((Fld.DataTypeSubclass==RpsFieldSubclass.DateYYPP)
			&	||(Fld.DataTypeSubclass==RpsFieldSubclass.DateYYYYPP)))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DATE_YMD "),
			if ((Fld.TypeName=="DATE")&&((Fld.DataTypeSubclass==RpsFieldSubclass.DateYYYYMMDD)
			&	||(Fld.DataTypeSubclass==RpsFieldSubclass.DateYYMMDD)))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DATE_YYMMDD "),
			if ((Fld.TypeName=="DATE")&&(Fld.DataTypeSubclass==RpsFieldSubclass.DateYYMMDD))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DATE_YYYYMMDD "),
			if ((Fld.TypeName=="DATE")&&(Fld.DataTypeSubclass==RpsFieldSubclass.DateYYYYMMDD))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DATE_YYJJJ "),
			if ((Fld.TypeName=="DATE")&&(Fld.DataTypeSubclass==RpsFieldSubclass.DateYYJJJ))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DATE_YYYYJJJ "),
			if ((Fld.TypeName=="DATE")&&(Fld.DataTypeSubclass==RpsFieldSubclass.DateYYYYJJJ))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DATE_YYPP "),
			if ((Fld.TypeName=="DATE")&&(Fld.DataTypeSubclass==RpsFieldSubclass.DateYYPP))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DATE_YYYYPP "),
			if ((Fld.TypeName=="DATE")&&(Fld.DataTypeSubclass==RpsFieldSubclass.DateYYYYPP))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DECIMAL "),
			if ((Fld.DataType==RpsFieldDataType.Decimal)
			&	&& (Fld.TypeName!="DATE") && (Fld.TypeName!="TIME"))
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DEFAULT "),
            if (Fld.DefaultValue)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DESCRIPTION "),
			if (Fld.Description)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DISABLED "),
            if (Fld.Disabled)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DISPLAY "),
			if (Fld.DisplayMethod)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DISPLAY_LENGTH "),
			if (Fld.DisplayLength)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("DRILL "),
            if (Fld.DrillMethod)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("ECHO "),
            if (!Fld.NoEcho)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("EDITFORMAT "),
			if (Fld.EditFormatMethod)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("ENABLED "),
            if (!Fld.Disabled)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("ENUM "),
			if (Fld.DataType==RpsFieldDataType.Enum)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("ENUMERATED "),
			if (Fld.Enumerated)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("FIELD_POSITION "),
			if (Fld.FieldPositionMode!=RpsPositionMode.None&&Fld.FieldRow&&Fld.FieldColumn)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("HEADING "),
            if (Fld.ReportHeading)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("FORMAT "),
            if (Fld.FormatName)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("HELPID "),
            if (Fld.HelpIdentifier)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("HYPERLINK "),
            if (Fld.HyperlinkMethod)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("I1 "),
            if ((Fld.DataType==RpsFieldDataType.Integer)&&(Fld.Size==1))
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("I2 "),
            if ((Fld.DataType==RpsFieldDataType.Integer)&&(Fld.Size==2))
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("I4 "),
            if ((Fld.DataType==RpsFieldDataType.Integer)&&(Fld.Size==4))
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("I8 "),
            if ((Fld.DataType==RpsFieldDataType.Integer)&&(Fld.Size==8))
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("I124 "),
            if ((Fld.DataType==RpsFieldDataType.Integer)&&(Fld.Size<=4))
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("INFOLINE "),
            if (Fld.InfoLineText)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("INPUT_CENTER "),
			if (!Fld.InputJustification==RpsJustification.Center)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("INPUT_LEFT "),
			if (!Fld.InputJustification==RpsJustification.Left)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("INPUT_RIGHT "),
			if (!Fld.InputJustification==RpsJustification.Right)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("INTEGER "),
            if (Fld.DataType==RpsFieldDataType.Integer)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("LANGUAGE "),
			if (!Fld.ExcludedByLanguage)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("LEAVE "),
            if (Fld.LeaveMethod)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("LONGDESC "),
			if (Fld.LongDescription)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("MAPPED "),
            if (Fld.MappedField)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NEGATIVE_ALLOWED "),
			if (Fld.NegativeAllowed!=RpsFieldNegatives.None)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NEGATIVE_ORZERO "),
			if (Fld.NegativeAllowed==RpsFieldNegatives.OrZero)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NEGATIVE_REQUIRED "),
			if (Fld.NegativeAllowed==RpsFieldNegatives.Only)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOALLOW_LIST "),
			if (Fld.AllowList.Count==0)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOALTERNATE_NAME "),
			if (Fld.AlternateName.eqs.Fld.Name)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOARRIVE "),
			if (!Fld.ArriveMethod)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOBREAK "),
			if (Fld.BreakMode==RpsFieldBreak.None)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOCHANGE "),
			if (!Fld.ChangeMethod)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOCHECKBOX "),
			if (Fld.ViewAs!=RpsFieldViewAs.Checkbox)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOCOERCEBOOLEAN"),
			if (Fld.CoercedType!=RpsFieldCoercedType.CtBoolean)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NODEFAULT "),
			if (!Fld.DefaultValue)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NODESCRIPTION "),
			if (!Fld.Description)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NODISPLAY "),
			if (!Fld.DisplayMethod)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NODISPLAY_LENGTH "),
			if (!Fld.DisplayLength)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NODRILL "),
			if (!Fld.DrillMethod)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOECHO "),
            if (Fld.NoEcho)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOEDITFORMAT "),
			if (!Fld.EditFormatMethod)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOFORMAT "),
			if (!Fld.FormatName)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOHELPID "),
			if (!Fld.HelpIdentifier)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOHYPERLINK "),
			if (!Fld.HyperlinkMethod)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOINFOLINE "),
			if (!Fld.InfoLineText)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOLANGUAGE "),
            if (Fld.ExcludedByLanguage)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOLEAVE "),
			if (!Fld.LeaveMethod)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOLONGDESC "),
			if (!Fld.LongDescription)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true

		("NONEGATIVE "),
			if (Fld.NegativeAllowed==RpsFieldNegatives.None)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true

		("NOPAINTCHAR "),
			if (!Fld.PaintCharacterSpecified)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOPRECISION "),
            if (!Fld.Precision)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOPROMPT "),
			if (!Fld.Prompt)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NORANGE "),
			if (!Fld.NumericRangeExists)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOREPORT "),
            if (Fld.ExcludedByReportWriter)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOSELECTIONS"),
            if (!Fld.SelectionList.Count)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOSELWND"),
			if (!Fld.SelectionWindowName)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTALPHA "),
            if (Fld.DataType!=RpsFieldDataType.Alpha)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTBINARY "),
			if (Fld.DataType!=RpsFieldDataType.Binary)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTBOOLEAN "),
			if (Fld.DataType!=RpsFieldDataType.Boolean)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTBZERO "),
			if (!Fld.BlankIfZero)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTDATE "),
            if (!(Fld.TypeName=="DATE"))
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTDATEORTIME "),
            if ((!(Fld.TypeName=="DATE")) && (!(Fld.TypeName=="TIME")))
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTDATETODAY "),
			if (!Fld.DateDefaultToday)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTDECIMAL "),
            if (Fld.DataType!=RpsFieldDataType.Decimal)
            &   || ((Fld.DataType==RpsFieldDataType.Decimal)
            &       && ((Fld.TypeName=="DATE") || (Fld.TypeName!="TIME")))
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTENUM "),
			if (Fld.DataType!=RpsFieldDataType.Enum)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTENUMERATED "),
			if (!Fld.Enumerated)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTIMEOUT "),
			if (Fld.InputTimeoutMode==RpsFieldTimeout.None)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTINTEGER "),
            if (Fld.DataType!=RpsFieldDataType.Integer)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTNUMERIC "),
            if ((Fld.DataType!=RpsFieldDataType.Decimal)
            &   &&(Fld.DataType!=RpsFieldDataType.Integer))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTOVERLAY "),
			if ((!Fld.IsGroup&&!Fld.OverlaysField)
			&	||(Fld.IsGroup&&(Fld.GroupType!=RpsFieldGroup.Overlay)))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTRADIOBUTTONS "),
			if (Fld.ViewAs!=RpsFieldViewAs.RadioButtons)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTSTRUCTFIELD "),
			if (Fld.DataType!=RpsFieldDataType.StructField)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTTIME "),
            if ((Fld.TypeName!="TIME"))
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTOOLKIT "),
            if (Fld.ExcludedByToolkit)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTUPPERCASE "),
			if (!Fld.Uppercase)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTUSER "),
			if (Fld.DataType!=RpsFieldDataType.User)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOUSERTEXT "),
			if (!Fld.UserText)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NOTUSERTIMESTAMP"),
			if !((Fld.DataType==RpsFieldDataType.User)
			& &&(Fld.DataTypeSubclass==RpsFieldSubclass.UserDate)
			& &&(Fld.UserFieldType.eqs."^CLASS^=YYYYMMDDHHMISSUUUUUU"))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true

		("NOVIEW_LENGTH "),
			if (!Fld.ViewLength)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true

		("NOWEB "),
            if (Fld.ExcludedByWeb)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("NUMERIC "),
            if ((Fld.DataType==RpsFieldDataType.Decimal)
            &   ||(Fld.DataType==RpsFieldDataType.Integer))
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("OCNATIVE"),
            if (!Fld.OcObject)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("OCOBJECT"),
            if (Fld.OcObject)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("OPTIONAL "),
            if (!Fld.Required)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("OVERLAY "),
			if ((Fld.OverlaysField)||(Fld.IsGroup&&Fld.GroupType==RpsFieldGroup.Overlay))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("PAINTCHAR "),
			if (Fld.PaintCharacterSpecified)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("PRECISION "),
            if (Fld.Precision)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("PROMPT "),
            if (Fld.Prompt)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("PROMPT_POSITION "),
			if (Fld.PromptPositionMode!=RpsPositionMode.None&&Fld.PromptRow&&Fld.PromptColumn)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("RADIOBUTTONS "),
            if (Fld.ViewAs==RpsFieldViewAs.RadioButtons)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("RANGE "),
            if (Fld.NumericRangeExists)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("READONLY "),
            if (Fld.ReadOnly)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("READWRITE "),
            if (!Fld.ReadOnly)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("REPORT "),
			if (!Fld.ExcludedByReportWriter)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("REPORT_CENTER "),
			if (!Fld.ReportJustification==RpsJustification.Center)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("REPORT_LEFT "),
			if (!Fld.ReportJustification==RpsJustification.Left)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("REPORT_RIGHT "),
			if (!Fld.ReportJustification==RpsJustification.Right)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("REQUIRED "),
            if (Fld.Required)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("REVERSE "),
            if (Fld.RenditionReverse)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("SELECTIONS"),
            if (Fld.SelectionList.Count)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("SELWND"),
			if (Fld.SelectionWindowName)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("STRUCTFIELD "),
			if (Fld.DataType==RpsFieldDataType.StructField)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("TEXTBOX "),
			if ((Fld.ViewAs==RpsFieldViewAs.Field)&&(!Fld.SelectionList.Count))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("TIME "),
			if (Fld.TypeName=="TIME")
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("TIME_HHMM "),
			if ((Fld.TypeName=="TIME")&&(Fld.DataTypeSubclass==RpsFieldSubclass.TimeHHMM))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("TIME_HHMMSS "),
			if ((Fld.TypeName=="TIME")&&(Fld.DataTypeSubclass==RpsFieldSubclass.TimeHHMMSS))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("TIMENOW "),
            if (Fld.TimeDefaultNow)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("TIMEOUT "),
			if (Fld.InputTimeoutMode!=RpsFieldTimeout.None)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("TOOLKIT "),
			if (!Fld.ExcludedByToolkit)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("UNDERLINE "),
            if (Fld.RenditionUnderline)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("UPPERCASE "),
            if (Fld.Uppercase)
                Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("USER "),
			if (Fld.DataType==RpsFieldDataType.User)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("USERTEXT "),
			if (Fld.UserText)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true

		("USERTIMESTAMP"),
			if ((Fld.DataType==RpsFieldDataType.User)
			& &&(Fld.DataTypeSubclass==RpsFieldSubclass.UserDate)
			& &&(Fld.UserFieldType.eqs."^CLASS^=YYYYMMDDHHMISSUUUUUU"))
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true

		("VIEW_LENGTH "),
			if (Fld.ViewLength)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true

		("WEB "),
			if (!Fld.ExcludedByWeb)
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
		
		("COUNTER_","NOT_COUNTER_"),
			if (!ProcessCounterExpression(Loop2ConditionMode,Loop2ConditionApplies))
				ErrStatus = 1
		
		;;Presence of a user token
		("USERTOKEN_"),
		begin
			data utName, string, buffer(TokenStart+4,TokenEnd-1) - "USERTOKEN_"
			data ut, @UserToken
			
			if (Env.UserTokens==^null)
				exit
			
.ifdef DBLNET
			foreach ut in Env.UserTokens
.else
			foreach ut in Env.UserTokens.GetEnumerator()
.endc
			begin
				if (ut.Name=="<"+utName+">")
				begin
					Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
					exitloop
				end
			end
		end
		
		;;Absence of a user token
		("NOT_USERTOKEN_"),
		begin
			data utName, string, buffer(TokenStart+4,TokenEnd-1) - "NOT_USERTOKEN_"
			data ut, @UserToken
			data found, boolean, false
			
			if (Env.UserTokens==^null) then
			begin
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)true
			end
			else
			begin
.ifdef DBLNET
				foreach ut in Env.UserTokens
.else
				foreach ut in Env.UserTokens.GetEnumerator()
.endc
				begin
					if (ut.Name=="<"+utName+">")
					begin
						found=true
						exitloop
					end
				end
				Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)(!found)
			end
		end
		
		(),
        begin
			;;If we haven't evaluated an expression by the time we get here then the only
			;;remaining possibility is that there may be a custom expression extension
			data customExpressionProcessed, Boolean, false
			
			if (Env.CustomSegmentExpressions.Count>0)
			begin
				data customExpression, @CustomSegmentExpression
				foreach customExpression in Env.CustomSegmentExpressions
				begin
					if (customExpression.Expression.eqs.(a)Loop2ConditionMode[Loop2ConditionMode.Count-1])
					begin
						Loop2ConditionApplies[Loop2ConditionApplies.Count-1] = (@boolean)customExpression.Evaluate(Segment,Fld)
						customExpressionProcessed = true
						exitloop
					end
				end
			end
			
			if (customExpressionProcessed)
				exit
			
			ErrorLog("Invalid key segment loop expression " + buffer(TokenStart,TokenEnd))
			ErrStatus = 1
        end
		
		endusing

		if (ErrStatus) then
			freturn false
		else
			freturn ProcessExpression(TokenStart,TokenEnd,Loop2ConditionMode,Loop2ConditionApplies,Loop2OutputOff,Loop1OutputOff,buffer)
		
    endfunction

endnamespace
