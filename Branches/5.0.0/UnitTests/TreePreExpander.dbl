import System
import System.Collections.Generic
import Microsoft.VisualStudio.TestTools.UnitTesting
import CodeGen.Engine

.array 0

namespace UnitTests
	
	{TestClass}
	public class TreePreExpanderTests
		
		private template, string
		private expected, string
		private message, string

		private tab,  String, %char(9)
		private crlf, String, %char(13)+%char(10)
		
		private method runPreExpanderTest, boolean
			endparams
		proc
			message = string.Empty
			data tokens, @List<Token>, new Tokenizer().Tokenize(template)
			data errors, @List<Tuple<int,int,string>>
			data tree, @FileNode, Parser.Parse(tokens,errors)

			if (errors != ^null)
			begin
				message = "Template code failed to parse!"
				mreturn false
			end

			new TreePreExpander().Visit(tree)
			
			;;Need to make sure the tree didn't change

			mreturn true
			
		endmethod

.region "IF ELSE Tests"
		
		{TestMethod}
		{TestCategory("TreePreExpander")}
		public method TreePreExpanderIf001, void
		proc
			template = "<FIELD_LOOP><IF PROMPT>YES</IF><|></FIELD_LOOP>"
			expected = "YES|YES||||||||"
			Assert.IsTrue(runPreExpanderTest(),message)
		endmethod
		
		.endregion
		
.region "IF ELSE Tests"
		
		{TestMethod}
		{TestCategory("TreePreExpander")}
		public method TreePreExpanderIfElse001, void
		proc
			;;This test was implemented because TreePreExpander.Visit(ElseNode) is throwing NotImplementedException
			template = "<FIELD_LOOP><IF PROMPT>YES<ELSE>NO</IF PROMPT><|></FIELD_LOOP>"
			expected = "YES|YES|NO|NO|NO|NO|NO|NO|NO|NO"
			Assert.IsTrue(runPreExpanderTest(),message)
		endmethod
		
.endregion
		
	endclass
	
endnamespace
