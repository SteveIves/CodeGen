
import System
import Microsoft.VisualStudio.TestTools.UnitTesting
import CodeGen.Engine
import System.Collections.Generic

.array 0

namespace UnitTests

	public partial class TokenizerTests
	
		{TestMethod}
		{TestCategory("Tokenizer - File Header Tokens")}
		public method Tokenizer_CodeGenFileName001, void
		proc
			
			data templateCode, String, "<CODEGEN_FILENAME>FILE_<STRUCTURE_NAME>.DBL</CODEGEN_FILENAME>"
			
			;FileHeader					<OPTIONAL_USERTOKEN>
			;TextNode					DATAFILENAME="
			;StructureInfo				<FILE_NAME>
			;TextNode					"
			;FileHeader					</OPTIONAL_USERTOKEN>
			data taskset, @CodeGenTaskSet, new CodeGenTaskSet()
			taskset.Tasks.Add(new CodeGenTask())
			data context, @CodeGenContext, new CodeGenContext(taskset)
			context.CurrentTask = taskset.Tasks[0]
			data tokens, @List<Token>, new Tokenizer(context).Tokenize(templateCode)
			
			Assert.IsTrue(tokens != ^null && tokens.Count==5 && tokens[0].TypeOfToken == TokenType.FileHeader && tokens[1].TypeOfToken == TokenType.Text && tokens[2].TypeOfToken == TokenType.StructureInfo && tokens[3].TypeOfToken == TokenType.Text && tokens[4].TypeOfToken == TokenType.FileHeader)
			
		endmethod
		
		{TestMethod}
		{TestCategory("Tokenizer - File Header Tokens")}
		public method Tokenizer_OptionalUserToken002, void
		proc
			
			data templateCode, String, '<OPTIONAL_USERTOKEN>DATAFILENAME="<FILE_NAME>"</OPTIONAL_USERTOKEN>' + crlf + '<DATAFILENAME>'
			
			;FileHeader					<OPTIONAL_USERTOKEN>
			;TextNode					"
			;StructureInfo				<FILE_NAME>
			;TextNode					"
			;FileHeader					</OPTIONAL_USERTOKEN>
			;TextNode					<CR><LF>
			;TextNode					"
			;StructureInfo				<FILE_NAME>
			;TextNode					"
			data taskset, @CodeGenTaskSet, new CodeGenTaskSet()
			taskset.Tasks.Add(new CodeGenTask())
			data context, @CodeGenContext, new CodeGenContext(taskset)
			context.CurrentTask = taskset.Tasks[0]
			data tokens, @List<Token>, new Tokenizer(context).Tokenize(templateCode)
			
			Assert.IsTrue(tokens!=^null && tokens.Count==9)
			
		endmethod

	endclass

endnamespace
