
import System
import System.Collections.Generic
import CodeGen.Engine
import CodeGen.RepositoryAPI

namespace HarmonyCoreExtensions

    public class SegmentDataType implements IExpansionToken

        public property TokenName, String
            method get
            proc
                mreturn "HARMONYCORE_SEGMENT_DATATYPE"
            endmethod
        endproperty

        public property Description, String
            method get
            proc
                mreturn "An example of a custom field loop token."
            endmethod
        endproperty

        public property Validity, TokenValidity
            method get
            proc
                mreturn TokenValidity.KeySegmentLoop
            endmethod
        endproperty

        public property TokenCase, TokenCaseMode
            method get
            proc
                mreturn TokenCaseMode.UppercaseOnly
            endmethod
        endproperty

        public method Expand, String
            tkn, @Token
            template, @FileNode 
            loops, @IEnumerable<LoopNode>
            endparams
        proc
            lambda doExpand(str, ky, segment, index)
            begin
                data field, @RpsField
                foreach field in str.Fields
                begin
                    if (field.OriginalName == segment.Field)
                    begin
                        data textToSearch = field.LongDescription + field.UserText
                        if (field.LongDescription.Contains("HARMONYCORE_CUSTOM_FIELD_DATATYPE="))
                        begin
                            data startPos = textToSearch.IndexOf("HARMONYCORE_CUSTOM_FIELD_DATATYPE=")
                            data semiPos = -1
                            if (startPos!=-1)
                                semiPos = textToSearch.IndexOf(";",startPos)
                            if ((startPos!=-1) && (semiPos!=-1) && (semiPos>(startPos+34)))
                                mreturn textToSearch.SubString(startPos+34,semiPos-startPos-34)
                        end
                        mreturn field.SnType
                    end
                end
            end
            mreturn TokenExpander.ExpandKeySegmentLoopToken(tkn, template, loops, doExpand)
        endmethod

    endclass

endnamespace
