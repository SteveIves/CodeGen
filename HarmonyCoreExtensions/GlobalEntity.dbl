;;*****************************************************************************
;;
;; Title:       GlobalEntity.dbl
;;
;; Type:        Class
;;
;; Description: A custom structure expression token for use with Harmony Core
;;
;; Date:        12th February 2021
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2021, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import System
import System.Collections.Generic
import CodeGen.Engine
import CodeGen.RepositoryAPI

namespace HarmonyCoreExtensions

    public class GlobalEntity implements IExpressionToken

        public property TokenName, String
            method get
            proc
                mreturn "GLOBAL_ENTITY"
            endmethod
        endproperty

        public property Description, String
            method get
            proc
                mreturn "Is the current entity global (i.e. not associated with a particular tenant id or data company)?"
            endmethod
        endproperty

        public property Validity, TokenValidity
            method get
            proc
                mreturn TokenValidity.Anywhere
            endmethod
        endproperty

        public method Evaluate, Boolean
            tkn, @Token
            template, @FileNode 
            loops, @IEnumerable<LoopNode>
            endparams
        proc
            lambda doEvaluate(str) (str.UserText.Contains("GLOBAL_ENTITY") || str.LongDescription.Contains("GLOBAL_ENTITY"))
            mreturn ExpressionEvaluator.EvaluateStructureExpression(tkn, template, loops, doEvaluate)
        endmethod

    endclass


endnamespace
