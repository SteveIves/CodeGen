;;*****************************************************************************
;;
;; Title:       SmcInfo.dbl
;;
;; Type:        Program
;;
;; Description: Display info from a Synergy Method Catalog XML export file
;;
;; Date:        5th February 2014
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2014, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import CodeGen.Engine
import CodeGen.MethodCatalogAPI

main SmcInfo
	
	global common SmcInfoData
		tt, int	;Terminal channel
	endcommon
	
	record
		ok              ,boolean, true
		dbr             ,boolean, false
		ClArgCount      ,int                    ;Command line option argument count
		ClBuffer        ,[10]a30
		smc				,@MethodCatalog
	endrecord
	
proc
	
	open(tt=0,i,"tt:")
	xcall flags(7004000,1)
	xcall flags(20,0)
	;---------------------------------------------------------------------------
	;Dbr or dbs?
	;
	begin
		data tmpi4a, int
		data tmpi4b, int
		xcall tnmbr(tmpi4a,tmpi4b)
		if (tmpi4b!=2)
			dbr = true
	end
	
	;---------------------------------------------------------------------------

	if (CommandLine("f ",1,ClBuffer)) then
	begin
		if (ClBuffer[1]) then
		begin
			;;OK, we got a file name
			try
			begin
				smc = new MethodCatalog(ClBuffer[1])
			end
			catch (e, @Exception)
			begin
				writes(tt,"ERROR: " + e.Message)
			end
			endtry

			if (ok)
			begin
				;;One or all interfaces?
				if (CommandLine("i ",1,ClBuffer)) then
				begin
					if (ClBuffer[1]) then
					begin
						data smcInterface, @MduInterface
						data done, boolean, false
						foreach smcInterface in smc.Interfaces.GetEnumerator()
						begin
							if (smcInterface.name==ClBuffer[1])
							begin
								ShowInterface(smcInterface)
								done = true
								exitloop
							end
						end
						if (!done)
							writes(tt,"ERROR: interface not " + %atrim(ClBuffer[1]) + " found!")
					end
					else
						writes(tt,"ERROR: No interface specified after -i option!")
				end
				else
				begin
					;;No interface specified, show them all
					data smcInterface, @MduInterface
					foreach smcInterface in smc.Interfaces.GetEnumerator()
						ShowInterface(smcInterface)
				end
			end

			ok = false ;Don't display usage
		end
		else
		begin
			writes(tt,"ERROR: No file spec specified after -f option!")
			ok = false
		end
	end
	else
	begin
		writes(tt,"ERROR: You must use the -f option to specify an SMC export file!")
		ok = false
	end
	
	if (ok)
		call usage
		
.ifdef D_GUI
	if (dbr)
	begin
		data tmpBuf, a1
		display(tt,13,10,"Press a key: ")
		accept(tt,tmpBuf)
	end
.endc
	
	close tt
	stop
	
;-------------------------------------------------------------------------------
;Display usage information
;
usage,
	writes(tt,"")
	writes(tt,"Usage: SmcInfo -f <SmcXmlFile> [-i <InterfaceName>]")
	writes(tt,"")
	ok = false
	
	return
	
endmain

subroutine ShowInterface
	required in smcInterface, @MduInterface
	endparams
	external common SmcInfoData
		tt, int	;Terminal channel
	endcommon
proc

	writes(tt,"")
	writes(tt,"Interface: " + smcInterface.name)
	writes(tt,"")

	if (smcInterface.Methods.Count)
	begin
		data smcMethod, @MduMethod
		foreach smcMethod in smcInterface.Methods.GetEnumerator()
		begin
			writes(tt,"    Method      : " + smcMethod.name)
			using smcMethod.MethodType select
			(MduMethodType.Subroutine),
				writes(tt,"    Type        : Subroutine")
			(MduMethodType.Function),
				writes(tt,"    Type        : Function")
			endusing
			writes(tt,"    Return type : ")
			writes(tt,"    Parameters  : " + %string(smcMethod.Parameters.Count))
			writes(tt,"")
		end
	end
	
	xreturn

endsubroutine



