;;*****************************************************************************
;;
;; Title:       CreateFile.dbl
;;
;; Type:        Program
;;
;; Description: Create data files from repository definitions.
;;
;; Date:        3rd April 2007
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2012, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import System.Collections.Generic
import System.IO
import CodeGen.Engine

namespace CreateFile

    ;;; <summary>
    ;;; The main entry point for the application.
    ;;; </summary>
    main CreateFile

        .define APP_NAME        "CreateFile"
        .define APP_VERSION     "V2.0"

        .include "RPSLIB:ddinfo.def"

        record
            ok,             i4          ;;OK to continue
            modes,          int         ;;Operation modes
            filename,       String      ;File to process
            strname,        String      ;Structure to process
            inpfile,        String      ;Input instructions file name
            filespec,       String      ;File to create
            filecreated,    String      ;File created
            errtxt,         String      ;Error text
            replace,        boolean     ;Replace existing files?
            rpsopen,        d1          ;Is the repository open?
            clvalues,       @List<String>
        endrecord

        structure struct
            ,a30
        endstructure

    proc
        ok = true
        Environment.ExitCode = 0

        xcall flags(7004000,1)
        xcall flags(20,0)

        ;---------------------------------------------------------------------------
        ;Are we being asked for usage information?

        if (CommandLineParser.Parse("h"))
        begin
            call usage
            ok = false
        end

        ;---------------------------------------------------------------------------
        ;Do we have a file name?

        if (ok)
        begin
            filename = ""
            if (CommandLineParser.Parse("f",clvalues))
            begin
                if (clvalues.Count) then
                begin
                    filename = clvalues[0]
                    modes += 1
                end
                else
                begin
                    Console.WriteLine("No file name found after the -f option, use -h for help!")
                    ok = false
                end
            end
        end

        ;---------------------------------------------------------------------------
        ;Do we have a structure name?

        if (ok)
        begin
            strname = ""
            if (CommandLineParser.Parse("s",clvalues))
            begin
                if (clvalues.Count) then
                begin
                    strname = clvalues[0]
                    modes += 1
                end
                else
                begin
                    Console.WriteLine("No structure name found after the -s option, use -h for help!")
                    ok = false
                end
            end
        end

        ;---------------------------------------------------------------------------
        ;Do we have an instructions file name?

        if (ok)
        begin
            inpfile = ""
            if (CommandLineParser.Parse("in",clvalues))
            begin
                if (clvalues.Count) then
                begin
                    inpfile = clvalues[0]
                    FileTools.ExpandLogicalName(inpfile)
                    modes += 1

                    ;;Make sure the input file exists
                    if (!File.Exists(inpfile))
                    begin
                        Console.WriteLine("Input file not found!")
                        ok = false
                    end
                end
                else
                begin
                    Console.WriteLine("No input file name found after the -in option, use -h for help!")
                    ok = false
                end
            end
        end

        ;---------------------------------------------------------------------------
        ;Make sure we are being asked to do one thing

        if (ok)
        begin
            if (modes != 1)
            begin
                Console.WriteLine("Specify ONE of file (-f), structure (-s) or input file (-in). Use -h for help!")
                ok = false
            end
        end

        ;---------------------------------------------------------------------------
        ;Check for a filespec option

        if (ok)
        begin
            filespec = ""
            if (CommandLineParser.Parse("out",clvalues))
            begin
                if (clvalues.Count) then
                    filespec = clvalues[0]
                else
                begin
                    Console.WriteLine("No file specification found after the -out option, use -h for help!")
                    ok = false
                end
            end
        end

        ;---------------------------------------------------------------------------
        ;Check for "replace existing files" option
        
        if (ok)
        begin
            replace = CommandLineParser.Parse("r")
        end

        ;---------------------------------------------------------------------------
        ;Open the repository

        if (ok)
        begin
            xcall dd_init(dcs)
            if (dcs.error) then
            begin
                Console.WriteLine("Failed to open repository!")
                ok = false
            end
            else
                rpsopen = true
        end

        ;---------------------------------------------------------------------------
        ;Create the file

        if (ok)
        begin
            data success, boolean

            if (filename.Length) then
            begin
                success = %CreateFileFromRpsFile(dcs,filename,replace,filespec,filecreated,errtxt)
                if (success) then
                    Console.WriteLine("ISAM file {0} {1}",filecreated,errtxt)
                else
                    Console.WriteLine("ERROR: {0}",errtxt)
            end
            else if (strname.Length) then
            begin
                success = %CreateFileFromRpsStruct(dcs,strname,replace,filespec,filecreated,errtxt)
                if (success) then
                    Console.WriteLine("ISAM file {0} {1}",filecreated,errtxt)
                else
                    Console.WriteLine("ERROR: {0}",errtxt)
            end
            else
            begin
                success = %ProcessInputFile(dcs,inpfile)
            end

            Environment.ExitCode = (success == true) ? 0 : 1
        end

        ;---------------------------------------------------------------------------
        ;Clean up and exit

        if (rpsopen)
            xcall dd_exit(dcs)

        stop Environment.ExitCode

    usage,

        Console.WriteLine("")
        Console.WriteLine(APP_NAME + " " + APP_VERSION)

        ;Limit for text    -------------------------------------------------------------------------------
        Console.WriteLine('')
        Console.WriteLine('  CreateFile -f <fname> | -s <sname> [-out <filespec>] [-r] [-h]')
        Console.WriteLine('')
        Console.WriteLine('    -f <fname>')
        Console.WriteLine('          Name of repository file definition to process')
        Console.WriteLine('')
        Console.WriteLine('    -s <sname>')
        Console.WriteLine('          Name of repository structure definition to process')
        Console.WriteLine('')
        Console.WriteLine('    -in <infile>')
        Console.WriteLine('          Name of JSON input file containing the details of file(s) to create.')
        Console.WriteLine('')
        Console.WriteLine('    -out <filespec>')
        Console.WriteLine('          File spec of file to create, overriding repository file spec')
        Console.WriteLine('          Not used with -in.')
        Console.WriteLine('')
        Console.WriteLine('    -r    Replace existing files. The default is not to replace existing files.')
        Console.WriteLine('          Not used with -in.')
        Console.WriteLine('')
        Console.WriteLine('    -h    Display this usage information')
        Console.WriteLine('')
        Console.WriteLine('  The -f and -s options can only be used to create ISAM files.')
        Console.WriteLine('')
        Console.WriteLine('  The -in option can be used to create ISAM and RELATIVE files, but RELATIVE files')
        Console.WriteLine('  can only be created if an input file containing initial data is provided.')
        Console.WriteLine('')
        Console.WriteLine('  The input file used with the -in option must be a JSON file similar to this:')
        Console.WriteLine('')
        Console.WriteLine('  [')
        Console.WriteLine('    {')
        Console.WriteLine('      "RepositoryFileName": "CUSTOMER",')
        Console.WriteLine('      "CreateFile": "DAT:CUSTOMER.ISM",')
        Console.WriteLine('      "LoadFromFile": "TESTDATA:CUSTOMER.TXT",')
        Console.WriteLine('      "OverwriteExistingFile": true')
        Console.WriteLine('    },')
        Console.WriteLine('    {')
        Console.WriteLine('      "RepositoryFileName": "OPTIONS",')
        Console.WriteLine('      "CreateFile": "DAT:OPTIONS.DDF",')
        Console.WriteLine('      "LoadFromFile": "TESTDATA:OPTIONS.TXT",')
        Console.WriteLine('      "OverwriteExistingFile": false')
        Console.WriteLine('    }')
        Console.WriteLine('  ]')
        Console.WriteLine('')
        Console.WriteLine('  Including "CreateFile" is optional. By default the file spec of the repository ')
        Console.WriteLine('  file definition is used.')
        Console.WriteLine('')
        Console.WriteLine('  Including "LoadFromFile" is optional for ISAM files, if not provided an empty')
        Console.WriteLine('  file will be created. For relative files you mUST provide an initial data file')
        Console.WriteLine('  and that file MUST contain at least one record of the appropriate length.')
        Console.WriteLine('')
        Console.WriteLine('  Including "OverwriteExistingFile" is optional. By default files will NOT be')
        Console.WriteLine('  overwritten.')
        Console.WriteLine('')

        return

    endmain

endnamespace

