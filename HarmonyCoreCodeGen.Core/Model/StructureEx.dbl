import System
import System.Collections.Generic
import System.Text
import HarmonyCoreExtensions
import Newtonsoft.Json.Linq
import CodeGen.Engine


namespace HarmonyCoreGenerator.Model

	public class StructureEx
		public readwrite property Name, @string
		public readwrite property Aliases, @List<string>, new List<string>()
		public readwrite property Files, @Dictionary<string, string>, new Dictionary<string, string>()
		public readwrite property EnabledGenerators, @HashSet<string>, new HashSet<string>()
		public readwrite property RelationsSpecs, @List<CustomRelationSpec>, new List<CustomRelationSpec>()
		public readwrite property EnableRelations, boolean?
		public readwrite property EnableRelationValidation, boolean?
		public readwrite property EnableGetAll, boolean?
		public readwrite property EnableGetOne, boolean?
		public readwrite property EnableAltGet, boolean?
		public readwrite property EnablePut, boolean?
		public readwrite property EnablePost, boolean?
		public readwrite property EnablePatch, boolean?
		public readwrite property EnableDelete, boolean?
		public readwrite property ControllerAuthorization, @AuthOptions
		public readwrite property PostAuthorization, @AuthOptions
		public readwrite property PutAuthorization, @AuthOptions
		public readwrite property PatchAuthorization, @AuthOptions
		public readwrite property DeleteAuthorization, @AuthOptions
		public readwrite property GetAuthorization, @AuthOptions
		public readwrite property ODataQueryOptions, @string
		public readwrite property Fields, @Dictionary<string, Dictionary<string, Object>>, new Dictionary<string, Dictionary<string, Object>>(StringComparer.OrdinalIgnoreCase)

		public method ShouldSerializeFields, boolean
		proc
			mreturn Fields.Count > 0
		endmethod

	endclass

endnamespace
