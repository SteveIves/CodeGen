<!DOCTYPE HTML>
<html id="hs-topic-p">
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>Field Loop Expansion Tokens</title>
<meta charset="windows-1252" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="generator" content="HelpSmith 9.4 (Build 22.705)" />
<style type="text/css" media="screen">
html {
  overflow: hidden;
  margin: 0;
  padding: 0;
  height: 100%;
}
body {
  overflow: hidden;
  margin: 0;
  padding: 0;
  height: 100%;
}
#non-scrolling-area {
  padding: 0 10px 0 10px;
  background-color: #5e5f5f;
}
#container {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}
#content {
  padding: 0 10px 5px 10px;
}
</style>
<link type="text/css" rel="stylesheet" href="../css/topics/style.css" />
<script type="text/javascript" src="../js/jquery-3.6.0.min.js"></script>
<script type="text/javascript" src="../js/nsa.js?0a86901a"></script>
<script type="text/javascript" src="../js/settings.js?590e965b"></script>
<script type="text/javascript" src="../js/core.min.js?0a86901a"></script>
<script type="text/javascript" src="../js/topic.min.js?0a86901a"></script>
<script type="text/javascript">
	var topicContext = 3160;
</script>
<!-- Web Help Topic -->
  
<!-- HTML Help (CHM) Topic -->
</head>
<body>
<div id="non-scrolling-area">
  <h1 class="hd0"><span class="ts0">Field Loop Expansion Tokens</span></h1>
</div>
<div id="container">
  <div id="content-background">
    <div id="content">
      <p>&nbsp;</p>
      <p class="ps1"><span class="ts2">Field loop </span><a href="expansiontokens.htm" class="hs4">expansion tokens</a><span class="ts2">&nbsp;are used to insert information about the current field being processed within the context of a field loop into the output stream. Field loop tokens can only be used inside a field loop.</span></p>
      <div class="block0">
        <table class="tbl1">
          <tr class="row0">
            <td class="cell33">
              <p class="ps1"><span class="ts5">Field Loop Token</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts5">Description</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell35">
              <p class="ps1"><a id="FIELD#"></a><span class="ts3">&lt;FIELD#&gt;</span></p>
            </td>
            <td class="cell36">
              <p class="ps1"><span class="ts2">Inserts the 1-based index of the current field in the record, without considering array elements or group fields as individual fields.</span></p>
              <p class="ps1"><span class="ts2">See also:</span><span class="ts5">&nbsp;</span><a href="fieldloopexpansiontokens.htm#FIELD#_ZERO" class="hs2">&lt;FIELD#_ZERO&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD#LOGICAL" class="hs2">&lt;FIELD#LOGICAL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD#LOGICAL_ZERO" class="hs2">&lt;FIELD#LOGICAL_ZERO&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell37">
              <p class="ps1"><a id="FIELD#_ZERO"></a><span class="ts3">&lt;FIELD#_ZERO&gt;</span></p>
            </td>
            <td class="cell36">
              <p class="ps1"><span class="ts2">Inserts the 0-based index of the current field in the record, without considering array elements or group fields as individual fields.</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD#" class="hs2">&lt;FIELD#&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD#LOGICAL" class="hs2">&lt;FIELD#LOGICAL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD#LOGICAL_ZERO" class="hs2">&lt;FIELD#LOGICAL_ZERO&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell37">
              <p class="ps1"><a id="FIELD#LOGICAL"></a><span class="ts3">&lt;FIELD#LOGICAL&gt;</span></p>
            </td>
            <td class="cell36">
              <p class="ps1"><span class="ts2">Inserts the 1-based index of the current field in the record. Array elements and group fields are considered as individual fields. For example a structure with three fields, one of which is an array of 8 elements, is treated as having 10 fields.</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD#" class="hs2">&lt;FIELD#&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD#_ZERO" class="hs2">&lt;FIELD#_ZERO&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD#LOGICAL_ZERO" class="hs2">&lt;FIELD#LOGICAL_ZERO&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell37">
              <p class="ps1"><a id="FIELD#LOGICAL_ZERO"></a><span class="ts3">&lt;FIELD#LOGICAL_ZERO&gt;</span></p>
            </td>
            <td class="cell36">
              <p class="ps1"><span class="ts2">Inserts the 0-based index of the current field in the record. Array elements and group fields are considered as individual fields. For example a structure with three fields, one of which is an array of 8 elements, is treated as having 10 fields.</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD#" class="hs2">&lt;FIELD#&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD#_ZERO" class="hs2">&lt;FIELD#_ZERO&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD#LOGICAL" class="hs2">&lt;FIELD#LOGICAL&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell37">
              <p class="ps1"><a id="FIELD_ALTNAME"></a><span class="ts3">&lt;FIELD_ALTNAME&gt;</span></p>
            </td>
            <td class="cell36">
              <p class="ps1"><span class="ts2">Inserts the alternate name of the field. Array fields are represented in Synergy format, for example ALTNAME[1]. If no alternate name is available then the real name is used.</span></p>
              <p class="ps1"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;field_altname&gt; &lt;Field_Altname&gt; &lt;Field_altname&gt; &lt;FieldAltname&gt; &lt;fieldAltname&gt;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_BASENAME" class="hs2">&lt;FIELD_BASENAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NAME" class="hs2">&lt;FIELD_NAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NETNAME" class="hs2">&lt;FIELD_NETNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NET_ALTNAME" class="hs2">&lt;FIELD_NET_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ODBCNAME" class="hs2">&lt;FIELD_ODBCNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ORIGINAL_NAME" class="hs2">&lt;FIELD_ORIGINAL_NAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQL_ALTNAME" class="hs2">&lt;FIELD_SQL_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQLNAME" class="hs2">&lt;FIELD_SQLNAME&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell37">
              <p class="ps1"><a id="FIELD_ARRIVEM"></a><span class="ts3">&lt;FIELD_ARRIVEM&gt;</span></p>
            </td>
            <td class="cell36">
              <p class="ps1"><span class="ts2">Inserts the name of the fields arrive method if present, or by nothing if not.</span></p>
              <p class="ps1"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;field_arrivem&gt; &lt;Field_Arrivem&gt; &lt;Field_arrivem&gt; &lt;FieldArrivem&gt; &lt;fieldArrivem&gt;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_CHANGEM" class="hs2">&lt;FIELD_CHANGEM&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_DRILLM" class="hs2">&lt;FIELD_DRILLM&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_HYPERM" class="hs2">&lt;FIELD_HYPERM&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_LEAVEM" class="hs2">&lt;FIELD_LEAVEM&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell37">
              <p class="ps1"><a id="FIELD_BASENAME"></a><span class="ts3">&lt;FIELD_BASENAME&gt;</span></p>
            </td>
            <td class="cell36">
              <p class="ps1"><span class="ts2">Inserts the base name of the field. Array field dimensions are not included in the base name.</span></p>
              <p class="ps1"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;field_basename&gt; &lt;Field_Basename&gt; &lt;Field_basename&gt; &lt;FieldBasename&gt; &lt;fieldBasename&gt;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_ALTNAME" class="hs2">&lt;FIELD_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NAME" class="hs2">&lt;FIELD_NAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NETNAME" class="hs2">&lt;FIELD_NETNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NET_ALTNAME" class="hs2">&lt;FIELD_NET_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ODBCNAME" class="hs2">&lt;FIELD_ODBCNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ORIGINAL_NAME" class="hs2">&lt;FIELD_ORIGINAL_NAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQL_ALTNAME" class="hs2">&lt;FIELD_SQL_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQLNAME" class="hs2">&lt;FIELD_SQLNAME&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell37">
              <p class="ps1"><a id="FIELD_BREAK_MODE"></a><span class="ts3">&lt;FIELD_BREAK_MODE&gt;</span></p>
            </td>
            <td class="cell36">
              <p class="ps1"><span class="ts2">Inserts a value indicating whether the field is a break field, and if so what type of break field.</span></p>
              <p class="ps1"><span class="ts2">Possible Values: &quot;</span><span class="ts3">None&quot;, &quot;Change&quot;, &quot;Always&quot;, &quot;Return&quot; </span><span class="ts2">&nbsp;(quotes not inserted)</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell37">
              <p class="ps1"><a id="FIELD_CHANGEM"></a><span class="ts3">&lt;FIELD_CHANGEM&gt;</span></p>
            </td>
            <td class="cell36">
              <p class="ps1"><span class="ts2">Inserts the name of the fields change method if present, or by nothing if not.</span></p>
              <p class="ps1"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;field_changem&gt; &lt;Field_Changem&gt; &lt;Field_changem&gt; &lt;FieldChangem&gt; &lt;fieldChangem&gt;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_ARRIVEM" class="hs2">&lt;FIELD_ARRIVEM&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_DRILLM" class="hs2">&lt;FIELD_DRILLM&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_HYPERM" class="hs2">&lt;FIELD_HYPERM&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_LEAVEM" class="hs2">&lt;FIELD_LEAVEM&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_CLASS"></a><span class="ts3">&lt;FIELD_CLASS&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts the name of the fields class, if present. Only date, time and user-defined fields can have a class assigned.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">Possible Values: YYMMDD, YYYYMMDD, YYJJJ, YYYYJJJ, YYPP, YYYYPP, HHMMSS, HHMM, UserAlpha, UserBinary, UserDate, UserNumeric</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell37">
              <p class="ps1"><a id="FIELD_COL"></a><span class="ts3">&lt;FIELD_COL&gt;</span></p>
            </td>
            <td class="cell36">
              <p class="ps1"><span class="ts2">Inserts the screen column for placement of the field on the screen in a cell-based environment. If the field has a column position specified then this is used, otherwise the default of column 15 is used.</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_DRILL_PIXEL_COL" class="hs2">&lt;FIELD_DRILL_PIXEL_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_COL" class="hs2">&lt;FIELD_PIXEL_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_ROW" class="hs2">&lt;FIELD_PIXEL_ROW&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_WIDTH" class="hs2">&lt;FIELD_PIXEL_WIDTH&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ROW" class="hs2">&lt;FIELD_ROW&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_COL" class="hs2">&lt;PROMPT_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_COL" class="hs2">&lt;PROMPT_PIXEL_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_ROW" class="hs2">&lt;PROMPT_PIXEL_ROW&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_WIDTH" class="hs2">&lt;PROMPT_PIXEL_WIDTH&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_ROW" class="hs2">&lt;PROMPT_ROW&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell37">
              <p class="ps1"><a id="FIELD_CSCONVERT"></a><span class="ts3">&lt;FIELD_CSCONVERT&gt;</span></p>
            </td>
            <td class="cell36">
              <p class="ps1"><span class="ts2">Inserts a string indicating the appropriate C# string to numeric conversion method to use to attempt to parse a string into a numeric value. For non-numeric fields the token is replaced by nothing.</span></p>
              <p class="ps1"><span class="ts2">Possible values: </span><span class="ts3">bool.TryParse, byte.TryParse, decimal.TryParse, double.TryParse, int.TryParse, float.TryParse, long.TryParse, sbyte.TryParse, short.TryParse, uint.TryParse, ulong.TryParse, ushort.TryParse</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_CSDEFAULT" class="hs2">&lt;FIELD_CSDEFAULT&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_CSTYPE" class="hs2">&lt;FIELD_CSTYPE&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell37">
              <p class="ps1"><a id="FIELD_CSDEFAULT"></a><span class="ts3">&lt;FIELD_CSDEFAULT&gt;</span></p>
            </td>
            <td class="cell36">
              <p class="ps1"><span class="ts2">Inserts a C# default value based on the fields data type.</span></p>
              <p class="ps1"><span class="ts2">Possible values: </span><span class="ts3">&quot;&quot;, 0, false, new DateTime(), null</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_CSCONVERT" class="hs2">&lt;FIELD_CSCONVERT&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_CSTYPE" class="hs2">&lt;FIELD_CSTYPE&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell37">
              <p class="ps1"><a id="FIELD_CSTYPE"></a><span class="ts3">&lt;FIELD_CSTYPE&gt;</span></p>
            </td>
            <td class="cell36">
              <p class="ps1"><span class="ts2">Inserts a string indicating the C# equivalent data type of the field.</span></p>
              <p class="ps1"><span class="ts2">Possible values: </span><span class="ts3">bool, byte, double, float, int, long, decimal, DateTime, Nullable&lt;DateTime&gt;, sbyte, short, string, uint, ulong, ushort</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_CSCONVERT" class="hs2">&lt;FIELD_CSCONVERT&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_CSDEFAULT" class="hs2">&lt;FIELD_CSDEFAULT&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_CUSTOM_DBL_TYPE"></a><span class="ts3">&lt;FIELD_CUSTOM_DBL_TYPE&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts a custom DBL data type of a field, if present. Otherwise inserts the same value as </span><a href="fieldloopexpansiontokens.htm#FIELD_SPEC" class="hs2">&lt;FIELD_SPEC&gt;</a><span class="ts2">.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">Developers can specify a custom value via a special token in the fields user text or long description, like this:</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps12"><span class="ts3">CUSTOM_DBL_TYPE=d5.2;</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">The name of the token MUST be specified in upper case and the value MUST be terminated by a semi-colon, as shown above.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_CUSTOM_SQL_TYPE" class="hs2">&lt;FIELD_CUSTOM_SQL_TYPE&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_CUSTOM_CONVERT_FUNCTION" class="hs2">&lt;FIELD_CUSTOM_CONVERT_FUNCTION&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_CUSTOM_STRING_FUNCTION" class="hs2">&lt;FIELD_CUSTOM_STRING_FUNCTION&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SPEC" class="hs2">&lt;FIELD_SPEC&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQLTYPE" class="hs2">&lt;FIELD_SQLTYPE&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_CUSTOM_SQL_TYPE"></a><span class="ts3">&lt;FIELD_CUSTOM_SQL_TYPE&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts a custom SQL data type of a field, if present. Otherwise inserts the same value as </span><a href="fieldloopexpansiontokens.htm#FIELD_SQLTYPE" class="hs2">&lt;FIELD_SQLTYPE&gt;</a><span class="ts2">.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">Developers can specify a custom value via a special token in the fields user text or long description, like this:</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps12"><span class="ts3">CUSTOM_SQL_TYPE=DECMIAL(5,2);</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">The name of the token MUST be specified in upper case and the value MUST be terminated by a semi-colon, as shown above.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_CUSTOM_DBL_TYPE" class="hs2">&lt;FIELD_CUSTOM_DBL_TYPE&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_CUSTOM_CONVERT_FUNCTION" class="hs2">&lt;FIELD_CUSTOM_CONVERT_FUNCTION&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_CUSTOM_STRING_FUNCTION" class="hs2">&lt;FIELD_CUSTOM_STRING_FUNCTION&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SPEC" class="hs2">&lt;FIELD_SPEC&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQLTYPE" class="hs2">&lt;FIELD_SQLTYPE&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_CUSTOM_CONVERT_FUNCTION"></a><span class="ts3">&lt;FIELD_CUSTOM_CONVERT_FUNCTION&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts the name of a custom data conversion function associated with a field., if present. Otherwise inserts nothing. The custom convert function should accept a single parameter which is of the actual data type of the real field, and have a return value which is the custom data type as defined by </span><a href="fieldloopexpansiontokens.htm#FIELD_CUSTOM_DBL_TYPE" class="hs2">&lt;FIELD_CUSTOM_DBL_TYPE&gt;</a><span class="ts2">.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">Developers can specify a custom value via a special token in the fields user text or long description, like this:</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps12"><span class="ts3">CUSTOM_CONVERT_FUNCTION=DivideBy100;</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">The name of the token MUST be specified in upper case and the value MUST be terminated by a semi-colon, as shown above.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">You can test if a field has a custom convert function specified with </span><a href="fieldloopexpressiontokens.htm#CUSTOM_CONVERT_FUNCTION" class="hs2">&lt;IF CUSTOM_CONVERT_FUNCTION&gt;</a><span class="ts2">.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">For example, if a field is a D5 and you wish to process it as a D5.2 then you might set the following values in the long description:</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps12"><span class="ts3">CUSTOM_DBL_TYPE=D5.2;</span></p>
              <p class="ps12"><span class="ts3">CUSTOM_SQL_TYPE=DECIMAL(5,2);</span></p>
              <p class="ps12"><span class="ts3">CUSTOM_CONVERT_FUNCTION=DivideBy100;</span></p>
              <p class="ps12"><span class="ts3">CUSTOM_STRING_FUNCTION=DivideBy100ToString;</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">And the custom convert function might look like this:</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps12"><span class="ts3">function DivideBy100, d.</span></p>
              <p class="ps12"><span class="ts3">&nbsp;&nbsp;&nbsp; required in decimalValue, n</span></p>
              <p class="ps12"><span class="ts3">proc</span></p>
              <p class="ps12"><span class="ts3">&nbsp;&nbsp;&nbsp; freturn decimalValue / 100.0</span></p>
              <p class="ps12"><span class="ts3">endfunction</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_CUSTOM_DBL_TYPE" class="hs2">&lt;FIELD_CUSTOM_DBL_TYPE&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_CUSTOM_SQL_TYPE" class="hs2">&lt;FIELD_CUSTOM_SQL_TYPE&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_CUSTOM_STRING_FUNCTION" class="hs2">&lt;FIELD_CUSTOM_STRING_FUNCTION&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SPEC" class="hs2">&lt;FIELD_SPEC&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQLTYPE" class="hs2">&lt;FIELD_SQLTYPE&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_CUSTOM_STRING_FUNCTION"></a><span class="ts3">&lt;FIELD_CUSTOM_STRING_FUNCTION&gt;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts the name of a custom data conversion function associated with a field., if present. Otherwise inserts nothing. The custom convert function should accept a single parameter which is of the actual data type of the real field, and have a return value which is the custom data type as defined by </span><a href="fieldloopexpansiontokens.htm#FIELD_CUSTOM_DBL_TYPE" class="hs2">&lt;FIELD_CUSTOM_DBL_TYPE&gt;</a><span class="ts2">&nbsp;but formatted appropriately into a string value.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">Developers can specify a custom value via a special token in the fields user text or long description, like this:</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps12"><span class="ts3">CUSTOM_STRING_FUNCTION=DivideBy100AsString;</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">The name of the token MUST be specified in upper case and the value MUST be terminated by a semi-colon, as shown above.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">You can test if a field has a custom convert function specified with </span><a href="fieldloopexpressiontokens.htm#CUSTOM_STRING_FUNCTION" class="hs2">&lt;IF CUSTOM_STRING_FUNCTION&gt;</a><span class="ts2">.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">For example, if a field is a D5 and you wish to process it as a D5.2 then you might set the following values in the long description:</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps12"><span class="ts3">CUSTOM_DBL_TYPE=D5.2;</span></p>
              <p class="ps12"><span class="ts3">CUSTOM_SQL_TYPE=DECIMAL(5,2);</span></p>
              <p class="ps12"><span class="ts3">CUSTOM_CONVERT_FUNCTION=DivideBy100;</span></p>
              <p class="ps12"><span class="ts3">CUSTOM_STRING_FUNCTION=DivideBy100ToString;</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">And the string convert function might look like this:</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps12"><span class="ts3">function DivideBy100ToString, string</span></p>
              <p class="ps12"><span class="ts3">&nbsp;&nbsp;&nbsp; required in decimalValue, n</span></p>
              <p class="ps12"><span class="ts3">proc</span></p>
              <p class="ps12"><span class="ts3">&nbsp;&nbsp;&nbsp; freturn %string(decimalValue/100.0)</span></p>
              <p class="ps12"><span class="ts3">endfunction</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_CUSTOM_DBL_TYPE" class="hs2">&lt;FIELD_CUSTOM_DBL_TYPE&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_CUSTOM_SQL_TYPE" class="hs2">&lt;FIELD_CUSTOM_SQL_TYPE&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_CUSTOM_CONVERT_FUNCTION" class="hs2">&lt;FIELD_CUSTOM_CONVERT_FUNCTION&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SPEC" class="hs2">&lt;FIELD_SPEC&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQLTYPE" class="hs2">&lt;FIELD_SQLTYPE&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell37">
              <p class="ps1"><a id="FIELD_DEFAULT"></a><span class="ts3">&lt;FIELD_DEFAULT&gt;</span></p>
            </td>
            <td class="cell36">
              <p class="ps1"><span class="ts2">Inserts the fields default value, if present.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell37">
              <p class="ps1"><a id="FIELD_DESC"></a><span class="ts3">&lt;FIELD_DESC&gt;</span></p>
            </td>
            <td class="cell36">
              <p class="ps1"><span class="ts2">Inserts the description of the field.</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_INFOLINE" class="hs2">&lt;FIELD_INFOLINE&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_LDESC" class="hs2">&lt;FIELD_LDESC&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_DESC_DOUBLE"></a><span class="ts3">&lt;FIELD_DESC_DOUBLE&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts the description of the field. If any double quote characters are present in the description they are replaced with a single quote.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_DESC_SINGLE"></a><span class="ts3">&lt;FIELD_DESC_SINGLE&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts the description of the field. If any single quote characters are present in the description they are replaced with a double quote.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell37">
              <p class="ps1"><a id="FIELD_DIMENSION1_INDEX"></a><span class="ts3">&lt;FIELD_DIMENSION1_INDEX&gt;</span></p>
            </td>
            <td class="cell36">
              <p class="ps1"><span class="ts2">When CodeGen encounters array fields it expands them into multiple fields each of which is of the same type and size. When processing a field which was formally part of an array, this token can be used to insert the original dimension one index of the field. For non-array fields inserts a single zero (0).</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_ELEMENT" class="hs2">&lt;FIELD_ELEMENT&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ELEMENT0" class="hs2">&lt;FIELD_ELEMENT0&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_DIMENSION2_INDEX"></a><span class="ts3">&lt;FIELD_DIMENSION2_INDEX&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">When CodeGen encounters array fields it expands them into multiple fields each of which is of the same type and size. When processing a field which was formally part of an array with at least two dimensions, this token can be used to insert the original dimension two index of the field. For non-array fields or for array fields with only one dimension inserts a single zero (0).</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_ELEMENT" class="hs2">&lt;FIELD_ELEMENT&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ELEMENT0" class="hs2">&lt;FIELD_ELEMENT0&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell37">
              <p class="ps1"><a id="FIELD_DIMENSION3_INDEX"></a><span class="ts3">&lt;FIELD_DIMENSION3_INDEX&gt;</span></p>
            </td>
            <td class="cell36">
              <p class="ps1"><span class="ts2">When CodeGen encounters array fields it expands them into multiple fields each of which is of the same type and size. When processing a field which was formally part of an array with at least three dimensions, this token can be used to insert the original dimension three index of the field. For non-array fields or for array fields with less than three dimensions inserts a single zero (0).</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_ELEMENT" class="hs2">&lt;FIELD_ELEMENT&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ELEMENT0" class="hs2">&lt;FIELD_ELEMENT0&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell37">
              <p class="ps1"><a id="FIELD_DIMENSION4_INDEX"></a><span class="ts3">&lt;FIELD_DIMENSION4_INDEX&gt;</span></p>
            </td>
            <td class="cell36">
              <p class="ps1"><span class="ts2">When CodeGen encounters array fields it expands them into multiple fields each of which is of the same type and size. When processing a field which was formally part of an array with four dimensions, this token can be used to insert the original dimension four index of the field. For non-array fields or for array fields with less than four dimensions inserts a single zero (0).</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_ELEMENT" class="hs2">&lt;FIELD_ELEMENT&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ELEMENT0" class="hs2">&lt;FIELD_ELEMENT0&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_DISPLAY_LENGTH"></a><span class="ts3">&lt;FIELD_DISPLAY_LENGTH&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">If the current field has a non-zero display length specified then that length is inserted, otherwise nothing is inserted.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_INPUT_LENGTH" class="hs9">&lt;FIELD_INPUT_LENGTH&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SIZE" class="hs2">&lt;FIELD_SIZE&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_VIEW_LENGTH" class="hs2">&lt;FIELD_VIEW_LENGTH&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell37">
              <p class="ps1"><a id="FIELD_DRILLM"></a><span class="ts3">&lt;FIELD_DRILLM&gt;</span></p>
            </td>
            <td class="cell36">
              <p class="ps1"><span class="ts2">Inserts the name of the fields drill method if present, or by nothing if not.</span></p>
              <p class="ps1"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;field_drillm&gt; &lt;Field_Drillm&gt; &lt;Field_drillm&gt; &lt;FieldDrillm&gt; &lt;fieldDrillm&gt;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_ARRIVEM" class="hs2">&lt;FIELD_ARRIVEM&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_CHANGEM" class="hs2">&lt;FIELD_CHANGEM&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_HYPERM" class="hs2">&lt;FIELD_HYPERM&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_LEAVEM" class="hs2">&lt;FIELD_LEAVEM&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_DRILL_PIXEL_COL"></a><span class="ts3">&lt;FIELD_DRILL_PIXEL_COL&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the pixel column for placement of a fields drill button on a form.</span></p>
              <p class="ps1"><span class="ts2">Example Output: </span><span class="ts3">275</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_COL" class="hs2">&lt;FIELD_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_COL" class="hs2">&lt;FIELD_PIXEL_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_ROW" class="hs2">&lt;FIELD_PIXEL_ROW&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ROW" class="hs2">&lt;FIELD_ROW&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_COL" class="hs2">&lt;PROMPT_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_COL" class="hs2">&lt;PROMPT_PIXEL_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_ROW" class="hs2">&lt;PROMPT_PIXEL_ROW&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_WIDTH" class="hs2">&lt;PROMPT_PIXEL_WIDTH&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_ROW" class="hs2">&lt;PROMPT_ROW&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_ELEMENT"></a><span class="ts3">&lt;FIELD_ELEMENT&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">For array fields inserts the one-based element number of the field currently being processed by the field loop. For multi-dimension arrays the token inserts a comma-separated list of current index numbers. For non-array fields the token does not cause anything to be written to the output stream.</span></p>
              <p class="ps1"><span class="ts2">Example Output:</span></p>
              <p class="ps1"><span class="ts3">For a non-array field:</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts17">&lt;no output&gt;</span><br /><span class="ts3">For a single-dimensional array: </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts3">1</span><br /><span class="ts3">For a two-dimensional array:</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts3">1,2</span><br /><span class="ts3">For a three-dimensional array:</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts3">1,2,3</span><br /><span class="ts3">For a four-dimensional array: </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts3">1,2,3,4</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_DIMENSION1_INDEX" class="hs2">&lt;FIELD_DIMENSION1_INDEX&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ELEMENT0" class="hs2">&lt;FIELD_ELEMENT0&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_ELEMENT0"></a><span class="ts3">&lt;FIELD_ELEMENT0&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">For array fields inserts the one-based element number of the field currently being processed by the field loop. For multi-dimension arrays the token inserts a comma-separated list of current index numbers. For non-array fields the token inserts 0.</span></p>
              <h2 class="hd1"><span class="ts27">Example Output</span></h2>
              <p class="ps1"><span class="ts3">For a non-array field:</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts3">0</span><br /><span class="ts3">For a single-dimensional array: </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts3">1</span><br /><span class="ts3">For a two-dimensional array:</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts3">1,2</span><br /><span class="ts3">For a three-dimensional array:</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts3">1,2,3</span><br /><span class="ts3">For a four-dimensional array: </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts3">1,2,3,4</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_DIMENSION1_INDEX" class="hs2">&lt;FIELD_DIMENSION1_INDEX&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ELEMENT" class="hs2">&lt;FIELD_ELEMENT&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_ENUMBASEVAL"></a><span class="ts3">&lt;FIELD_ENUMBASEVAL&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">For enumerated fields, inserts the enumerated fields base value. The base value is the value assigned to the first member of the enumeration. For non-enumerated fields nothing is inserted.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">Note: This token refers to UI Toolkit enumerated fields, which are numeric fields with an enumeration specified via the &quot;Enumerated?&quot; field on the fields Validation tab. This token does NOT refer to fields whose Type is set to Enum on the Field Definition page.</span></p>
              <p class="ps1"><span class="ts2">Example Output: </span><span class="ts3">1</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_ENUMLENGTH" class="hs2">&lt;FIELD_ENUMLENGTH&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ENUMSTEPVAL" class="hs2">&lt;FIELD_ENUMSTEPVAL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ENUMWIDTH" class="hs2">&lt;FIELD_ENUMWIDTH&gt;</a></p>
              <p><span class="ts2">&nbsp;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_ENUMLENGTH"></a><span class="ts3">&lt;FIELD_ENUMLENGTH&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">For enumerated fields, inserts the maximum length of the fields&rsquo; enumerated values. For non-enumerated fields nothing is inserted.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">Example Output: </span><span class="ts3">12</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_ENUMBASEVAL" class="hs2">&lt;FIELD_ENUMBASEVAL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ENUMSTEPVAL" class="hs2">&lt;FIELD_ENUMSTEPVAL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ENUMWIDTH" class="hs2">&lt;FIELD_ENUMWIDTH&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_ENUMSTEPVAL"></a><span class="ts3">&lt;FIELD_ENUMSTEPVAL&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">For enumerated fields, inserts an enumerated fields step value. The step value is the number that is added to or subtracted from the base value for each of the second and subsequent enumeration members. For non-enumerated fields nothing is inserted. </span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">Note: This token refers to UI Toolkit enumerated fields, which are numeric fields with an enumeration specified via the &quot;Enumerated?&quot; field on the fields Validation tab. This token does NOT refer to fields whose Type is set to Enum on the Field Definition page.</span></p>
              <p class="ps1"><span class="ts2">Example Output: </span><span class="ts3">1</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_ENUMBASEVAL" class="hs2">&lt;FIELD_ENUMBASEVAL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ENUMLENGTH" class="hs2">&lt;FIELD_ENUMLENGTH&gt;</a><span class="ts3">,</span><span class="ts2">&nbsp;</span><a href="fieldloopexpansiontokens.htm#FIELD_ENUMWIDTH" class="hs2">&lt;FIELD_ENUMWIDTH&gt;</a></p>
              <p><span class="ts2">&nbsp;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_ENUMWIDTH"></a><span class="ts3">&lt;FIELD_ENUMWIDTH&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts the pixel width for the maximum length of the fields&rsquo; enumerated values.</span></p>
              <p class="ps1"><span class="ts2">Calculated as the maximum length of the fields enumerated values multiplied by 12 pixels per character. This default character width can be overridden using the </span><a href="commandlinereference.htm#option_cw" class="hs7">-cw command line option</a><span class="ts2">.</span></p>
              <p class="ps1"><span class="ts2">Example Output: </span><span class="ts3">144</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_ENUMBASEVAL" class="hs2">&lt;FIELD_ENUMBASEVAL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ENUMLENGTH" class="hs2">&lt;FIELD_ENUMLENGTH&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ENUMSTEPVAL" class="hs2">&lt;FIELD_ENUMSTEPVAL&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_FORMATNAME"></a><span class="ts3">&lt;FIELD_FORMATNAME&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the name of the fields Repository format, or nothing if no format is specified.</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_FORMATSTRING" class="hs2">&lt;FIELD_FORMATSTRING&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_FORMATSTRING"></a><span class="ts3">&lt;FIELD_FORMATSTRING&gt;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts the format string value of the fields Repository format, or nothing if no format is specified.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_FORMATNAME" class="hs2">&lt;FIELD_FORMATNAME&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_GROUP_EXPAND"></a><span class="ts3">&lt;FIELD_GROUP_EXPAND&gt;</span></p>
              <p>&nbsp;</p>
            </td>
            <td class="cell34">
              <p><span class="ts2">This special field loop token should only be used in conjunction with the </span><a href="commandlinereference.htm#option_g" class="hs2">-g e</a><span class="ts2">&nbsp;or </span><a href="commandlinereference.htm#option_g" class="hs2">-g i</a><span class="ts2">&nbsp;command line options, which cause explicit and implicit group fields to me not expanded into individual fields. This token causes the remainder of template code in the current field loop to be processed for fields within the group field that is currently being processed. For additional information and examples, refer to </span><a href="idh-topic30.htm" class="hs2">Processing GROUP Fields</a><span class="ts2">.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_GROUP_MEMBER_PREFIX"></a><span class="ts3">&lt;FIELD_GROUP_MEMBER_PREFIX&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">For unexpanded group fields, inserts the name of the group member prefix, if defined. Otherwise inserts nothing.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">Alternates:</span></p>
              <p class="ps1"><span class="ts3">&lt;field_group_member_prefix&gt; &lt;Field_Group_Member_Prefix&gt; &lt;Field_group_member_prefix&gt; &lt;FieldGroupMemberPrefix&gt; &lt;fieldGroupMemberPrefix&gt;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_GROUP_STRUCTURE"></a><span class="ts3">&lt;FIELD_GROUP_STRUCTURE&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">For unexpanded implicit group fields, inserts the name of the structure that defines the implicit groups members. Otherwise inserts nothing.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">Alternates:</span></p>
              <p class="ps1"><span class="ts3">&lt;field_group_structure&gt; &lt;Field_Group_Structure&gt; &lt;Field_group_structure&gt; &lt;FieldGroupStructure&gt; &lt;fieldGroupStructure&gt;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_HEADING"></a><span class="ts3">&lt;FIELD_HEADING&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the fields report heading. If no heading exists then the field prompt is used. If no prompt exists then the fields SQL name is used. Array fields will have the element number appended (e.g. Phone #1).</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_HELPID"></a><span class="ts3">&lt;FIELD_HELPID&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the fields help identifier if present.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_HYPERM"></a><span class="ts3">&lt;FIELD_HYPERM&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the name of the fields&rsquo; hyperlink method if present, or by nothing if not.</span></p>
              <p class="ps1"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;field_hyperm&gt; &lt;Field_Hyperm&gt; &lt;Field_hyperm&gt; &lt;FieldHyperm&gt; &lt;fieldHyperm&gt;</span></p>
              <p class="ps1"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpansiontokens.htm#FIELD_ARRIVEM" class="hs2">&lt;FIELD_ARRIVEM&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_CHANGEM" class="hs2">&lt;FIELD_CHANGEM&gt;</a><span class="ts2">,&nbsp; </span><a href="fieldloopexpansiontokens.htm#FIELD_DRILLM" class="hs2">&lt;FIELD_DRILLM&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_LEAVEM" class="hs2">&lt;FIELD_LEAVEM&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_INFOLINE"></a><span class="ts3">&lt;FIELD_INFOLINE&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the fields&rsquo; information line text if present.</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_DESC" class="hs2">&lt;FIELD_DESC&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_LDESC" class="hs2">&lt;FIELD_LDESC&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_INPUT_JUSTIFICATION"></a><span class="ts3">&lt;FIELD_INPUT_JUSTIFICATION&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts the input justification of the current field.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">Possible Values:&nbsp; </span><span class="ts3">Left, Right, Center</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_REPORT_JUSTIFICATION" class="hs2">&lt;FIELD_REPORT_JUSTIFICATION&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_INPUT_LENGTH"></a><span class="ts3">&lt;FIELD_INPUT_LENGTH&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the maximum number of characters that can be typed into a UI input field representing the current field.</span></p>
              <p class="ps0"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts2">For alpha fields the input length is the same as the field size.</span></p>
              <p class="ps0"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts2">For decimal fields the input length will be one byte longer than the field size if the field allows negative values.</span></p>
              <p class="ps0"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts2">For implied decimal fields the input length will be one byte longer than the field size to allow for the entry of a decimal point, and two bytes longer that the field size if the field allows negative values.</span></p>
              <p class="ps0"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts2">For integer fields the input length is based on the maximum number of bytes that are required in order to be able to enter the maximum value supported by the integer field, but bear in mind that this may allow your user to enter a value larger than that supported by the underlying field. For example, an I1 field which allows negative values is capable of storing values in the range of -128 to 127, so the input length for the field is 4, but when used to constrain the length of a UI field this would allows the user to enter a value in the range -999 to 9999.</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_DISPLAY_LENGTH" class="hs2">&lt;FIELD_DISPLAY_LENGTH&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SIZE" class="hs2">&lt;FIELD_SIZE&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_VIEW_LENGTH" class="hs2">&lt;FIELD_VIEW_LENGTH&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_LDESC"></a><span class="ts3">&lt;FIELD_LDESC&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the fields long description.</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_DESC" class="hs2">&lt;FIELD_DESC&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_LDESC2" class="hs2">&lt;FIELD_LDESC2&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_INFOLINE" class="hs2">&lt;FIELD_INFOLINE&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_LDESC2"></a><span class="ts3">&lt;FIELD_LDESC2&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts a pre-processed version of the fields long description. The long description is actually an A1800 field, but the repository UI treats is as if it is a [30]A60 array. This token returns a string in which each element of the array that contains data is included in the resulting string, separated by two spaces.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">For example, the following array:</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts3">&nbsp;&nbsp;&nbsp; LDESC, [30]A60, &quot;Option 1&quot;, &quot;&quot;, &quot;Option 2&quot;, &quot;&quot;, &quot;Option 3&quot;</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">Would cause the following data to be inserted:</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts3">&nbsp;&nbsp;&nbsp; Option 1&nbsp; Option2&nbsp; Option 3</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_DESC" class="hs2">&lt;FIELD_DESC&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_LDESC" class="hs2">&lt;FIELD_LDESC&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_INFOLINE" class="hs2">&lt;FIELD_INFOLINE&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_LEAVEM"></a><span class="ts3">&lt;FIELD_LEAVEM&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the name of the fields leave method if present, or by nothing if not.</span></p>
              <p class="ps1"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;field_leavem&gt; &lt;Field_Leavem&gt; &lt;Field_leavem&gt; &lt;FieldLeavem&gt; &lt;fieldLeavem&gt;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_ARRIVEM" class="hs2">&lt;FIELD_ARRIVEM&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_CHANGEM" class="hs2">&lt;FIELD_CHANGEM&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_DRILLM" class="hs2">&lt;FIELD_DRILLM&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_HYPERM" class="hs2">&lt;FIELD_HYPERM&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_MAXVALUE"></a><span class="ts3">&lt;FIELD_MAXVALUE&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the maximum value which should be associated with a numeric field. The token should only be used for numeric fields, so you should only use it within an </span><a href="fieldloopexpressiontokens.htm#NUMERIC" class="hs2">&lt;IF NUMERIC&gt;</a><span class="ts2">&nbsp;field loop expression.</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_MINVALUE" class="hs2">&lt;FIELD_MINVALUE&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_MINVALUE"></a><span class="ts3">&lt;FIELD_MINVALUE&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the minimum value which should be associated with a numeric field. The token should only be used for numeric fields, so you should only use it within an </span><a href="fieldloopexpressiontokens.htm#NUMERIC" class="hs2">&lt;IF NUMERIC&gt;</a><span class="ts2">&nbsp;field loop expression.</span></p>
              <p class="ps1"><span class="ts2">if a field does not allow negative values then a minimum value of 0 will normally be returned. However if the field is also marked as required then a value of 1 is returned.</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_MAXVALUE" class="hs2">&lt;FIELD_MAXVALUE&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_NAME"></a><span class="ts3">&lt;FIELD_NAME&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the name of the field. Array fields are represented in Synergy real array format,&nbsp; and group fields are represented by a full path.</span></p>
              <p class="ps1"><span class="ts2">Example Output:</span></p>
              <p class="ps15"><span class="ts3">ACCOUNT_NUMBER</span><br /><span class="ts3">PHONE[3]</span><br /><span class="ts3">ADDRESS.CITY</span><br /><span class="ts3">CONTACT[2].NAME</span></p>
              <p class="ps1"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;field_name&gt; &lt;Field_Name&gt; &lt;Field_name&gt; &lt;FieldName&gt; &lt;fieldName&gt;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_ALTNAME" class="hs2">&lt;FIELD_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_BASENAME" class="hs2">&lt;FIELD_BASENAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NETNAME" class="hs2">&lt;FIELD_NETNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NET_ALTNAME" class="hs2">&lt;FIELD_NET_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ODBCNAME" class="hs2">&lt;FIELD_ODBCNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ORIGINAL_NAME" class="hs2">&lt;FIELD_ORIGINAL_NAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQL_ALTNAME" class="hs2">&lt;FIELD_SQL_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQLNAME" class="hs2">&lt;FIELD_SQLNAME&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_NETNAME"></a><span class="ts3">&lt;FIELD_NETNAME&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts a .NET compatible name for the current field. Array fields are expanded to multiple individual fields, with the name being suffixed with the array element number, for example 'FIELDNAME1', 'FIELDNAME2' etc.</span></p>
              <p class="ps1"><span class="ts2">The token behaves identically to the </span><a href="fieldloopexpansiontokens.htm#FIELD_SQLNAME" class="hs2">&lt;FIELD_SQLNAME&gt;</a><span class="ts2">&nbsp;token.</span></p>
              <p class="ps1"><span class="ts2">Example Output:</span></p>
              <p class="ps15"><span class="ts3">ACCOUNT_NUMBER</span><br /><span class="ts3">PHONE3</span><br /><span class="ts3">ADDRESS_CITY</span><br /><span class="ts3">CONTACT2_NAME</span></p>
              <p class="ps1"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;field_netname&gt; &lt;Field_Netname&gt; &lt;Field_netname&gt; &lt;FieldNetname&gt; &lt;fieldNetname&gt;</span></p>
              <p class="ps15"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_ALTNAME" class="hs2">&lt;FIELD_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_BASENAME" class="hs2">&lt;FIELD_BASENAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NAME" class="hs2">&lt;FIELD_NAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NET_ALTNAME" class="hs2">&lt;FIELD_NET_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ODBCNAME" class="hs2">&lt;FIELD_ODBCNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ORIGINAL_NAME" class="hs2">&lt;FIELD_ORIGINAL_NAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQL_ALTNAME" class="hs2">&lt;FIELD_SQL_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQLNAME" class="hs2">&lt;FIELD_SQLNAME&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_NET_ALTNAME"></a><span class="ts3">&lt;FIELD_NET_ALTNAME&gt;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts a .NET compatible version of the alternate name for the current field. Array fields are expanded to multiple individual fields, with the name being suffixed with the array element number, for example 'FIELDNAME1', 'FIELDNAME2' etc.</span></p>
              <p class="ps1"><span class="ts2">The token behaves identically to the </span><a href="fieldloopexpansiontokens.htm#FIELD_SQL_ALTNAME" class="hs2">&lt;FIELD_SQL_ALTNAME&gt;</a><span class="ts2">&nbsp;token.</span></p>
              <p class="ps1"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;field_net_altname&gt; &lt;Field_Net_Altname&gt; &lt;Field_net_altname&gt; &lt;FieldNetAltname&gt; &lt;fieldNetAltname&gt;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_ALTNAME" class="hs2">&lt;FIELD_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_BASENAME" class="hs2">&lt;FIELD_BASENAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NAME" class="hs2">&lt;FIELD_NAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NETNAME" class="hs2">&lt;FIELD_NETNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ODBCNAME" class="hs2">&lt;FIELD_ODBCNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ORIGINAL_NAME" class="hs2">&lt;FIELD_ORIGINAL_NAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQL_ALTNAME" class="hs2">&lt;FIELD_SQL_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQLNAME" class="hs2">&lt;FIELD_SQLNAME&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_NOECHO_CHAR"></a><span class="ts3">&lt;FIELD_NOECHO_CHAR&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the character that should be used to represent each character typed into a field, in place of the actual character (think password fields).</span></p>
              <p class="ps1"><span class="ts2">If the current field being processed is a &quot;no echo&quot; field then the token will be replaced by the no echo character specified in the repository field definition, or by an asterisk (*) if no character is specified. If the field is not a &quot;no echo&quot; field then the token will be replaced by a null string.</span></p>
              <p class="ps1"><span class="ts2">See also: </span><span class="ts3">&lt;IF ECHO&gt;, &lt;IF NOECHO&gt;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_OCDEFAULT"></a><span class="ts3">&lt;FIELD_OCDEFAULT&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts an Objective-C default value based on the fields data type.</span></p>
              <p class="ps1"><span class="ts2">Possible values: </span></p>
              <p class="ps15"><span class="ts3">@&quot;&quot;</span><br /><span class="ts3">0</span><br /><span class="ts3">0.0</span><br /><span class="ts3">NO</span><br /><span class="ts3">[NSDate new]</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_OCTYPE" class="hs2">&lt;FIELD_OCTYPE&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_OCTYPE"></a><span class="ts3">&lt;FIELD_OCTYPE&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts a string indicating the Objective-C equivalent data type of the field.</span></p>
              <p class="ps1"><span class="ts2">Possible values:</span></p>
              <p class="ps15"><span class="ts3">BOOL</span><br /><span class="ts3">double</span><br /><span class="ts3">float</span><br /><span class="ts3">int</span><br /><span class="ts3">long int</span><br /><span class="ts3">NSDate</span><br /><span class="ts3">NSString</span><br /><span class="ts3">short int</span><br /><span class="ts3">unsigned int</span><br /><span class="ts3">unsigned long int</span><br /><span class="ts3">unsigned short int</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_OCDEFAULT" class="hs2">&lt;FIELD_OCDEFAULT&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_ODBCNAME"></a><span class="ts3">&lt;FIELD_ODBCNAME&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts an ODBC-compatible name for the current field. Array fields are expanded to multiple individual fields, with the name being suffixed with an underscore and the array element number, for example 'FIELDNAME_1', 'FIELDNAME_2' etc. Note however that using the alternate pascal-case (&lt;FieldOdbcname&gt;) or camel-case (&lt;fieldOdbcname&gt;) tokens will cause the underscore characters to be suppressed.</span></p>
              <p class="ps1"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;field_odbcname&gt; &lt;Field_Odbcname&gt; &lt;Field_odbcname&gt; &lt;FieldOdbcname&gt; &lt;fieldOdbcname&gt;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_ALTNAME" class="hs2">&lt;FIELD_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_BASENAME" class="hs2">&lt;FIELD_BASENAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NAME" class="hs2">&lt;FIELD_NAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NETNAME" class="hs2">&lt;FIELD_NETNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NET_ALTNAME" class="hs2">&lt;FIELD_NET_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ORIGINAL_NAME" class="hs2">&lt;FIELD_ORIGINAL_NAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQL_ALTNAME" class="hs2">&lt;FIELD_SQL_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQLNAME" class="hs2">&lt;FIELD_SQLNAME&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_ORIGINAL_NAME"></a><span class="ts3">&lt;FIELD_ORIGINAL_NAME&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the original name of the field as defined in the repository. A fields original name never changes, and does not include any array dimensions or paths resulting from the expansion of array or group fields.</span></p>
              <p class="ps1"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;field_original_name&gt; &lt;Field_Original_Name&gt; &lt;Field_original_name&gt; &lt;FieldOriginalName&gt; &lt;fieldOriginalName&gt;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_ALTNAME" class="hs2">&lt;FIELD_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_BASENAME" class="hs2">&lt;FIELD_BASENAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NAME" class="hs2">&lt;FIELD_NAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NETNAME" class="hs2">&lt;FIELD_NETNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NET_ALTNAME" class="hs2">&lt;FIELD_NET_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ODBCNAME" class="hs2">&lt;FIELD_ODBCNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ORIGINAL_NAME_MODIFIED" class="hs2">&lt;FIELD_ORIGINAL_NAME_MODIFIED&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQL_ALTNAME" class="hs2">&lt;FIELD_SQL_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQLNAME" class="hs2">&lt;FIELD_SQLNAME&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_ORIGINAL_NAME_MODIFIED"></a><span class="ts3">&lt;FIELD_ORIGINAL_NAME_MODIFIED&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts the original name of the field as defined in the repository, modified to include any array dimensions or paths resulting from the expansion of array or group fields.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;field_original_name_modified&gt; &lt;Field_Original_Name_Modified&gt; &lt;Field_original_name_modified&gt; &lt;FieldOriginalNameModified&gt; &lt;fieldOriginalNameModified&gt;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_ALTNAME" class="hs2">&lt;FIELD_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_BASENAME" class="hs2">&lt;FIELD_BASENAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NAME" class="hs2">&lt;FIELD_NAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NETNAME" class="hs2">&lt;FIELD_NETNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NET_ALTNAME" class="hs2">&lt;FIELD_NET_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ODBCNAME" class="hs2">&lt;FIELD_ODBCNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ORIGINAL_NAME" class="hs2">&lt;FIELD_ORIGINALNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQL_ALTNAME" class="hs2">&lt;FIELD_SQL_ALTNAME&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQLNAME" class="hs2">&lt;FIELD_SQLNAME&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_OVERLAY_FIELD"></a><span class="ts3">&lt;FIELD_OVERLAY_FIELD&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">For overlay fields, inserts the name of the field being overlaid.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">NOTE: This token should only be used when overlay fields are being included in processing via the </span><a href="commandlinereference.htm#option_f" class="hs2">-f o command line option</a><span class="ts2">.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;field_overlay_field&gt; &lt;Field_Overlay_Field&gt; &lt;Field_overlay_field&gt; &lt;FieldOverlayField&gt; &lt;fieldOverlayField&gt;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_OVERLAY_OFFSET" class="hs2">&lt;FIELD_OVERLAY_OFFSET&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_OVERLAY_SPEC" class="hs2">&lt;FIELD_OVERLAY_SPEC&gt;</a><span class="ts2">, </span><a href="fieldloopexpressiontokens.htm#OVERLAY" class="hs2">&lt;IF OVERLAY&gt;</a><span class="ts2">, </span><a href="fieldloopexpressiontokens.htm#OVERLAY_OFFSET" class="hs2">&lt;IF OVERLAY_OFFSET&gt;</a></p>
              <p><span class="ts2">&nbsp;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_OVERLAY_OFFSET"></a><span class="ts3">&lt;FIELD_OVERLAY_OFFSET&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">For overlay fields, inserts the overlay offset within the field being overlaid, which might be 0 or a positive integer. For non-overlay fields, inserts nothing.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">NOTE: This token should only be used when overlay fields are being included in processing via the </span><a href="commandlinereference.htm#option_f" class="hs2">-f o command line option</a><span class="ts2">.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_OVERLAY_FIELD" class="hs2">&lt;FIELD_OVERLAY_FIELD&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_OVERLAY_SPEC" class="hs2">&lt;FIELD_OVERLAY_SPEC&gt;</a><span class="ts2">, </span><a href="fieldloopexpressiontokens.htm#OVERLAY" class="hs2">&lt;IF OVERLAY&gt;</a><span class="ts2">, </span><a href="fieldloopexpressiontokens.htm#OVERLAY_OFFSET" class="hs2">&lt;IF OVERLAY_OFFSET&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_OVERLAY_SPEC"></a><span class="ts3">&lt;FIELD_OVERLAY_SPEC&gt;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">For overlay fields, inserts the overlay specification that identifies what is being overlaid.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">NOTE: This token should only be used when overlay fields are being included in processing via the </span><a href="commandlinereference.htm#option_f" class="hs2">-f o command line option</a><span class="ts2">.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">Example Output:</span><br /><span class="ts3">@OTHERFIELD</span><br /><span class="ts3">@otherfield + 5</span></p>
              <p class="ps1"><span class="ts2">Alternates: </span><span class="ts3">&lt;field_overlay_spec&gt;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_OVERLAY_FIELD" class="hs2">&lt;FIELD_OVERLAY_FIELD&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_OVERLAY_OFFSET" class="hs2">&lt;FIELD_OVERLAY_OFFSET&gt;</a><span class="ts2">, </span><a href="fieldloopexpressiontokens.htm#OVERLAY" class="hs2">&lt;IF OVERLAY&gt;</a><span class="ts2">, </span><a href="fieldloopexpressiontokens.htm#OVERLAY_OFFSET" class="hs2">&lt;IF OVERLAY_OFFSET&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_PAINTCHAR"></a><span class="ts3">&lt;FIELD_PAINTCHAR&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts the paint character that would be used to represent each character if the current field is a paint field. The default paint character is an asterisk (*).</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_PAINTFIELD"></a><span class="ts3">&lt;FIELD_PAINTFIELD&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts a string indicating whether the current field is a paint field.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">Possible values:</span></p>
              <p><span class="ts3">Yes</span></p>
              <p><span class="ts3">No</span></p>
              <p><span class="ts2">&nbsp;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_PATH"></a><span class="ts3">&lt;FIELD_PATH&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the path of the field. Array fields are represented in Synergy format, for example structure.fieldname[1].&nbsp; </span></p>
              <p class="ps1"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;field_path&gt; &lt;Field_Path&gt; &lt;Field_path&gt; &lt;FieldPath&gt; &lt;fieldPath&gt;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_PATH_CONV"></a><span class="ts3">&lt;FIELD_PATH_CONV&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the path of the field. Array fields are represented in Synergy format, for example structure.fieldname[1]. If the fields user text or long description contains an @UNMAPF=function; expression then the conversion function will also be applied.</span></p>
              <p class="ps1"><span class="ts2">Alternates: </span><span class="ts3">&lt;field_path_conv&gt;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_PII_TYPE"></a><span class="ts3">&lt;FIELD_PII_TYPE&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">If a special &quot;PII_TYPE&quot; token has been added to the fields long description or user defined text field then this token extracts the specific type from that token and inserts it into the generated code.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">The PII_TYPE token looks like this:</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps12"><span class="ts3">PII_TYPE=</span><span class="ts17">type</span><span class="ts3">;</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">The </span><span class="ts6">type</span><span class="ts2">&nbsp; specified can be anything, and that value is what is inserted by this token. Common examples might be:</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps12"><span class="ts3">PII_TYPE=</span><span class="ts17">CREDIT_CARD_NUMBER</span><span class="ts3">;</span></p>
              <p class="ps12"><span class="ts3">PII_TYPE=PHONE_NUMBER;</span></p>
              <p class="ps12"><span class="ts3">PII_TYPE=SOCIAL_SECUTIRY_NUMBER;</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpressiontokens.htm#PII_SCRUB" class="hs2">&lt;IF PII_SCRUB&gt;</a><span class="ts2">, </span><a href="structureexpressiontokens.htm#STRUCTURE_PII_FIELDS" class="hs2">&lt;IF STRUCTURE_PII_FIELDS&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_PIXEL_COL"></a><span class="ts3">&lt;FIELD_PIXEL_COL&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the pixel column for placement of the field within a UI form. If the field has a column position specified then this is used, otherwise the default of column 15 is used.</span></p>
              <p class="ps1"><span class="ts2">A default width of 12 pixels per character is used, and this can be overridden using the </span><a href="commandlinereference.htm#option_cw" class="hs2">-cw command line option</a><span class="ts2">.</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_COL" class="hs2">&lt;FIELD_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_DRILL_PIXEL_COL" class="hs2">&lt;FIELD_DRILL_PIXEL_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_ROW" class="hs2">&lt;FIELD_PIXEL_ROW&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_WIDTH" class="hs2">&lt;FIELD_PIXEL_WIDTH&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ROW" class="hs2">&lt;FIELD_ROW&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_COL" class="hs2">&lt;PROMPT_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_COL" class="hs2">&lt;PROMPT_PIXEL_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_ROW" class="hs2">&lt;PROMPT_PIXEL_ROW&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_WIDTH" class="hs2">&lt;PROMPT_PIXEL_WIDTH&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_ROW" class="hs2">&lt;PROMPT_ROW&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_PIXEL_ROW"></a><span class="ts3">&lt;FIELD_PIXEL_ROW&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the pixel row for placement of the field within a UI form. If the field has a row position defined then this is used, otherwise the logical field number (which includes array elements) is used to calculate the default row.</span></p>
              <p class="ps1"><span class="ts2">A default height of 25 pixels per row is used, and this can be overridden using the </span><a href="commandlinereference.htm#option_ch" class="hs2">-ch command line option</a><span class="ts2">.</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_COL" class="hs2">&lt;FIELD_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_DRILL_PIXEL_COL" class="hs2">&lt;FIELD_DRILL_PIXEL_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_COL" class="hs2">&lt;FIELD_PIXEL_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_WIDTH" class="hs2">&lt;FIELD_PIXEL_WIDTH&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ROW" class="hs2">&lt;FIELD_ROW&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_COL" class="hs2">&lt;PROMPT_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_COL" class="hs2">&lt;PROMPT_PIXEL_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_ROW" class="hs2">&lt;PROMPT_PIXEL_ROW&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_WIDTH" class="hs2">&lt;PROMPT_PIXEL_WIDTH&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_ROW" class="hs2">&lt;PROMPT_ROW&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_PIXEL_WIDTH"></a><span class="ts3">&lt;FIELD_PIXEL_WIDTH&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the pixel width for default sizing of the field when represented as a TextBox.</span></p>
              <p class="ps1"><span class="ts2">Calculated as the size of the field in characters multiplied by 12 pixels per character. This default character width can be overridden using the </span><a href="commandlinereference.htm#option_cw" class="hs2">-cw command line option</a><span class="ts2">.</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_COL" class="hs2">&lt;FIELD_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_DRILL_PIXEL_COL" class="hs2">&lt;FIELD_DRILL_PIXEL_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_COL" class="hs2">&lt;FIELD_PIXEL_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_ROW" class="hs2">&lt;FIELD_PIXEL_ROW&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ROW" class="hs2">&lt;FIELD_ROW&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_COL" class="hs2">&lt;PROMPT_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_COL" class="hs2">&lt;PROMPT_PIXEL_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_ROW" class="hs2">&lt;PROMPT_PIXEL_ROW&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_WIDTH" class="hs2">&lt;PROMPT_PIXEL_WIDTH&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_ROW" class="hs2">&lt;PROMPT_ROW&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_POSITION"></a><span class="ts3">&lt;FIELD_POSITION&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the one-based byte position of the field in the record.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_POSITION_COL"></a><span class="ts3">&lt;FIELD_POSITION_COL&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">If the field has a field position specified, this token inserts the column position or offset value. Otherwise nothing is inserted.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_POSITION_MODE"></a><span class="ts3">&lt;FIELD_POSITION_MODE&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts the field position mode of the current field.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">Possible Values:&nbsp; </span><span class="ts3">None, Absolute, Relative</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_POSITION_ROW"></a><span class="ts3">&lt;FIELD_POSITION_ROW&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">If the field has a field position specified, this token inserts the row position or offset value. Otherwise nothing is inserted.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_POSITION_ZERO"></a><span class="ts3">&lt;FIELD_POSITION_ZERO&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the zero-based byte position of the field in the record.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_PRECISION"></a><span class="ts3">&lt;FIELD_PRECISION&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the precision of an implied-decimal field or an empty string. Only the precision is inserted, with no leading period.</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_PRECISION0" class="hs2">&lt;FIELD_PRECISION0&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PRECISION2" class="hs2">&lt;FIELD_PRECISION2&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_PRECISION0"></a><span class="ts3">&lt;FIELD_PRECISION0&gt;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts the precision of an implied-decimal field or 0 for non implied decimal fields.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_PRECISION" class="hs2">&lt;FIELD_PRECISION&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PRECISION2" class="hs2">&lt;FIELD_PRECISION2&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_PRECISION2"></a><span class="ts3">&lt;FIELD_PRECISION2&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the precision of an implied-decimal field including a leading period, or an empty string.</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_PRECISION" class="hs2">&lt;FIELD_PRECISION&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PRECISION0" class="hs2">&lt;FIELD_PRECISION0&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_PROMPT"></a><span class="ts3">&lt;FIELD_PROMPT&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the fields prompt.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_RANGE_MAX"></a><span class="ts3">&lt;FIELD_RANGE_MAX&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the numeric fields&rsquo; maximum value.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_RANGE_MIN"></a><span class="ts3">&lt;FIELD_RANGE_MIN&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the numeric fields&rsquo; minimum value.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_REGEX"></a><span class="ts3">&lt;FIELD_REGEX&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts a regular expression that can be used to constrain and validate user input to a field based on the repository definition of the field. The regular expression inserted depends on the type of field.</span></p>
              <div class="block0">
                <table class="tbl0">
                  <tr class="row0">
                    <td class="cell10">
                      <p class="ps1"><span class="ts5">Nature of field</span></p>
                    </td>
                    <td class="cell11">
                      <p class="ps1"><span class="ts5">Regular Expression</span></p>
                    </td>
                    <td class="cell12">
                      <p class="ps1"><span class="ts5">Description</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell13">
                      <p class="ps1"><span class="ts2">A4</span></p>
                    </td>
                    <td class="cell14">
                      <p class="ps1"><span class="ts3">&nbsp;^.{0,4}$</span></p>
                    </td>
                    <td class="cell15">
                      <p class="ps1"><span class="ts2">Allows between 0 and 4 characters.</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell16">
                      <p class="ps1"><span class="ts2">A4, required field</span></p>
                    </td>
                    <td class="cell17">
                      <p class="ps1"><span class="ts3">&nbsp;^.{1,4}$</span></p>
                    </td>
                    <td class="cell18">
                      <p class="ps1"><span class="ts2">Allows between 1 and 4 characters.</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell13">
                      <p class="ps1"><span class="ts2">D4, no negatives</span></p>
                    </td>
                    <td class="cell14">
                      <p class="ps1"><span class="ts3">&nbsp;^[+]?[0]*[0-9]{0,4}$</span></p>
                    </td>
                    <td class="cell15">
                      <p class="ps1"><span class="ts2">Allows an optional + sign, followed by any number of leading zeros, followed by up to four numeric digits.</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell13">
                      <p class="ps1"><span class="ts2">D4, allows negatives</span></p>
                    </td>
                    <td class="cell14">
                      <p class="ps1"><span class="ts3">&nbsp;^[+-]?[0]*[0-9]{0,4}$</span></p>
                    </td>
                    <td class="cell15">
                      <p class="ps1"><span class="ts2">Allows an optional + or - sign, followed by any number of leading zeros, followed by up to four numeric digits.</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell13">
                      <p class="ps1"><span class="ts2">D4.2, no negatives</span></p>
                    </td>
                    <td class="cell14">
                      <p class="ps1"><span class="ts3">&nbsp;^[+]?[0]*[0-9]{0,2}(\.[0-9]{0,2}[0]*)?$</span></p>
                    </td>
                    <td class="cell15">
                      <p class="ps1"><span class="ts2">Allows an optional + sign, followed by any number of leading zeros, followed by up to two numeric digits, followed by an optional decimal point. If a decimal point is found then up to two numeric digits may follow, followed by any number of trailing zeros.</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell13">
                      <p class="ps1"><span class="ts2">D4.2, allows negatives</span></p>
                    </td>
                    <td class="cell14">
                      <p class="ps1"><span class="ts3">&nbsp;^[+-]?[0]*[0-9]{0,2}(\.[0-9]{0,2}[0]*)?$</span></p>
                    </td>
                    <td class="cell15">
                      <p class="ps1"><span class="ts2">Allows an optional + or - sign, followed by any number of leading zeros, followed by up to two numeric digits, followed by an optional decimal point. If a decimal point is found then up to two numeric digits may follow, followed by any number of trailing zeros.</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell16">
                      <p class="ps1"><span class="ts2">I4, no negatives</span></p>
                    </td>
                    <td class="cell17">
                      <p class="ps1"><span class="ts3">&nbsp;^[+]?[0]*[0-9]{0,10}$</span></p>
                    </td>
                    <td class="cell18">
                      <p class="ps1"><span class="ts2">Allows an optional + sign, followed by any number of leading zeros, followed by up to ten numeric digits.</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell16">
                      <p class="ps1"><span class="ts2">I4, allows negatives</span></p>
                    </td>
                    <td class="cell17">
                      <p class="ps1"><span class="ts3">&nbsp;^[+-]?[0]*[0-9]{0,10}$</span></p>
                    </td>
                    <td class="cell18">
                      <p class="ps1"><span class="ts2">Allows an optional + or - sign, followed by any number of leading zeros, followed by up to ten numeric digits.</span></p>
                    </td>
                  </tr>
                </table>
              </div>
              <p class="ps1"><span class="ts2">In the table above, the numbers shown in red are based on the size of the field being processed at the time.</span></p>
              <h3 class="hd1"><span class="ts9">Integer Fields</span></h3>
              <p class="ps1"><span class="ts2">The regular expression for integer fields will constrain the number of characters entered, and restrict those characters to being numeric characters, but it will NOT restrict the user to only entering valid numeric values. For example, an i1 field can store up to 127, the regular expression will constrain the entry to 3 numeric characters but it will still be possible to enter an out of range value (e.g. 256).</span></p>
              <h3 class="hd1"><span class="ts9">Required Fields</span></h3>
              <p class="ps1"><span class="ts2">Currently CodeGen only takes a fields &quot;required&quot; status into account for alpha fields. If an alpha field is required then the regular expression produced will require at least one character be present.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_REPORT_JUSTIFICATION"></a><span class="ts3">&lt;FIELD_REPORT_JUSTIFICATION&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts the report justification of the current field.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">Possible Values:&nbsp; </span><span class="ts3">Left, Right, Center</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_INPUT_JUSTIFICATION" class="hs2">&lt;FIELD_INPUT_JUSTIFICATION&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_ROW"></a><span class="ts3">&lt;FIELD_ROW&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the screen row for placement of the field on the screen in a cell based environment. If the field has a row position defined then this is used, otherwise the logical field number (which includes array elements) is used to calculate the default row.</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_COL" class="hs2">&lt;FIELD_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_DRILL_PIXEL_COL" class="hs2">&lt;FIELD_DRILL_PIXEL_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_COL" class="hs2">&lt;FIELD_PIXEL_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_ROW" class="hs2">&lt;FIELD_PIXEL_ROW&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_WIDTH" class="hs2">&lt;FIELD_PIXEL_WIDTH&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_COL" class="hs2">&lt;PROMPT_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_COL" class="hs2">&lt;PROMPT_PIXEL_COL&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_ROW" class="hs2">&lt;PROMPT_PIXEL_ROW&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_WIDTH" class="hs2">&lt;PROMPT_PIXEL_WIDTH&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_ROW" class="hs2">&lt;PROMPT_ROW&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_SAMPLE_DATA"></a><span class="ts3">&lt;FIELD_SAMPLE_DATA&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts sample date for the field. This token is intended to be used for the generation of examples in documentation or API references.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">The token first looks in the long description data for sample data defined like this:</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts3">&nbsp;&nbsp;&nbsp; SAMPLE_DATA=123 Main Street;</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">If found then the value between SAMPLE_DATA= and the semi-colon is inserted. If not found then an appropriate generic value (ABC or 123, etc.) is inserted.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">Sample data for alpha variables is surrounded by double quotes.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">NOTE: This token only currently works with basic field types alpha, decimal, implied decimal, integer and boolean. For other field types nothing is inserted.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">Possible Values:&nbsp; </span><span class="ts3">&quot;ABC&quot;, 123, 1.23, True, &quot;Sample &quot;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_SAMPLE_DATA_NOQUOTES" class="hs2">&lt;FIELD_SAMPLE_DATA_NOQUOTES&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_SAMPLE_DATA_NOQUOTES"></a><span class="ts3">&lt;FIELD_SAMPLE_DATA_NOQUOTES&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts sample date for the field. This token is intended to be used for the generation of examples in documentation or API references.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">The token first looks in the long description data for sample data defined like this:</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts3">&nbsp;&nbsp;&nbsp; SAMPLE_DATA=123 Main Street;</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">If found then the value between SAMPLE_DATA= and the semi-colon is inserted. If not found then an appropriate generic value (ABC or 123, etc.) is inserted.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">Sample data for alpha variables is NOT surrounded by double quotes.</span><a href="fieldloopexpansiontokens.htm#FIELD_SELECTIONS1" class="hs2">&lt;FIELD_SELECTIONS1&gt;</a></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">NOTE: This token only currently works with basic field types alpha, decimal, implied decimal, integer and boolean. For other field types nothing is inserted.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">Possible Values:&nbsp; </span><span class="ts3">ABC, 123, 1.23, True, Sample</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_SAMPLE_DATA" class="hs2">&lt;FIELD_SAMPLE_DATA&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_SELECTION_COUNT"></a><span class="ts3">&lt;FIELD_SELECTION_COUNT&gt;</span><br /><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts the number of selection list values that are associated with the field. A value of 0 will be inserted for fields that do not have associated selection lists.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">Example: </span><span class="ts3">4</span></p>
              <p><span class="ts3">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_SELECTIONS" class="hs9">&lt;FIELD_SELECTIONS&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SELECTIONS1" class="hs2">&lt;FIELD_SELECTIONS1&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_SELECTIONS"></a><span class="ts3">&lt;FIELD_SELECTIONS&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">If the field has a selection list defined, this token inserts a comma separated and quoted list of the fields&rsquo; selection list values, otherwise nothing is inserted.</span></p>
              <p class="ps1"><span class="ts2">Example: </span><span class="ts3">&quot;Red&quot;,&quot;Green&quot;,&quot;Blue&quot;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_SELECTION_COUNT" class="hs2">&lt;FIELD_SELECTION_COUNT&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SELECTIONS1" class="hs2">&lt;FIELD_SELECTIONS1&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_SELECTIONS1"></a><span class="ts3">&lt;FIELD_SELECTIONS1&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">If the field has a selection list defined, this token inserts a quoted string containing a pipe (|) delimited list of the fields selection list values, otherwise nothing is inserted.</span></p>
              <p class="ps1"><span class="ts2">Example:&nbsp; </span><span class="ts3">&quot;Red|Green|Blue&quot;</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_SELECTION_COUNT" class="hs2">&lt;FIELD_SELECTION_COUNT&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SELECTIONS" class="hs9">&lt;FIELD_SELECTIONS&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_SELECTIONS_COL"></a><span class="ts3">&lt;FIELD_SELECTIONS_COL&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">If the field has a selection list or selection window and selection column defined, this token inserts the column position for the placement of the selection window. Otherwise nothing is inserted.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_SELECTIONS_HEIGHT"></a><span class="ts3">&lt;FIELD_SELECTIONS_HEIGHT&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">If the field has a selection list defined, this token inserts the maximum height in rows that the generated selection window should occupy vertically. Otherwise nothing is inserted.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_SELECTIONS_ROW"></a><span class="ts3">&lt;FIELD_SELECTIONS_ROW&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">If the field has a selection list or selection window and selection row defined, this token inserts the row position for the placement of the selection window. Otherwise nothing is inserted.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_SELLENGTH"></a><span class="ts3">&lt;FIELD_SELLENGTH&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the maximum length of the fields&rsquo; selection list values.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_SELWND"></a><span class="ts3">&lt;FIELD_SELWND&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the name of the selection window associated with the current field, always in uppercase.. If the field does not have a selection window then the token inserts nothing.</span></p>
              <p class="ps1"><span class="ts2">Bear in mind that if the </span><a href="commandlinereference.htm#option_ws" class="hs7">-ws command line option</a><span class="ts2">&nbsp;is being used then CodeGen may have removed the selection window name from the field definition and replaced it with a selection list, based on the selection windows entries. In that case you can use a </span><a href="fieldselectionloops.htm" class="hs7">&lt;SELECTION_LOOP&gt;</a><span class="ts2">&nbsp;to process the selections.</span></p>
              <p class="ps1"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;field_selwnd&gt; &lt;Field_Selwnd&gt; &lt;Field_selwnd&gt; &lt;FieldSelwnd&gt; &lt;fieldSelwnd&gt;</span></p>
              <p class="ps1"><span class="ts2">Note that in repository the name of a fields selection window can be entered in a mixed case format. The &lt;FIELD_SELWND_ORIGINAL&gt; token allows you to use the name of the selection window exactly as it appears in the repository.</span></p>
              <p class="ps1"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpressiontokens.htm#SELWND" class="hs9">&lt;IF SELWND&gt;</a><span class="ts3">, </span><a href="fieldloopexpressiontokens.htm#NOSELWND" class="hs9">&lt;IF NOSELWND&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_SELWND_ORIGINAL"></a><span class="ts3">&lt;FIELD_SELWND_ORIGINAL&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts the name of the selection window associated with the current field exactly as defined in the repository (might be mixed case). If the field does not have a selection window then the token inserts nothing.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_SIZE"></a><span class="ts3">&lt;FIELD_SIZE&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the size of the field in bytes.</span></p>
              <p class="ps1"><span class="ts2">See also: </span><a href="fieldloopexpansiontokens.htm#FIELD_DISPLAY_LENGTH" class="hs2">&lt;FIELD_DISPLAY_LENGTH&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_INPUT_LENGTH" class="hs9">&lt;FIELD_INPUT_LENGTH&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_VIEW_LENGTH" class="hs2">&lt;FIELD_VIEW_LENGTH&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_SNDEFAULT"></a><span class="ts3">&lt;FIELD_SNDEFAULT&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts a Synergy .NET default value based on the fields data type.</span></p>
              <p class="ps1"><span class="ts2">Possible Values:&nbsp; </span><span class="ts3">&quot;&quot;, 0, false, new DateTime(), ^null, </span></p>
              <p class="ps1"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpansiontokens.htm#FIELD_SNTYPE" class="hs2">&lt;FIELD_SNTYPE&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_SNTYPE"></a><span class="ts3">&lt;FIELD_SNTYPE&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts a string indicating the Synergy NET data type of the field.</span></p>
              <p class="ps1"><span class="ts2">Possible Values:&nbsp; </span><span class="ts3">boolean, byte, DateTime, decimal, double, float, int, long, @Nullable&lt;DateTime&gt;, short, String, ystem.SByte, System.UInt16, System.UInt32, System.UInt64</span></p>
              <p class="ps1"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpansiontokens.htm#FIELD_SNDEFAULT" class="hs2">&lt;FIELD_SNDEFAULT&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_SPEC"></a><span class="ts3">&lt;FIELD_SPEC&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts a Synergy data type definition for the field.</span></p>
              <p class="ps1"><span class="ts2">Example values: </span><span class="ts3">A15, D12.4, BOOLEAN</span></p>
              <p class="ps1"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;field_spec&gt; &lt;Field_Spec&gt; &lt;Field_spec&gt; &lt;FieldSpec&gt; &lt;fieldSpec&gt;</span></p>
              <p class="ps1"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpansiontokens.htm#FIELD_CSTYPE" class="hs2">&lt;FIELD_CSTYPE&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_OCTYPE" class="hs2">&lt;FIELD_OCTYPE&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQLTYPE" class="hs2">&lt;FIELD_SQLTYPE&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_TYPE" class="hs9">&lt;FIELD_TYPE&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_TYPE_NAME" class="hs2">&lt;FIELD_TYPE_NAME&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_VBTYPE" class="hs2">&lt;FIELD_VBTYPE&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_SQLNAME"></a><span class="ts3">&lt;FIELD_SQLNAME&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts a SQL-compatible name for the current field. Array fields are expanded to multiple individual fields, with the name being suffixed with the array element number, for example 'FIELDNAME1', 'FIELDNAME2' etc.</span></p>
              <p class="ps16"><span class="ts2">The token behaves identically to the </span><a href="IDH_Topic2920.htm" class="hs10">&lt;FIELD_NETNAME&gt;</a><span class="ts2">&nbsp;token.</span></p>
              <p class="ps16"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;field_sqlname&gt; &lt;Field_Sqlname&gt; &lt;Field_sqlname&gt; &lt;FieldSqlName&gt; &lt;fieldSqlName&gt;</span></p>
              <p class="ps16"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpansiontokens.htm#FIELD_ALTNAME" class="hs2">&lt;FIELD_ALTNAME&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_BASENAME" class="hs2">&lt;FIELD_BASENAME&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NAME" class="hs2">&lt;FIELD_NAME&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NETNAME" class="hs2">&lt;FIELD_NETNAME&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NET_ALTNAME" class="hs2">&lt;FIELD_NET_ALTNAME&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ODBCNAME" class="hs2">&lt;FIELD_ODBCNAME&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ORIGINAL_NAME" class="hs2">&lt;FIELD_ORIGINAL_NAME&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQL_ALTNAME" class="hs2">&lt;FIELD_SQL_ALTNAME&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_SQL_ALTNAME"></a><span class="ts3">&lt;FIELD_SQL_ALTNAME&gt;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts a SQL-compatible version of the alternate name for the current field. Array fields are expanded to multiple individual fields, with the name being suffixed with the array element number, for example 'FIELDNAME1', 'FIELDNAME2' etc.</span></p>
              <p class="ps1"><span class="ts2">The token behaves identically to the </span><a href="fieldloopexpansiontokens.htm#FIELD_NET_ALTNAME" class="hs2">&lt;FIELD_NET_ALTNAME&gt;</a><span class="ts2">&nbsp;token.</span></p>
              <p class="ps1"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;field_sql_altname&gt; &lt;Field_Sql_Altname&gt; &lt;Field_sql_altname&gt; &lt;FieldSqlAltname&gt; &lt;fieldSqlAltname&gt;</span></p>
              <p class="ps1"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpansiontokens.htm#FIELD_ALTNAME" class="hs2">&lt;FIELD_ALTNAME&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_BASENAME" class="hs2">&lt;FIELD_BASENAME&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NAME" class="hs2">&lt;FIELD_NAME&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NETNAME" class="hs2">&lt;FIELD_NETNAME&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_NET_ALTNAME" class="hs2">&lt;FIELD_NET_ALTNAME&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ODBCNAME" class="hs2">&lt;FIELD_ODBCNAME&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ORIGINAL_NAME" class="hs2">&lt;FIELD_ORIGINAL_NAME&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQLNAME" class="hs2">&lt;FIELD_SQLNAME&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_SQLTYPE"></a><span class="ts3">&lt;FIELD_SQLTYPE&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts a SQL compatible data definition of the field. By default the data types for Microsoft SQL Server are used but you can select one of the other supported databases either by using the </span><a href="commandlinereference.htm#option_database" class="hs2">-database</a><span class="ts2">&nbsp;command line option, or by setting the </span><a href="installingandconfiguringcodegen.htm#CODEGEN_DATABASE_TYPE" class="hs2">CODEGEN_DATABASE_TYPE</a><span class="ts2">&nbsp;environment variable.</span></p>
              <h2 class="hd1"><a id="SqlDataTypeMappiings"></a><span class="ts1">SQL Data Type Mappings</span></h2>
              <div class="block0">
                <table class="tbl0">
                  <tr class="row0">
                    <td class="cell19">
                      <p class="ps1"><span class="ts5">Synergy Data Type</span></p>
                    </td>
                    <td class="cell20">
                      <p class="ps1"><span class="ts5">SQL Server Type</span></p>
                    </td>
                    <td class="cell21">
                      <p><span class="ts5">MySQL Type</span></p>
                    </td>
                    <td class="cell22">
                      <p><span class="ts5">PostgreSQL Type</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell19">
                      <p class="ps1"><span class="ts2">Alpha</span></p>
                    </td>
                    <td class="cell20">
                      <p class="ps1"><span class="ts2">VARCHAR(n)</span></p>
                    </td>
                    <td class="cell21">
                      <p><span class="ts2">VARCHAR(n)</span></p>
                    </td>
                    <td class="cell22">
                      <p><span class="ts2">VARCHAR(n)</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell19">
                      <p class="ps1"><span class="ts2">Alpha (Binary)</span></p>
                    </td>
                    <td class="cell20">
                      <p class="ps1"><span class="ts2">CHAR(n)</span></p>
                    </td>
                    <td class="cell21">
                      <p><span class="ts2">VARBINARY(n)</span></p>
                    </td>
                    <td class="cell22">
                      <p><span class="ts2">CHAR(n)</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell23">
                      <p><span class="ts2">Auto sequence</span></p>
                      <p><span class="ts2">&nbsp;</span></p>
                    </td>
                    <td class="cell24">
                      <p><span class="ts2">BIGINT</span></p>
                    </td>
                    <td class="cell25">
                      <p><span class="ts2">BIGINT</span></p>
                    </td>
                    <td class="cell26">
                      <p><span class="ts2">BIGINT</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell23">
                      <p><span class="ts2">Auto time</span></p>
                      <p><span class="ts2">&nbsp;</span></p>
                    </td>
                    <td class="cell24">
                      <p><span class="ts2">BIGINT</span></p>
                    </td>
                    <td class="cell25">
                      <p><span class="ts2">BIGINT</span></p>
                    </td>
                    <td class="cell26">
                      <p><span class="ts2">BIGINT</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell23">
                      <p><span class="ts2">Binary</span></p>
                      <p><span class="ts2">&nbsp;</span></p>
                    </td>
                    <td class="cell24">
                      <p><span class="ts2">CHAR(n)</span></p>
                    </td>
                    <td class="cell25">
                      <p><span class="ts2">VARBINARY(n)</span></p>
                    </td>
                    <td class="cell26">
                      <p><span class="ts2">CHAR(n)</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell23">
                      <p><span class="ts2">Boolean</span></p>
                      <p><span class="ts2">&nbsp;</span></p>
                    </td>
                    <td class="cell24">
                      <p><span class="ts2">BIT</span></p>
                    </td>
                    <td class="cell25">
                      <p><span class="ts2">BOOLEAN</span></p>
                    </td>
                    <td class="cell26">
                      <p><span class="ts2">BOOLEAN</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell23">
                      <p><span class="ts2">Date (YYYYMMDD)</span></p>
                      <p><span class="ts2">&nbsp;</span></p>
                    </td>
                    <td class="cell24">
                      <p><span class="ts2">DATE</span></p>
                    </td>
                    <td class="cell25">
                      <p><span class="ts2">DATE</span></p>
                    </td>
                    <td class="cell26">
                      <p><span class="ts2">DATE</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell23">
                      <p><span class="ts2">Date (YYMMDD)</span></p>
                      <p><span class="ts2">&nbsp;</span></p>
                    </td>
                    <td class="cell24">
                      <p><span class="ts2">DATE</span></p>
                    </td>
                    <td class="cell25">
                      <p><span class="ts2">DATE</span></p>
                    </td>
                    <td class="cell26">
                      <p><span class="ts2">DATE</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell23">
                      <p><span class="ts2">Date (YYYYJJJ)</span></p>
                      <p><span class="ts2">&nbsp;</span></p>
                    </td>
                    <td class="cell24">
                      <p><span class="ts2">DECIMAL(7)</span></p>
                    </td>
                    <td class="cell25">
                      <p><span class="ts2">DECIMAL(7)</span></p>
                    </td>
                    <td class="cell26">
                      <p><span class="ts2">NUMERIC(7)</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell23">
                      <p><span class="ts2">Date (YYJJJ)</span></p>
                      <p><span class="ts2">&nbsp;</span></p>
                    </td>
                    <td class="cell24">
                      <p><span class="ts2">DECIMAL(5)</span></p>
                    </td>
                    <td class="cell25">
                      <p><span class="ts2">DECIMAL(5)</span></p>
                    </td>
                    <td class="cell26">
                      <p><span class="ts2">NUMERIC(5)</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell23">
                      <p><span class="ts2">Date (YYYYPP)</span></p>
                      <p><span class="ts2">&nbsp;</span></p>
                    </td>
                    <td class="cell24">
                      <p><span class="ts2">DECIMAL(6)</span></p>
                    </td>
                    <td class="cell25">
                      <p><span class="ts2">DECIMAL(6)</span></p>
                    </td>
                    <td class="cell26">
                      <p><span class="ts2">NUMERIC(6)</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell23">
                      <p><span class="ts2">Date (YYPP)</span></p>
                      <p><span class="ts2">&nbsp;</span></p>
                    </td>
                    <td class="cell24">
                      <p><span class="ts2">DECIMAL(4)</span></p>
                    </td>
                    <td class="cell25">
                      <p><span class="ts2">DECIMAL(4)</span></p>
                    </td>
                    <td class="cell26">
                      <p><span class="ts2">NUMERIC(4)</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell19">
                      <p class="ps1"><span class="ts2">Decimal</span></p>
                    </td>
                    <td class="cell20">
                      <p class="ps1"><span class="ts2">DECIMAL(n)</span></p>
                    </td>
                    <td class="cell21">
                      <p><span class="ts2">DECIMAL(n)</span></p>
                    </td>
                    <td class="cell22">
                      <p><span class="ts2">NUMERIC(n)</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell23">
                      <p><span class="ts2">Enum</span></p>
                      <p><span class="ts2">&nbsp;</span></p>
                    </td>
                    <td class="cell24">
                      <p><span class="ts2">INT</span></p>
                    </td>
                    <td class="cell25">
                      <p><span class="ts2">INT</span></p>
                    </td>
                    <td class="cell26">
                      <p><span class="ts2">INT</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell19">
                      <p class="ps1"><span class="ts2">Implied Decimal</span></p>
                    </td>
                    <td class="cell20">
                      <p class="ps1"><span class="ts2">DECIMAL(n,p)</span></p>
                    </td>
                    <td class="cell21">
                      <p><span class="ts2">DECIMAL(n,p)</span></p>
                    </td>
                    <td class="cell22">
                      <p><span class="ts2">NUMERIC(n,p)</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell23">
                      <p><span class="ts2">Integer (i1)</span></p>
                      <p><span class="ts2">&nbsp;</span></p>
                    </td>
                    <td class="cell24">
                      <p><span class="ts2">SMALLINT</span></p>
                    </td>
                    <td class="cell25">
                      <p><span class="ts2">TINYINT</span></p>
                    </td>
                    <td class="cell26">
                      <p><span class="ts2">SMALLINT</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell19">
                      <p class="ps1"><span class="ts2">Integer (i2)</span></p>
                    </td>
                    <td class="cell20">
                      <p class="ps1"><span class="ts2">SMALLINT</span></p>
                    </td>
                    <td class="cell21">
                      <p><span class="ts2">SMALLINT</span></p>
                    </td>
                    <td class="cell22">
                      <p><span class="ts2">SMALLINT</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell19">
                      <p class="ps1"><span class="ts2">Integer (i4)</span></p>
                    </td>
                    <td class="cell20">
                      <p class="ps1"><span class="ts2">INT</span></p>
                    </td>
                    <td class="cell21">
                      <p><span class="ts2">INT</span></p>
                    </td>
                    <td class="cell22">
                      <p><span class="ts2">INT</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell19">
                      <p class="ps1"><span class="ts2">Integer (i8)</span></p>
                    </td>
                    <td class="cell20">
                      <p class="ps1"><span class="ts2">BIGINT</span></p>
                    </td>
                    <td class="cell21">
                      <p><span class="ts2">BIGINT</span></p>
                    </td>
                    <td class="cell22">
                      <p><span class="ts2">BIGINT</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell23">
                      <p><span class="ts2">Structure field</span></p>
                      <p><span class="ts2">&nbsp;</span></p>
                    </td>
                    <td class="cell24">
                      <p><span class="ts2">VARCHAR(n)</span></p>
                    </td>
                    <td class="cell25">
                      <p><span class="ts2">VARCHAR(n)</span></p>
                    </td>
                    <td class="cell26">
                      <p><span class="ts2">VARCHAR(n)</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell19">
                      <p class="ps1"><span class="ts2">Time (HHMMSS)</span></p>
                    </td>
                    <td class="cell20">
                      <p class="ps1"><span class="ts2">TIME(0)</span></p>
                    </td>
                    <td class="cell21">
                      <p><span class="ts2">TIME(0)</span></p>
                    </td>
                    <td class="cell22">
                      <p><span class="ts2">TIME(0)</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell19">
                      <p class="ps1"><span class="ts2">Time (HHMM)</span></p>
                    </td>
                    <td class="cell20">
                      <p class="ps1"><span class="ts2">TIME(0)</span></p>
                    </td>
                    <td class="cell21">
                      <p><span class="ts2">TIME(0)</span></p>
                    </td>
                    <td class="cell22">
                      <p><span class="ts2">TIME(0)</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell19">
                      <p class="ps1"><span class="ts2">User Defined Alpha</span></p>
                    </td>
                    <td class="cell20">
                      <p class="ps1"><span class="ts2">CHAR(n)</span></p>
                    </td>
                    <td class="cell21">
                      <p><span class="ts2">CHAR(n)</span></p>
                    </td>
                    <td class="cell22">
                      <p><span class="ts2">CHAR(n)</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell19">
                      <p class="ps1"><span class="ts2">User Defined Numeric</span></p>
                    </td>
                    <td class="cell20">
                      <p class="ps1"><span class="ts2">CHAR(n)</span></p>
                    </td>
                    <td class="cell21">
                      <p><span class="ts2">CHAR(n)</span></p>
                    </td>
                    <td class="cell22">
                      <p><span class="ts2">CHAR(n)</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell19">
                      <p class="ps1"><span class="ts2">User Defined Time-stamp (see below)</span></p>
                    </td>
                    <td class="cell20">
                      <p class="ps1"><span class="ts2">DATETIME2</span></p>
                    </td>
                    <td class="cell21">
                      <p><span class="ts2">TIMESTAMP</span></p>
                    </td>
                    <td class="cell22">
                      <p><span class="ts2">TIMESTAMP</span></p>
                    </td>
                  </tr>
                  <tr class="row0">
                    <td class="cell19">
                      <p class="ps1"><span class="ts2">User Defined Date (all others)</span></p>
                    </td>
                    <td class="cell20">
                      <p class="ps1"><span class="ts2">CHAR(n)</span></p>
                    </td>
                    <td class="cell21">
                      <p><span class="ts2">CHAR(n)</span></p>
                    </td>
                    <td class="cell22">
                      <p><span class="ts2">CHAR(n)</span></p>
                    </td>
                  </tr>
                </table>
              </div>
              <h2 class="hd1"><span class="ts1">User-Defined Time-stamp Fields</span></h2>
              <p class="ps1"><span class="ts2">User-defined time-stamp fields can be implemented in the same way as supported by xfODBC:</span></p>
              <p class="ps0"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts2">Define the field as a user-defined date type, length 20</span></p>
              <p class="ps0"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts2">Set the fields &quot;user string&quot; to ^CLASS^=YYYYMMDDHHMISSUUUUUU</span></p>
              <p class="ps0"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts2">Use the &lt;IF USERTIMESTAMP&gt; and &lt;IF NOTUSERTIMESTAMP&gt; expressions to detect the fields in field loops.</span></p>
              <p class="ps0"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts2">Use the SQL CONVERT function to convert a YYYYMMDDHHMISSUUUUUU string into a DATETIME2 value as required by SQL Server. Note that DATETIME2 fields are only supported from SQL Server 2008. An example of using CONVERT is shown below:</span></p>
              <p class="ps1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts3">a20field = %datetime</span></p>
              <p class="ps1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts3">a26field = %string(^d(a20field),&quot;XXXX-XX-XX XX:XX:XX.XXXXXX&quot;)</span></p>
              <p class="ps1"><span class="ts2">Then when building your SQL statement you would do something like this</span></p>
              <p class="ps1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts3">sql = sql + &quot;CONVERT(DATETIME2,&quot; + a26field + &quot;,21)&quot;</span></p>
              <p class="ps1"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpansiontokens.htm#FIELD_CSTYPE" class="hs2">&lt;FIELD_CSTYPE&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SPEC" class="hs2">&lt;FIELD_SPEC&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_TYPE" class="hs9">&lt;FIELD_TYPE&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_TYPE_NAME" class="hs9">&lt;FIELD_TYPE_NAME&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_VBTYPE" class="hs2">&lt;FIELD_VBTYPE&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_TEMPLATE"></a><span class="ts3">&lt;FIELD_TEMPLATE&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the name of the Repository template from which the field inherited its attributes or by a null string if no template is referenced.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_TKSCRIPT"></a><span class="ts3">&lt;FIELD_TKSCRIPT&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts a UI Toolkit .field script file command for the field.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_TSDEFAULT"></a><span class="ts3">&lt;FIELD_TSDEFAULT&gt;</span></p>
              <p><span class="ts2">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts a TypeScript default value based on the fields data type.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">Possible Values:&nbsp; </span><span class="ts3">&quot;&quot;, 0, 0.0, new Date(), false, null</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_TSTYPE"></a><span class="ts3">&lt;FIELD_TSTYPE&gt;</span></p>
              <p>&nbsp;</p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts a string indicating the VB.NET data type of the field.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">Possible Values:</span><span class="ts3">&nbsp;string, number, Date, boolean</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_TYPE"></a><span class="ts3">&lt;FIELD_TYPE&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts a character indicating the synergy data type of field.</span></p>
              <p class="ps1"><span class="ts2">Possible Values:&nbsp; </span><span class="ts3">A, D, I</span></p>
              <p class="ps1"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;field_type&gt; &lt;Field_Type&gt; &lt;Field_type&gt; &lt;FieldType&gt; &lt;fieldType&gt;</span></p>
              <p class="ps1"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpansiontokens.htm#FIELD_CSTYPE" class="hs2">&lt;FIELD_CSTYPE&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_OCTYPE" class="hs2">&lt;FIELD_OCTYPE&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SPEC" class="hs2">&lt;FIELD_SPEC&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQLTYPE" class="hs2">&lt;FIELD_SQLTYPE&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_TYPE_NAME" class="hs2">&lt;FIELD_TYPE_NAME&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_VBTYPE" class="hs2">&lt;FIELD_VBTYPE&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_TYPE_NAME"></a><span class="ts3">&lt;FIELD_TYPE_NAME&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts a string indicating the Synergy data type of field.</span></p>
              <p class="ps1"><span class="ts2">Possible Values:&nbsp; </span><span class="ts3">ALPHA, AUTO SEQUENCE, AUTO TIME, BINARY, DATE, DECIMAL, IMPLIED, INTEGER, JULIAN, TIME, USER ALPHA, USER DATE, USER NUMERIC</span></p>
              <p class="ps1"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpansiontokens.htm#FIELD_CSTYPE" class="hs2">&lt;FIELD_CSTYPE&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SPEC" class="hs2">&lt;FIELD_SPEC&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQLTYPE" class="hs2">&lt;FIELD_SQLTYPE&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_TYPE" class="hs9">&lt;FIELD_TYPE&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_VBTYPE" class="hs2">&lt;FIELD_VBTYPE&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_USER_TYPE"></a><span class="ts3">&lt;FIELD_USER_TYPE&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">For user-defined fields, inserts the fields user defined field type string, if present, otherwise inserts nothing.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_UTEXT"></a><span class="ts3">&lt;FIELD_UTEXT&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the fields&rsquo; user-defined text string.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_VBDEFAULT"></a><span class="ts3">&lt;FIELD_VBDEFAULT&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts a VB.NET default value based on the fields data type.</span></p>
              <p class="ps1"><span class="ts2">Possible Values:&nbsp; </span><span class="ts3">&quot;&quot;, 0, False, New DateTime(), Nothing</span></p>
              <p class="ps1"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpansiontokens.htm#FIELD_CSCONVERT" class="hs2">&lt;FIELD_CSCONVERT&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_VBTYPE" class="hs2">&lt;FIELD_VBTYPE&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="FIELD_VBTYPE"></a><span class="ts3">&lt;FIELD_VBTYPE&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts a string indicating the VB.NET data type of the field.</span></p>
              <p class="ps1"><span class="ts2">Possible Values:&nbsp; </span><span class="ts3">Boolean, Byte, DateTime, Decimal, Integer, Long, Nullable(Of DateTime), Short, String, System.Double, System.SByte, System.Single, System.UInt16, System.UInt32, System.UInt64</span></p>
              <p class="ps1"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpansiontokens.htm#FIELD_CSTYPE" class="hs2">&lt;FIELD_CSTYPE&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_OCTYPE" class="hs2">&lt;FIELD_OCTYPE&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SPEC" class="hs2">&lt;FIELD_SPEC&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQLTYPE" class="hs2">&lt;FIELD_SQLTYPE&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_TYPE" class="hs9">&lt;FIELD_TYPE&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_TYPE_NAME" class="hs2">&lt;FIELD_TYPE_NAME&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="FIELD_VIEW_LENGTH"></a><span class="ts3">&lt;FIELD_VIEW_LENGTH&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">If the current field has a non-zero view length specified then that length is inserted, otherwise nothing is inserted.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpansiontokens.htm#FIELD_DISPLAY_LENGTH" class="hs2">&lt;FIELD_DISPLAY_LENGTH&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_INPUT_LENGTH" class="hs9">&lt;FIELD_INPUT_LENGTH&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SIZE" class="hs2">&lt;FIELD_SIZE&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="MAPPED_FIELD"></a><span class="ts3">&lt;MAPPED_FIELD&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the name of the mapped field in the mapped structure. To use this token you must use @MAP=structure; in the structures user text field or long description and @MAP=field; in each fields user text field or long description.</span></p>
              <p class="ps1"><span class="ts2">Alternates:&nbsp; </span><span class="ts3">&lt;mapped_field&gt; &lt;Mapped_Field&gt; &lt;Mapped_field&gt; &lt;MappedField&gt; &lt;mappedField&gt;</span></p>
              <p class="ps1"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpansiontokens.htm#MAPPED_PATH" class="hs2">&lt;MAPPED_PATH&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#MAPPED_PATH_CONV" class="hs2">&lt;MAPPED_PATH_CONV&gt;</a><span class="ts3">, </span><a href="structuremapping.htm" class="hs2">Structure Mapping</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="MAPPED_PATH"></a><span class="ts3">&lt;MAPPED_PATH&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the name of the mapped path in the mapped structure. To use this token you must use @MAP=structure; in the structures user text field or long description and @MAP=field; in each fields user text field or long description.&nbsp; </span></p>
              <p class="ps1"><span class="ts2">Alternates: </span><span class="ts3">&lt;mapped_path&gt;</span></p>
              <p class="ps1"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpansiontokens.htm#MAPPED_FIELD" class="hs2">&lt;MAPPED_FIELD&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#MAPPED_PATH_CONV" class="hs2">&lt;MAPPED_PATH_CONV&gt;</a><span class="ts3">, </span><a href="structuremapping.htm" class="hs2">Structure Mapping</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="MAPPED_PATH_CONV"></a><span class="ts3">&lt;MAPPED_PATH_CONV&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the name of the mapped path in the mapped structure . To use this token you must use @MAP=structure; in the structures user text field or long description and @MAP=field; in each fields user text field. If there is also an @MAPF=function; in the user text or long description then that conversion function will also be applied.</span></p>
              <p class="ps1"><span class="ts2">Alternates: </span><span class="ts3">&lt;mapped_path_conv&gt;</span></p>
              <p class="ps1"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpansiontokens.htm#MAPPED_FIELD" class="hs2">&lt;MAPPED_FIELD&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#MAPPED_PATH" class="hs2">&lt;MAPPED_PATH&gt;</a><span class="ts3">, </span><a href="structuremapping.htm" class="hs2">Structure Mapping</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="MAPPING_FUNCTION"></a><span class="ts3">&lt;MAPPING_FUNCTION&gt;</span></p>
              <p><span class="ts2">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts the name of the fields </span><a href="structuremapping.htm#MAPF" class="hs0">mapping function</a><span class="ts2">, if defined.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">See also: &lt;IF MAPPING_FUNCTION&gt;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="PROMPT_COL"></a><span class="ts3">&lt;PROMPT_COL&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the screen column for placement of the prompt on the screen in a character based environment. If the prompt has a column position specified in the repository then that value is used, otherwise the default of column 1 is used.</span></p>
              <p class="ps1"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpansiontokens.htm#FIELD_COL" class="hs2">&lt;FIELD_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_DRILL_PIXEL_COL" class="hs2">&lt;FIELD_DRILL_PIXEL_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_COL" class="hs2">&lt;FIELD_PIXEL_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_ROW" class="hs2">&lt;FIELD_PIXEL_ROW&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_WIDTH" class="hs2">&lt;FIELD_PIXEL_WIDTH&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ROW" class="hs2">&lt;FIELD_ROW&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_COL" class="hs2">&lt;PROMPT_PIXEL_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_ROW" class="hs2">&lt;PROMPT_PIXEL_ROW&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_WIDTH" class="hs2">&lt;PROMPT_PIXEL_WIDTH&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_ROW" class="hs2">&lt;PROMPT_ROW&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="PROMPT_PIXEL_COL"></a><span class="ts3">&lt;PROMPT_PIXEL_COL&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the pixel column for placement of the prompt on a windows form. If the prompt has a column position specified then this is used, otherwise the default of column 1 is used.</span></p>
              <p class="ps1"><span class="ts2">A default width of 12 pixels per character is used, and can be overridden using the </span><a href="commandlinereference.htm#option_cw" class="hs2">-cw command line option</a><span class="ts2">.</span></p>
              <p class="ps1"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpansiontokens.htm#FIELD_COL" class="hs2">&lt;FIELD_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_DRILL_PIXEL_COL" class="hs2">&lt;FIELD_DRILL_PIXEL_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_COL" class="hs2">&lt;FIELD_PIXEL_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_ROW" class="hs2">&lt;FIELD_PIXEL_ROW&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_WIDTH" class="hs2">&lt;FIELD_PIXEL_WIDTH&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ROW" class="hs2">&lt;FIELD_ROW&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_COL" class="hs2">&lt;PROMPT_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_ROW" class="hs2">&lt;PROMPT_PIXEL_ROW&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_WIDTH" class="hs2">&lt;PROMPT_PIXEL_WIDTH&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_ROW" class="hs2">&lt;PROMPT_ROW&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="PROMPT_PIXEL_ROW"></a><span class="ts3">&lt;PROMPT_PIXEL_ROW&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the pixel row for placement of the prompt on a windows form. If the prompt has a row position defined then this is used, otherwise the logical field number (which includes array elements) is used to calculate the default row.</span></p>
              <p class="ps1"><span class="ts2">A default height of 25 pixels per row is used, and can be overridden using the </span><a href="commandlinereference.htm#option_ch" class="hs2">-ch command line option</a><span class="ts2">.</span></p>
              <p class="ps1"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpansiontokens.htm#FIELD_COL" class="hs2">&lt;FIELD_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_DRILL_PIXEL_COL" class="hs2">&lt;FIELD_DRILL_PIXEL_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_COL" class="hs2">&lt;FIELD_PIXEL_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_ROW" class="hs2">&lt;FIELD_PIXEL_ROW&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_WIDTH" class="hs2">&lt;FIELD_PIXEL_WIDTH&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ROW" class="hs2">&lt;FIELD_ROW&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_COL" class="hs2">&lt;PROMPT_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_COL" class="hs2">&lt;PROMPT_PIXEL_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_WIDTH" class="hs2">&lt;PROMPT_PIXEL_WIDTH&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_ROW" class="hs2">&lt;PROMPT_ROW&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="PROMPT_PIXEL_WIDTH"></a><span class="ts3">&lt;PROMPT_PIXEL_WIDTH&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the pixel width for default sizing of the prompt when represented as a label.</span></p>
              <p class="ps1"><span class="ts2">Calculated as the size of the prompt in characters multiplied by 12 pixels per character. This default character width can be overridden using the </span><a href="commandlinereference.htm#option_cw" class="hs2">-cw command line option</a><span class="ts2">.</span></p>
              <p class="ps1"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpansiontokens.htm#FIELD_COL" class="hs2">&lt;FIELD_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_DRILL_PIXEL_COL" class="hs2">&lt;FIELD_DRILL_PIXEL_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_COL" class="hs2">&lt;FIELD_PIXEL_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_ROW" class="hs2">&lt;FIELD_PIXEL_ROW&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_WIDTH" class="hs2">&lt;FIELD_PIXEL_WIDTH&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ROW" class="hs2">&lt;FIELD_ROW&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_COL" class="hs2">&lt;PROMPT_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_COL" class="hs2">&lt;PROMPT_PIXEL_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_ROW" class="hs2">&lt;PROMPT_PIXEL_ROW&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_ROW" class="hs2">&lt;PROMPT_ROW&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="PROMPT_POSITION_COL"></a><span class="ts3">&lt;PROMPT_POSITION_COL&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">If the field has a prompt position specified, this token inserts the column position or offset value. Otherwise nothing is inserted.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="PROMPT_POSITION_MODE"></a><span class="ts3">&lt;PROMPT_POSITION_MODE&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts the prompt position mode of the current field.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">Possible Values:&nbsp; </span><span class="ts3">None, Absolute, Relative</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="PROMPT_POSITION_ROW"></a><span class="ts3">&lt;PROMPT_POSITION_ROW&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">If the field has a prompt position specified, this token inserts the row position or offset value. Otherwise nothing is inserted.</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><a id="PROMPT_ROW"></a><span class="ts3">&lt;PROMPT_ROW&gt;</span></p>
            </td>
            <td class="cell34">
              <p class="ps1"><span class="ts2">Inserts the screen row for placement of the prompt on the screen in a character based environment. If the prompt has a row position defined in the repository then that value is used, otherwise the logical field number (which includes array elements) is used to calculate the default row.</span></p>
              <p class="ps1"><span class="ts2">See also:&nbsp; </span><a href="fieldloopexpansiontokens.htm#FIELD_COL" class="hs2">&lt;FIELD_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_DRILL_PIXEL_COL" class="hs2">&lt;FIELD_DRILL_PIXEL_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_COL" class="hs2">&lt;FIELD_PIXEL_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_ROW" class="hs2">&lt;FIELD_PIXEL_ROW&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_PIXEL_WIDTH" class="hs2">&lt;FIELD_PIXEL_WIDTH&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#FIELD_ROW" class="hs2">&lt;FIELD_ROW&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_COL" class="hs2">&lt;PROMPT_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_COL" class="hs2">&lt;PROMPT_PIXEL_COL&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_ROW" class="hs2">&lt;PROMPT_PIXEL_ROW&gt;</a><span class="ts3">, </span><a href="fieldloopexpansiontokens.htm#PROMPT_PIXEL_WIDTH" class="hs2">&lt;PROMPT_PIXEL_WIDTH&gt;</a></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p><a id="UNMAPPING_FUNCTION"></a><span class="ts3">&lt;UNMAPPING_FUNCTION&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell34">
              <p><span class="ts2">Inserts the name of the fields </span><a href="structuremapping.htm#UNMAPF" class="hs0">unmapping function</a><span class="ts2">, if defined.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">See also: &lt;IF UNMAPPING_FUNCTION&gt;</span></p>
            </td>
          </tr>
        </table>
      </div>
      <p><span class="ts2">&nbsp;</span></p>
      <p><span class="ts2">&nbsp;</span></p>
      <div>
        <hr class="hline1" />
      </div>
      <p class="ps8"><span class="ts10">Copyright &copy; 2021&nbsp; Synergex International, Inc.</span></p>
    </div>
  </div>
</div>
</body>
</html>