<!DOCTYPE HTML>
<html id="hs-topic-p">
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>LITERAL_SEGMENT_CSTYPE</title>
<meta charset="windows-1252" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="generator" content="HelpSmith 8.4 (Build 20.825)" />
<style type="text/css" media="screen">
html {
  overflow: hidden;
  margin: 0;
  padding: 0;
  height: 100%;
}
body {
  overflow: hidden;
  margin: 0;
  padding: 0;
  height: 100%;
}
#non-scrolling-area {
  padding: 0 10px 0 10px;
  background-color: #5e5f5f;
}
#container {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}
#content {
  padding: 0 10px 5px 10px;
}
</style>
<link type="text/css" rel="stylesheet" href="../css/topics/style.css" />
<script type="text/javascript" src="../js/jquery-3.5.1.min.js"></script>
<script type="text/javascript" src="../js/nsa.js?e72569b7"></script>
<script type="text/javascript" src="../js/settings.js?4e990f33"></script>
<script type="text/javascript" src="../js/core.min.js?e72569b7"></script>
<script type="text/javascript" src="../js/topic.min.js?e72569b7"></script>
<script type="text/javascript">
	var topicContext = 4450;
</script>
<!-- Web Help Topic -->
  
<!-- HTML Help (CHM) Topic -->
</head>
<body>
<div id="non-scrolling-area">
  <p><span class="ts0">LITERAL_SEGMENT_CSTYPE</span></p>
</div>
<div id="container">
  <div id="content-background">
    <div id="content">
      <p>&nbsp;</p>
      <p><span class="ts2">Inserts a string indicating the C# equivalent data type of a literal key segment of a foreign key that is referenced in the &quot;from key&quot; side of a relationship. Literal key segments defined in repository don't have a data type, only a value, so this token derives the data type by looking at the matching field segment in the relations associated &quot;to key&quot;.</span></p>
      <p><span class="ts2">&nbsp;</span></p>
      <p><span class="ts2">For example, consider a relationship involving the following two structures and keys:</span></p>
      <p><span class="ts2">&nbsp;</span></p>
      <p><span class="ts5">Structure A</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">Structure B</span></p>
      <p><span class="ts2">FROM Foreign key</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts2">TO Access key</span></p>
      <p><span class="ts2">Segment 1, literal 0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts2">Field rectype (D1)</span></p>
      <p><span class="ts2">Segment 2, field customer (D6)</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts2">Field customer (D6)</span><br />&nbsp;</p>
      <p><span class="ts2">In order to determine a data type for the literal segment in structure A, the code looks at the matching field segment in structure B. The field is a D1, so it will be represented as an int.</span></p>
      <p><span class="ts2">&nbsp;</span></p>
      <p><span class="ts1">Usage</span></p>
      <p class="ps0"><br /><span class="ts3">&lt;LITERAL_SEGMENT_CSTYPE&gt;</span></p>
      <p class="ps0"><span class="ts1">IMPORTANT NOTE</span></p>
      <p><span class="ts2">This token can ONLY be used in a </span><a href="relationkeysegmentloops.htm#FROM_KEY_SEGMENT_LOOP" class="hs0">relation FROM&nbsp;key segment loop</a><span class="ts2">, and further </span><span class="ts5">ONLY</span><span class="ts2">&nbsp;when processing a </span><span class="ts5">LITERAL</span><span class="ts2">&nbsp;segment, which can only exist in a </span><span class="ts5">FOREIGN</span><span class="ts2">&nbsp;key. The </span><a href="keysegmentloopexpressiontokens.htm#SEG_TYPE_LITERAL" class="hs0">&lt;IF SEG_TYPE_LITERAL&gt;</a><span class="ts2">&nbsp;expression should be used to ensure this is the case. For example:</span></p>
      <p><span class="ts2">&nbsp;</span></p>
      <p><span class="ts3">&lt;RELATION_LOOP&gt;</span></p>
      <p><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;FROM_KEY_SEGMENT_LOOP&gt;</span></p>
      <p><span class="ts3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;IF SEG_TYPE_LITERAL&gt;</span></p>
      <p><span class="ts3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts4">&lt;LITERAL_SEGMENT_CSTYPE&gt;</span></p>
      <p><span class="ts3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/IF SEG_TYPE_LITERAL&gt;</span></p>
      <p><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;/FROM_KEY_SEGMENT_LOOP&gt;</span></p>
      <p><span class="ts3">&lt;/RELATION_LOOP&gt;</span></p>
      <p><span class="ts2">&nbsp;</span></p>
      <p><span class="ts1">Possible values</span></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">bool</span></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">byte</span></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">double</span></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">float</span></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">int</span></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">long</span></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">decimal</span></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">DateTime</span></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">Nullable&lt;DateTime&gt;</span></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">sbyte</span></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">short</span></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">string</span></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">uint</span></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">ulong</span></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts3">ushort</span></p>
      <p class="ps0"><span class="ts1">Alternate forms</span></p>
      <p class="ps0"><span class="ts2">None</span></p>
      <p class="ps0"><span class="ts1">See also</span></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="idh-topic4460.htm" class="hs5">&lt;LITERAL_SEGMENT_VALUE&gt;</a></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="relationkeysegmentloopexpansiontokens.htm" class="hs0">Other relation key segment loop expansion tokens</a></p>
      <p class="ps0"><span class="ts20">&nbsp;</span></p>
      <p><span class="ts2">&nbsp;</span></p>
      <p><span class="ts2">&nbsp;</span></p>
      <div>
        <hr class="hline1" />
      </div>
      <p class="ps8"><span class="ts10">Copyright &copy; 2021&nbsp; Synergex International, Inc.</span></p>
    </div>
  </div>
</div>
</body>
</html>