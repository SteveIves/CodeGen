<!DOCTYPE HTML>
<html id="hs-topic-p">
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>Button Loops</title>
<meta charset="windows-1252" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="generator" content="HelpSmith 9.8 (Build 23.918)" />
<link type="text/css" rel="stylesheet" href="../css/topics/style.css" />
<script type="text/javascript" src="../js/jquery-3.6.0.min.js"></script>
<style type="text/css" media="screen">
body {
  margin: 0;
}
</style>
<script type="text/javascript" src="../js/settings.js?56cd242c"></script>
<script type="text/javascript" src="../js/core.min.js?2f01eb41"></script>
<script type="text/javascript" src="../js/topic.min.js?2f01eb41"></script>
<script type="text/javascript">
	var topicContext = 200;
</script>
<!-- Web Help Topic -->
  
<!-- HTML Help (CHM) Topic -->
</head>
<body class="nsa-wrapper">
<div id="nsa-box" class="nsa-content0">
  <h1 class="hd0"><span class="ts0">Button Loops</span></h1>
</div>
<div id="sa-box">
  <div id="content-box" class="sa-content0">
    <p>&nbsp;</p>
    <p class="ps1"><span class="ts2">A button loop is a </span><a href="templatefiles.htm" class="hs2">template file</a><span class="ts2">&nbsp;construct which allows you to iterate through the collection of buttons that CodeGen has information about.</span></p>
    <p class="ps1"><span class="ts2">The definition of the buttons processed in a button loop can come from one of two places.&nbsp; If you are processing based on a UI Toolkit input window definition then by default the collection of buttons is determined by the buttons found in that input window definition.&nbsp; Otherwise the button collection is defined by a configuration file called </span><span class="ts3">DefaultButtons.xml</span><span class="ts2">, which you will find in the folder that you installed CodeGen into.</span></p>
    <p class="ps1"><span class="ts2">Note: Even if you are processing based on a UI Toolkit input window definition, you can chose to ignore the definition of buttons found in the window and use the definitions from </span><span class="ts3">DefaultButtons.xml</span><span class="ts2">&nbsp;via the </span><a href="commandlinereference.htm#option_b" class="hs0">&ndash;b command line option</a><span class="ts2">.</span></p>
    <p class="ps1"><span class="ts2">Button loops are delimited by a matching pair of </span><span class="ts4">&lt;BUTTON_LOOP&gt;</span><span class="ts2">&nbsp;and </span><span class="ts4">&lt;/BUTTON_LOOP&gt;</span><span class="ts2">&nbsp;tags that surround the template code to be inserted for each button.&nbsp; The code between the opening and closing tags of a button loop is repeated for each button in the button collection.</span></p>
    <p class="ps1"><span class="ts2">Button loop tokens are tokens that can only be used within a button loop:</span></p>
    <p class="ps0"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="buttonloopexpansiontokens.htm" class="hs2">Button Loop Expansion Tokens</a></p>
    <p class="ps0"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="buttonloopexpressiontokens.htm" class="hs2">Button Loop Expression Tokens</a></p>
    <p class="ps1"><span class="ts2">There are two types of button loop, multi-line button loops and in-line button loops.</span></p>
    <h2 class="hd1"><span class="ts1">Multi-Line Button Loops</span></h2>
    <p class="ps1"><span class="ts2">Multi-line button loops occur when the opening and closing button loop tags appear on separate lines in a template file, and delimit one or more entire lines of template code, like this:</span></p>
    <p class="ps9"><span class="ts3">[code]</span><br /><span class="ts4">&lt;BUTTON_LOOP&gt;</span><br /><span class="ts4">code</span><br /><span class="ts4">&lt;/BUTTON_LOOP&gt;</span><br /><span class="ts3">[code]</span></p>
    <p class="ps1"><span class="ts2">Multi-line button loops generate one or more lines of output code for each button that is processed.</span></p>
    <h2 class="hd1"><span class="ts1">In-Line Button Loops</span></h2>
    <p class="ps1"><span class="ts2">In-line button loops exist when the opening and closing button loop tags appear on the same line in a template file, and delimit part of a line of template code, like this:</span></p>
    <p class="ps9"><span class="ts3">[code] </span><span class="ts4">&lt;BUTTON_LOOP&gt; code &lt;/BUTTON_LOOP&gt;</span><span class="ts3">&nbsp;[code]</span></p>
    <p class="ps1"><span class="ts2">In-line button loops generate code into the current output line only.</span></p>
    <h2 class="hd1"><span class="ts1">Default Buttons</span></h2>
    <p class="ps1"><span class="ts2">The default buttons are defined in </span><span class="ts3">DefaultButtons.xml</span><span class="ts2">, as follows:</span></p>
    <p class="ps9"><span class="ts3">&lt;?xml version='1.0'?&gt;</span><br /><span class="ts3">&lt;CodeGenDefaultButtons&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts3">&lt;Button name=&quot;Ok&quot; caption=&quot;OK&quot; image=&quot;&quot; method=&quot;&quot; elb=&quot;&quot; quickselect=&quot;O&quot; /&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts3">&lt;Button name=&quot;Cancel&quot; caption=&quot;Cancel&quot; image=&quot;&quot; method=&quot;&quot; elb=&quot;&quot; quickselect=&quot;C&quot; /&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts3">&lt;Button name=&quot;Help&quot; caption=&quot;Help&quot; image=&quot;&quot; method=&quot;&quot; elb=&quot;&quot;quickselect=&quot;H&quot; /&gt;</span><br /><span class="ts3">&lt;/CodeGenDefaultButtons&gt;</span></p>
    <h2 class="hd1"><span class="ts1">Special Button Processing</span></h2>
    <p class="ps1"><span class="ts2">When generating application source code, and in particular forms, it is often useful to be able to identify a button as either an &quot;OK&quot; button (which generally saves the data and closes the form) or a &quot;Cancel&quot; button (which closes the form without saving the data). Unfortunately there is no way to easily identify this from information in a UI Toolkit input window script.</span></p>
    <p class="ps1"><span class="ts2">CodeGen considers a button to be an &quot;OK&quot; button if the term &quot;OK&quot; appears in either the name or caption of the button.</span></p>
    <p class="ps1"><span class="ts2">CodeGen considers a button to be a &quot;Cancel&quot; button if the word &quot;Cancel&quot; appears in the buttons name or caption, or if the word &quot;abandon&quot; appears in the buttons name (UI Toolkit programmers often name the cancel button O_ABANDON).</span></p>
    <p class="ps1"><span class="ts2">The status a button as either an OK or Cancel button can be tested with the button loop expressions </span><span class="ts3">&lt;IF OKBUTTON&gt;</span><span class="ts2">&nbsp;and </span><span class="ts3">&lt;IF CANCELBUTTON&gt;</span><span class="ts2">.</span></p>
    <p class="ps1"><span class="ts2">&nbsp;</span></p>
    <p><span class="ts2">&nbsp;</span></p>
    <p><span class="ts2">&nbsp;</span></p>
    <div class="hr-wrapper">
      <hr class="hline1" />
    </div>
    <p class="ps8"><span class="ts10">Copyright &copy; 2021&nbsp; Synergex International, Inc.</span></p>
  </div>
</div>
</body>
</html>