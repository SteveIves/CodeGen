<!DOCTYPE html>
<html>
<head lang="en">
<title>User-Defined Expansion Tokens</title>
<meta charset="windows-1252" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1" />
<meta name="generator" content="HelpSmith 10.0 (Build 24.711)" />
<link type="text/css" rel="stylesheet" href="../css/tree.css?4fbec9eb" />
<link type="text/css" rel="stylesheet" href="../css/topics.css?86bc1f4c" />
<link type="text/css" rel="stylesheet" href="../css/apr.css?86bc1f4c" />
<link type="text/css" rel="stylesheet" href="../css/app.css?86bc1f4c" />
<script src="../js/jquery-3.7.1.min.js"></script>
<script src="../js/tree.min.js?4fbec9eb"></script>
<script src="../js/tabs.min.js?4fbec9eb"></script>
<script src="../js/jquery.cookie.js?4fbec9eb"></script>
<script src="../js/headroom.min.js?4fbec9eb"></script>
<script src="../js/app.min.js?4fbec9eb"></script>
<script src="../js/search.min.js?4fbec9eb"></script>
<!-- Web Help Topic -->
  
<!-- HTML Help (CHM) Topic -->
<script>
doAppStart();
</script>
</head>
<body>
	<header>
		<div id="hs-header-d">
			<div id="hs-content-h">
  <div id="hs-wrapper-h">
    <span id="hs-title-h">CodeGen Documentation</span>
  </div>
</div>
		</div>
		<div id="hs-header-m">
			<div id="hs-content-m">
  <div id="hs-area-left">
    <div id="hs-menu" class="hs-menu-toggle">
      <span class="line1"></span>
      <span class="line2"></span>
      <span class="line3"></span>
    </div>
  </div>
  <div id="hs-area-center">
    <span id="hs-title-m">CodeGen Documentation</span>
  </div>
  <div id="hs-area-right"></div>
</div>
		</div>
	</header>
	<nav id="hs-nav">
		<div id="hs-nav-content">
			<ul id="nav-tabs" role="tablist">
				<li class="hs-toc-tab" role="tab">
					<a href="#hs-toc-panel">Contents</a>
				</li>
				<li class="hs-index-tab" role="tab">
					<a href="#hs-index-panel">Index</a>
				</li>
				<li class="hs-search-tab" role="tab">
					<a href="#hs-search-panel">Search</a>
				</li>
			</ul>
			<div id="tabs-panels">
				<div class="hstabs-panel" id="hs-toc-panel" role="tabpanel">
					<div id="toc-tree" class="hs-tree"></div>
				</div>
				<div class="hstabs-panel" id="hs-index-panel" role="tabpanel">
					<div class="hs-index-content">
						<div id="kwd-search-box">
							<label for="kwd-search" class="sfield-title text-label">Type in the keyword(s) to find:</label>
							<input type="text" id="kwd-search" autocomplete="off" />
						</div>
						<div id ="index-tree" class="hs-tree"></div>
					</div>
				</div>
				<div class="hstabs-panel" id="hs-search-panel" role="tabpanel">
					<div id="hs-search-content">
						<div id="search-form">
							<label for="squery" class="sfield-title text-label">Type in the keyword(s) to find:</label>
							<div id="search-box">
								<div class="search-container">
									<input type="text" id="squery" autocomplete="off">
								</div>
								<div class="search-btn" title="Search"></div>
							</div>
							<div id="options-box">
								<span class="text-label">Match:</span>
								<input type="radio" id="anywords" name="match" value="anywords" checked="checked"><label for="anywords" class="text-label">Any words</label>
								<input type="radio" id="phrase" name="match" value="phrase"><label for="phrase" class="text-label">Phrase</label>
							</div>
						</div>
						<div id="search-result"></div>
					</div>
				</div>
			</div>
		</div>
		</nav>
		<div id="hs-content">
			<main>
				<article>
					<div id="topic-content">
  <div id="nsa-box" class="nsa-content0">
    <h1 class="hd0"><span class="ts0">User-Defined Expansion Tokens</span></h1>
  </div>
  <div id="sa-box">
    <div id="content-box" class="sa-content0">
      <p>&nbsp;</p>
      <p class="ps1"><span class="ts2">User-defined </span><a href="expansiontokens.htm" class="hs4">expansion tokens</a><span class="ts2">&nbsp;are special tokens where a developer can determine both the name of the token as well as the value to be inserted when the token is encountered during code generation.</span></p>
      <p class="ps1"><span class="ts2">CodeGen supports several mechanisms to allow you to implement user-defined tokens, via:</span></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="userdefinedexpansiontokens.htm#env" class="hs6">Environment variables</a><span class="ts3">.</span></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="userdefinedexpansiontokens.htm#inc" class="hs6">Include files</a><span class="ts3">.</span></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="userdefinedexpansiontokens.htm#cl" class="hs6">Command line tokens</a><span class="ts3">.</span></p>
      <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><a href="userdefinedexpansiontokens.htm#utfile" class="hs6">Under defined token files</a><span class="ts3">.</span></p>
      <p class="ps1"><span class="ts2">If your template file depends on the developer providing a value for a particular user-defined token, you can tell CodeGen about that dependency. For more information refer to </span><a href="userdefinedexpansiontokens.htm#dependency" class="hs6">declaring user-defined token dependencies</a><span class="ts2">.</span></p>
      <h2 class="hd1"><a id="env"></a><span class="ts1">Environment Variables</span></h2>
      <p class="ps1"><span class="ts2">As documented in </span><a href="genericexpansiontokens.htm" class="hs6">generic tokens</a><span class="ts2">&nbsp;you can use the </span><a href="genericexpansiontokens.htm#%3CENV:variable%3E" class="hs0">&lt;ENV:variable&gt;</a><span class="ts2">&nbsp;token in a template file and CodeGen will insert the value obtained from the environment variable into the output stream.</span></p>
      <h2 class="hd1"><a id="inc"></a><span class="ts1">Include Files</span></h2>
      <p class="ps1"><span class="ts2">Also documented in </span><a href="genericexpansiontokens.htm" class="hs6">generic tokens</a><span class="ts2">&nbsp;you can use the </span><a href="genericexpansiontokens.htm#%3CFILE:name.ext%3E" class="hs0">&lt;FILE:name.ext&gt;</a><span class="ts2">&nbsp;token in a template file and CodeGen will read data from an external file and insert that data into the output stream.</span></p>
      <h2 class="hd1"><a id="cl"></a><span class="ts1">Command Line Tokens</span></h2>
      <p class="ps1"><span class="ts2">A quick way to declare used-defined tokens is to specify both a name and value on the command line using the </span><a href="commandlinereference.htm#option_ut" class="hs6">-ut command line option</a><span class="ts2">, for example:</span></p>
      <p class="ps12"><span class="ts3">codegen &ndash;s &lt;structure&gt; -t &lt;template&gt; -ut MODEL_NS=MyApp.Model</span><br />&nbsp;</p>
      <p class="ps1"><span class="ts2">You can specify multiple user-defined tokens on the command line, space separated after the </span>-ut<span class="ts2">&nbsp;option, for example:</span></p>
      <p class="ps12"><span class="ts3">codegen &ndash;s &lt;structure&gt; -t &lt;template&gt; -ut MODEL_NS=MyApp.Model VIEW_NS=MyApp.View</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <p><span class="ts2">If your user-defined token value (the part after the equal character) contains double quotes then Windows will strip the quotes before the value is passed to CodeGen. In that case you must escape the double quote characters with a back-slash character, like this:</span></p>
      <p><span class="ts2">&nbsp;</span></p>
      <p class="ps12"><span class="ts3">-ut MYMESSAGE=\&quot;Hello World\&quot;</span></p>
      <p><span class="ts2">&nbsp;</span></p>
      <p><span class="ts2">By default, the replacement value user-defined tokens that are defined on the command line may not contain other tokens. If you wish to enable that functionality then you must tell CodeGen to treat user-defined tokens as preprocessor tokens via the </span><a href="commandlinereference.htm#option_utpp" class="hs4">-utpp command line option</a><span class="ts2">.</span><br />&nbsp;</p>
      <h2 class="hd1"><a id="utfile"></a><span class="ts1">User-Defined Token Files</span></h2>
      <p class="ps1"><span class="ts2">If you need to define several user-defined tokens then it is sometimes convenient to define them in a user-defined token file and name the user-defined token file via the </span><a href="commandlinereference.htm#option_u" class="hs6">-u command line option</a><span class="ts2">.</span></p>
      <p class="ps1"><span class="ts2">An example of a user-defined token file is:</span></p>
      <p class="ps12"><span class="ts3">;</span><br /><span class="ts3">; User defined tokens for Synergex Inc.</span><br /><span class="ts3">;</span><br /><span class="ts3">&lt;SUPPORT_PHONE&gt;(800) 366-3472&lt;/SUPPORT_PHONE&gt;</span><br /><span class="ts3">&lt;SUPPORT_EMAIL&gt;support@synergex.com&lt;/SUPPORT_EMAIL&gt;</span><br /><span class="ts3">&lt;WEBSITE&gt;http://www.synergex.com&lt;/WEBSITE&gt;</span><br />&nbsp;</p>
      <p class="ps1"><span class="ts2">To tell CodeGen to read user-defined tokens from a file you would use the </span><a href="commandlinereference.htm#option_u" class="hs6">-u command line option</a><span class="ts2">. For example:</span></p>
      <p class="ps12"><span class="ts3">codegen &ndash;s &lt;structure&gt; -t &lt;template&gt; </span><span class="ts4">-u MYTOKENS:&lt;usertokenfile&gt;</span><br />&nbsp;</p>
      <p class="ps1"><span class="ts2">You could then refer to your user defined tokens in your template files. For example:</span></p>
      <p class="ps12"><span class="ts3">display(tt,&rdquo;Please call support at &lt;SUPPORT_PHONE&gt;&rdquo;)</span><br /><span class="ts3">display(tt,&rdquo; or send an email to &lt;SUPPORT_EMAIL&gt;.&rdquo;)</span></p>
      <p><span class="ts3">&nbsp;</span></p>
      <h2 class="hd1"><a id="dependency"></a><span class="ts1">Declaring User-Defined Token Dependencies</span></h2>
      <p class="ps1"><span class="ts2">If CodeGen encounters something in a template file which is formatted like a token (i.e. delimited by &lt; and &gt; characters) but is not recognized as a token, then CodeGen will ignore it, and that text will remain in the output file that is created. This is necessary in order for CodeGen to be able to generate code for languages or dialects such as HTML, XML and XAML.</span></p>
      <p class="ps1"><span class="ts2">However, when it comes to user-defined tokens this can be a problem, because if a template contains something that the template developer intended to be a user-defined token which gets replaced, but someone who is subsequently generating code from the template neglects to specify the source of the user-defined tokens, the tokens will remain in the generated file and no error will be reported.</span></p>
      <p class="ps1"><span class="ts2">To address this situation template developers can use the </span><a href="fileheadertokens.htm#%3CREQUIRES_USERTOKEN%3E" class="hs0">&lt;REQUIRES_USERTOKEN&gt;</a><span class="ts2">&nbsp;token to declare that their template requires a particular user-defined token to be declared, either in a token file (-u) or on the command line (-ut).</span></p>
      <p class="ps1"><span class="ts2">If a templates declares that a user-defined token is required, but that user-defined token has not been declared when generating code, CodeGen will display an error and will stop processing the template.</span></p>
      <p class="ps1"><span class="ts2">&nbsp;</span></p>
      <p><span class="ts2">&nbsp;</span></p>
      <p><span class="ts2">&nbsp;</span></p>
      <div class="hr-wrapper">
        <hr class="hline1" />
      </div>
      <p class="ps8"><span class="ts10">Copyright &copy; 2021&nbsp; Synergex International, Inc.</span></p>
    </div>
  </div>
</div>
				</article>
			</main>
		</div>
		<footer>
			<div id="hs-footer"><div id="hs-content-f">
  <div id="hs-wrapper-f">
    <span id="hs-title-f">Copyright &copy; 2021  Synergex International, Inc.</span>
  </div>
</div></div>
		</footer>
</body>
</html>