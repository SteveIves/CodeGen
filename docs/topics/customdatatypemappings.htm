<!DOCTYPE HTML>
<html id="hs-topic-p">
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>Custom Data Type Mappings</title>
<meta charset="windows-1252" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="generator" content="HelpSmith 9.3 (Build 22.118)" />
<style type="text/css" media="screen">
html {
  overflow: hidden;
  margin: 0;
  padding: 0;
  height: 100%;
}
body {
  overflow: hidden;
  margin: 0;
  padding: 0;
  height: 100%;
}
#non-scrolling-area {
  padding: 0 10px 0 10px;
  background-color: #5e5f5f;
}
#container {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}
#content {
  padding: 0 10px 5px 10px;
}
</style>
<link type="text/css" rel="stylesheet" href="../css/topics/style.css" />
<script type="text/javascript" src="../js/jquery-3.6.0.min.js"></script>
<script type="text/javascript" src="../js/nsa.js?4d4a8070"></script>
<script type="text/javascript" src="../js/settings.js?ff441c91"></script>
<script type="text/javascript" src="../js/core.min.js?4d4a8070"></script>
<script type="text/javascript" src="../js/topic.min.js?4d4a8070"></script>
<script type="text/javascript">
	var topicContext = 2220;
</script>
<!-- Web Help Topic -->
  
<!-- HTML Help (CHM) Topic -->
</head>
<body>
<div id="non-scrolling-area">
  <h1 class="hd0"><span class="ts0">Custom Data Type Mappings</span></h1>
</div>
<div id="container">
  <div id="content-background">
    <div id="content">
      <p>&nbsp;</p>
      <p class="ps1"><span class="ts2">CodeGen includes several field loop tokens that emit, based on the Synergy data type of a field, an appropriate data type for use in various other languages. These tokens are&nbsp; </span><a href="fieldloopexpansiontokens.htm#FIELD_CSTYPE" class="hs0">&lt;FIELD_CSTYPE&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_OCTYPE" class="hs0">&lt;FIELD_OCTYPE&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SNTYPE" class="hs0">&lt;FIELD_SNTYPE&gt;</a><span class="ts2">, </span><a href="fieldloopexpansiontokens.htm#FIELD_SQLTYPE" class="hs0">&lt;FIELD_SQLTYPE&gt;</a><span class="ts2">&nbsp;and </span><a href="fieldloopexpansiontokens.htm#FIELD_VBTYPE" class="hs0">&lt;FIELD_VBTYPE&gt;</a><span class="ts2">.</span></p>
      <p class="ps1"><span class="ts2">The data type mappings used by these tokens are hard coded to suitable default values within CodeGen. These default values generally follow the same rules that xfNetLink has always used when converting traditional Synergy types into .NET and Java types, and should work well in most scenarios. However if the defaults don't work in a particular scenario then it is possible to customize the values by specifying the data type mappings that you wish to use in an XML file.</span></p>
      <p class="ps1"><span class="ts2">The XML file must be defined in a specific way, and an example file called DataMappingsExample.xml is provided when you install or build CodeGen.</span></p>
      <p class="ps1"><span class="ts2">Within the XML file there are several main sections that correspond to the various languages that CodeGen supports:</span></p>
      <div class="block0">
        <table class="tbl0">
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><span class="ts5">Language</span></p>
            </td>
            <td class="cell39">
              <p class="ps1"><span class="ts5">Field Loop Token</span></p>
            </td>
            <td class="cell40">
              <p class="ps1"><span class="ts5">XML File Section</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><span class="ts2">C#</span></p>
            </td>
            <td class="cell39">
              <p class="ps1"><a href="fieldloopexpansiontokens.htm#FIELD_CSTYPE" class="hs1">&lt;FIELD_CSTYPE&gt;</a></p>
            </td>
            <td class="cell40">
              <p class="ps1"><span class="ts3">&lt;CSharp&gt;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><span class="ts2">Objective C</span></p>
            </td>
            <td class="cell39">
              <p class="ps1"><a href="fieldloopexpansiontokens.htm#FIELD_OCTYPE" class="hs0">&lt;FIELD_OCTYPE&gt;</a></p>
            </td>
            <td class="cell40">
              <p class="ps1"><span class="ts3">&lt;ObjectiveC&gt;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><span class="ts2">Synergy .NET</span></p>
            </td>
            <td class="cell39">
              <p class="ps1"><a href="fieldloopexpansiontokens.htm#FIELD_SNTYPE" class="hs0">&lt;FIELD_SNTYPE&gt;</a></p>
            </td>
            <td class="cell40">
              <p class="ps1"><span class="ts3">&lt;SynergyDotNet&gt;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><span class="ts2">SQL</span></p>
            </td>
            <td class="cell39">
              <p class="ps1"><a href="fieldloopexpansiontokens.htm#FIELD_SQLTYPE" class="hs0">&lt;FIELD_SQLTYPE&gt;</a></p>
            </td>
            <td class="cell40">
              <p class="ps1"><span class="ts3">&lt;SQL&gt;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell41">
              <p><span class="ts2">TypeScript</span></p>
              <p><span class="ts2">&nbsp;</span></p>
            </td>
            <td class="cell42">
              <p><a href="fieldloopexpansiontokens.htm#FIELD_SQLTYPE" class="hs0">&lt;FIELD_TSLTYPE&gt;</a></p>
            </td>
            <td class="cell43">
              <p><span class="ts2">&lt;TypeScript&gt;</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell38">
              <p class="ps1"><span class="ts2">Visual Basic</span></p>
            </td>
            <td class="cell39">
              <p class="ps1"><a href="fieldloopexpansiontokens.htm#FIELD_VBTYPE" class="hs0">&lt;FIELD_VBTYPE&gt;</a></p>
            </td>
            <td class="cell40">
              <p class="ps1"><span class="ts3">&lt;VisualBasic&gt;</span></p>
            </td>
          </tr>
        </table>
      </div>
      <p class="ps1"><span class="ts2">Within each of these main sections there are data type mappings for each of the field types that CodeGen supports. For example, the default mappings for C# look like this:</span></p>
      <p class="ps1"><span class="ts3">&lt;?xml version='1.0'?&gt;</span><br /><span class="ts3">&lt;DataMappings&gt;</span><br /><span class="ts3">&nbsp; &lt;CSharp&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;Alpha&gt;string&lt;/Alpha&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;AlphaBinary&gt;string&lt;/AlphaBinary&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;UserAlpha&gt;string&lt;/UserAlpha&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;UserNumeric&gt;string&lt;/UserNumeric&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;UserDate&gt;string&lt;/UserDate&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;UserTimeStamp&gt;string&lt;/UserTimeStamp&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;DateYYYYMMDD&gt;DateTime&lt;/DateYYYYMMDD&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;DateYYMMDD&gt;DateTime&lt;/DateYYMMDD&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;DateYYYYJJJ&gt;DateTime&lt;/DateYYYYJJJ&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;DateYYJJJ&gt;DateTime&lt;/DateYYJJJ&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;DateYYYYPP&gt;string&lt;/DateYYYYPP&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;DateYYPP&gt;string&lt;/DateYYPP&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;NullableDateYYYYMMDD&gt;DateTime?&lt;/NullableDateYYYYMMDD&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;NullableDateYYMMDD&gt;DateTime?&lt;/NullableDateYYMMDD&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;NullableDateYYYYJJJ&gt;DateTime?&lt;/NullableDateYYYYJJJ&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;NullableDateYYJJJ&gt;DateTime?&lt;/NullableDateYYJJJ&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;TimeHHMMSS&gt;DateTime&lt;/TimeHHMMSS&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;TimeHHMM&gt;DateTime&lt;/TimeHHMM&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;NullableTimeHHMMSS&gt;DateTime?&lt;/NullableTimeHHMMSS&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;NullableTimeHHMM&gt;DateTime?&lt;/NullableTimeHHMM&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;ImpliedDecimal&gt;decimal&lt;/ImpliedDecimal&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;SmallDecimal&gt;int&lt;/SmallDecimal&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;LargeDecimal&gt;long&lt;/LargeDecimal&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;VeryLargeDecimal&gt;decimal&lt;/VeryLargeDecimal&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;Integer1&gt;int&lt;/Integer1&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;Integer2&gt;int&lt;/Integer2&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;Integer4&gt;int&lt;/Integer4&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;Integer8&gt;long&lt;/Integer8&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;Boolean&gt;bool&lt;/Boolean&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;Enum&gt;int&lt;/Enum&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;Binary&gt;char(l)&lt;/Binary&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;StructField&gt;String&lt;/StructField&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;AutoSequence&gt;long&lt;/AutoSequence&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;AutoTime&gt;long&lt;/AutoTime&gt;</span><br /><span class="ts3">&nbsp; &lt;/CSharp&gt;</span><br /><span class="ts3">&lt;/DataMappings&gt;</span></p>
      <p class="ps1"><span class="ts2">Note that </span><span class="ts3">&lt;SmallDecimal&gt;</span><span class="ts2">&nbsp;is used for D1-8 fields, </span><span class="ts3">&lt;LargeDecimal&gt;</span><span class="ts2">&nbsp;is used for D9-18, and </span><span class="ts3">&lt;VeryLargeDecimal&gt;</span><span class="ts2">&nbsp;is used for D19-28.</span></p>
      <p class="ps1"><span class="ts2">In some data mappings you may need to specify the length of a variable (e.g. the Alpha data type for SQL), or length and precision (e.g. the ImpliedDecimal data type for SQL). To support this requirement CodeGen will search for and replace the following specific patterns of characters within data mapping values defined in your XML file:</span></p>
      <div class="block0">
        <table class="tbl0">
          <tr class="row0">
            <td class="cell5">
              <p class="ps1"><span class="ts5">Pattern of Characters</span></p>
            </td>
            <td class="cell44">
              <p class="ps1"><span class="ts5">Replaced With</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell5">
              <p class="ps1"><span class="ts2">(l)</span></p>
            </td>
            <td class="cell45">
              <p class="ps1"><span class="ts2">The length if the field in parentheses. E.g. (10)</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell5">
              <p class="ps1"><span class="ts2">(l.p)</span></p>
            </td>
            <td class="cell45">
              <p class="ps1"><span class="ts2">The length and precision of the field, separated by a period, in parentheses. E.g. (10.2)</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell5">
              <p class="ps1"><span class="ts2">(l,p)</span></p>
            </td>
            <td class="cell45">
              <p class="ps1"><span class="ts2">The length and precision of the field, separated by a comma, in parentheses. E.g. (10,2)</span></p>
            </td>
          </tr>
        </table>
      </div>
      <p class="ps1"><span class="ts2">You only need to specify the parts of the XML file that correspond to the specific data mappings that you wish to change. For example, if all you want to do is make the &lt;FIELD_CSTYPE&gt; token insert the TimeSpan data type for D8 and D6 date fields (YYYYMMDD and YYMMDD) then you would configure your data mappings file like this:</span></p>
      <p class="ps1"><span class="ts3">&lt;?xml version='1.0'?&gt;</span><br /><span class="ts3">&lt;DataMappings&gt;</span><br /><span class="ts3">&nbsp; &lt;CSharp&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;TimeHHMMSS&gt;TimeSpan&lt;/TimeHHMMSS&gt;</span><br /><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;TimeHHMM&gt;TimeSpan&lt;/TimeHHMM&gt;</span><br /><span class="ts3">&nbsp; &lt;/CSharp&gt;</span><br /><span class="ts3">&lt;/DataMappings&gt;</span></p>
      <p class="ps1"><span class="ts2">Once you have configured your custom data mappings file you tell CodeGen to use it by using the -</span><span class="ts5">cdm</span><span class="ts2">&nbsp;command line option, or if you are using the CodeGenerator API via the </span><span class="ts5">CodeGenTaskSet.DataMappingsFile</span><span class="ts2">&nbsp;property.</span></p>
      <p class="ps1"><span class="ts2">&nbsp;</span></p>
      <p><span class="ts2">&nbsp;</span></p>
      <p><span class="ts2">&nbsp;</span></p>
      <div>
        <hr class="hline1" />
      </div>
      <p class="ps8"><span class="ts10">Copyright &copy; 2021&nbsp; Synergex International, Inc.</span></p>
    </div>
  </div>
</div>
</body>
</html>