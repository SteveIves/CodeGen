<!DOCTYPE html>
<html>
<head lang="en">
<title>Relation Key Segment Loop Expansion Tokens</title>
<meta charset="windows-1252" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1" />
<meta name="generator" content="HelpSmith 10.0 (Build 24.711)" />
<link type="text/css" rel="stylesheet" href="../css/tree.css?4fbec9eb" />
<link type="text/css" rel="stylesheet" href="../css/topics.css?cc0e9ac5" />
<link type="text/css" rel="stylesheet" href="../css/apr.css?cc0e9ac5" />
<link type="text/css" rel="stylesheet" href="../css/app.css?cc0e9ac5" />
<script src="../js/jquery-3.7.1.min.js"></script>
<script src="../js/tree.min.js?4fbec9eb"></script>
<script src="../js/tabs.min.js?4fbec9eb"></script>
<script src="../js/jquery.cookie.js?4fbec9eb"></script>
<script src="../js/headroom.min.js?4fbec9eb"></script>
<script src="../js/app.min.js?4fbec9eb"></script>
<script src="../js/search.min.js?4fbec9eb"></script>
<!-- Web Help Topic -->
  
<!-- HTML Help (CHM) Topic -->
<script>
doAppStart();
</script>
</head>
<body>
	<header>
		<div id="hs-header-d">
			<div id="hs-content-h">
  <div id="hs-wrapper-h">
    <span id="hs-title-h">CodeGen Documentation</span>
  </div>
</div>
		</div>
		<div id="hs-header-m">
			<div id="hs-content-m">
  <div id="hs-area-left">
    <div id="hs-menu" class="hs-menu-toggle">
      <span class="line1"></span>
      <span class="line2"></span>
      <span class="line3"></span>
    </div>
  </div>
  <div id="hs-area-center">
    <span id="hs-title-m">CodeGen Documentation</span>
  </div>
  <div id="hs-area-right"></div>
</div>
		</div>
	</header>
	<nav id="hs-nav">
		<div id="hs-nav-content">
			<ul id="nav-tabs" role="tablist">
				<li class="hs-toc-tab" role="tab">
					<a href="#hs-toc-panel">Contents</a>
				</li>
				<li class="hs-index-tab" role="tab">
					<a href="#hs-index-panel">Index</a>
				</li>
				<li class="hs-search-tab" role="tab">
					<a href="#hs-search-panel">Search</a>
				</li>
			</ul>
			<div id="tabs-panels">
				<div class="hstabs-panel" id="hs-toc-panel" role="tabpanel">
					<div id="toc-tree" class="hs-tree"></div>
				</div>
				<div class="hstabs-panel" id="hs-index-panel" role="tabpanel">
					<div class="hs-index-content">
						<div id="kwd-search-box">
							<label for="kwd-search" class="sfield-title text-label">Type in the keyword(s) to find:</label>
							<input type="text" id="kwd-search" autocomplete="off" />
						</div>
						<div id ="index-tree" class="hs-tree"></div>
					</div>
				</div>
				<div class="hstabs-panel" id="hs-search-panel" role="tabpanel">
					<div id="hs-search-content">
						<div id="search-form">
							<label for="squery" class="sfield-title text-label">Type in the keyword(s) to find:</label>
							<div id="search-box">
								<div class="search-container">
									<input type="text" id="squery" autocomplete="off">
								</div>
								<div class="search-btn" title="Search"></div>
							</div>
							<div id="options-box">
								<span class="text-label">Match:</span>
								<input type="radio" id="anywords" name="match" value="anywords" checked="checked"><label for="anywords" class="text-label">Any words</label>
								<input type="radio" id="phrase" name="match" value="phrase"><label for="phrase" class="text-label">Phrase</label>
							</div>
						</div>
						<div id="search-result"></div>
					</div>
				</div>
			</div>
		</div>
		</nav>
		<div id="hs-content">
			<main>
				<article>
					<div id="topic-content">
  <div id="nsa-box" class="nsa-content0">
    <h1 class="hd0"><span class="ts0">Relation Key Segment Loop Expansion Tokens</span></h1>
  </div>
  <div id="sa-box">
    <div id="content-box" class="sa-content0">
      <p>&nbsp;</p>
      <p><span class="ts2">All </span><a href="keysegmentloopexpansiontokens.htm" class="hs6">key segment loop expansion tokens</a><span class="ts2">&nbsp;and </span><a href="fieldloopexpansiontokens.htm" class="hs6">field loop expansion tokens</a><span class="ts2">&nbsp;(for field segments) are available in Relation Key Segment Loops, and additionally the following tokens are available:</span></p>
      <p><span class="ts2">&nbsp;</span></p>
      <div>
        <table class="align-c tbl1">
          <tr class="row0">
            <td class="cell72">
              <p><span class="ts5">Token</span></p>
            </td>
            <td class="cell73">
              <p><span class="ts5">Description</span></p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell74">
              <p><a id="LITERAL_SEGMENT_CSTYPE"></a><span class="ts3">&lt;LITERAL_SEGMENT_CSTYPE&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell73">
              <p><span class="ts2">Inserts a string indicating the C# equivalent data type of a literal key segment of a foreign key that is referenced in the &quot;from key&quot; side of a relationship. Literal key segments defined in repository don't have a data type, only a value, so this token derives the data type by looking at the matching field segment in the relations associated &quot;to key&quot;.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">Possible values:&nbsp; </span><span class="ts3">bool, byte, double, float, int, long, decimal, DateTime, Nullable&lt;DateTime&gt;, sbyte, short, string, uint, ulong, ushort</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">Example: Consider a relationship involving the following two structures and keys:</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps12"><span class="ts5">Structure A</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">Structure B</span></p>
              <p class="ps12"><span class="ts2">FROM Foreign key</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts2">TO Access key</span></p>
              <p class="ps12"><span class="ts2">Segment 1, literal 0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts2">Field rectype (D1)</span></p>
              <p class="ps12"><span class="ts2">Segment 2, field customer (D6)</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts2">Field customer (D6)</span><br />&nbsp;</p>
              <p><span class="ts2">In order to determine a data type for the literal segment in structure A, the code looks at the matching field segment in structure B. The field is a D1, so it will be represented as an int.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">IMPORTANT NOTE: This token can ONLY be used in a </span><a href="relationkeysegmentloops.htm#FROM_KEY_SEGMENT_LOOP" class="hs2">relation FROM key segment loop</a><span class="ts2">, and further </span><span class="ts5">ONLY</span><span class="ts2">&nbsp;when processing a </span><span class="ts5">LITERAL</span><span class="ts2">&nbsp;segment, which can only exist in a </span><span class="ts5">FOREIGN</span><span class="ts2">&nbsp;key. The </span><a href="keysegmentloopexpressiontokens.htm#SEG_TYPE_LITERAL" class="hs2">&lt;IF SEG_TYPE_LITERAL&gt;</a><span class="ts2">&nbsp;expression should be used to ensure this is the case. For example:</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps12"><span class="ts3">&lt;RELATION_LOOP&gt;</span></p>
              <p class="ps12"><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;FROM_KEY_SEGMENT_LOOP&gt;</span></p>
              <p class="ps12"><span class="ts3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;IF SEG_TYPE_LITERAL&gt;</span></p>
              <p class="ps12"><span class="ts3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts4">&lt;LITERAL_SEGMENT_CSTYPE&gt;</span></p>
              <p class="ps12"><span class="ts3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/IF SEG_TYPE_LITERAL&gt;</span></p>
              <p class="ps12"><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;/FROM_KEY_SEGMENT_LOOP&gt;</span></p>
              <p class="ps12"><span class="ts3">&lt;/RELATION_LOOP&gt;</span></p>
              <p>&nbsp;</p>
              <p>&nbsp;</p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell75">
              <p><a id="LITERAL_SEGMENT_SNTYPE"></a><span class="ts3">&lt;LITERAL_SEGMENT_SNTYPE&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell76">
              <p><span class="ts2">Inserts a string indicating the Synergy .NET equivalent data type of a literal key segment of a foreign key that is referenced in the &quot;from key&quot; side of a relationship. Literal key segments defined in repository don't have a data type, only a value, so this token derives the data type by looking at the matching field segment in the relations associated &quot;to key&quot;.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">Possible values:&nbsp; </span><span class="ts3">boolean, byte, double, float, int, long, decimal, DateTime, Nullable&lt;DateTime&gt;, sbyte, short, string, uint, ulong, ushort</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">Example: Consider a relationship involving the following two structures and keys:</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps12"><span class="ts5">Structure A</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">Structure B</span></p>
              <p class="ps12"><span class="ts2">FROM Foreign key</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts2">TO Access key</span></p>
              <p class="ps12"><span class="ts2">Segment 1, literal 0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts2">Field rectype (D1)</span></p>
              <p class="ps12"><span class="ts2">Segment 2, field customer (D6)</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts2">Field customer (D6)</span><br />&nbsp;</p>
              <p><span class="ts2">In order to determine a data type for the literal segment in structure A, the code looks at the matching field segment in structure B. The field is a D1, so it will be represented as an int.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">IMPORTANT NOTE: This token can ONLY be used in a </span><a href="relationkeysegmentloops.htm#FROM_KEY_SEGMENT_LOOP" class="hs2">relation FROM key segment loop</a><span class="ts2">, and further </span><span class="ts5">ONLY</span><span class="ts2">&nbsp;when processing a </span><span class="ts5">LITERAL</span><span class="ts2">&nbsp;segment, which can only exist in a </span><span class="ts5">FOREIGN</span><span class="ts2">&nbsp;key. The </span><a href="keysegmentloopexpressiontokens.htm#SEG_TYPE_LITERAL" class="hs2">&lt;IF SEG_TYPE_LITERAL&gt;</a><span class="ts2">&nbsp;expression should be used to ensure this is the case. For example:</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps12"><span class="ts3">&lt;RELATION_LOOP&gt;</span></p>
              <p class="ps12"><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;FROM_KEY_SEGMENT_LOOP&gt;</span></p>
              <p class="ps12"><span class="ts3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;IF SEG_TYPE_LITERAL&gt;</span></p>
              <p class="ps12"><span class="ts3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts4">&lt;LITERAL_SEGMENT_CSTYPE&gt;</span></p>
              <p class="ps12"><span class="ts3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/IF SEG_TYPE_LITERAL&gt;</span></p>
              <p class="ps12"><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;/FROM_KEY_SEGMENT_LOOP&gt;</span></p>
              <p class="ps12"><span class="ts3">&lt;/RELATION_LOOP&gt;</span></p>
              <p class="ps1">&nbsp;</p>
            </td>
          </tr>
          <tr class="row0">
            <td class="cell72">
              <p><a id="LITERAL_SEGMENT_VALUE"></a><span class="ts3">&lt;LITERAL_SEGMENT_VALUE&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
            <td class="cell73">
              <p><span class="ts2">Inserts a string or numeric literal representing the value of a literal key segment of a foreign key that is referenced in the &quot;from key&quot; side of a relationship. Literal key segments defined in repository don't have a data type, only a value, so this token determines whether to insert a string or numeric literal by looking at the matching field segment in the relations associated &quot;to key&quot;.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p><span class="ts2">Possible values:</span></p>
              <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts2">A numeric literal, e.g.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts3">25</span></p>
              <p class="ps7"><span style="font-size: 14pt; line-height: 0; vertical-align: middle; color: Black">&bull;</span><span style="display: inline-block; width: 18px"></span><span class="ts2">A string literal, e.g.</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts3">&quot;ABC&quot;</span></p>
              <p class="ps1"><span class="ts2">Example: consider a relationship involving the following two structures and keys:</span></p>
              <p class="ps12"><span class="ts5">Structure A</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts5">Structure B</span></p>
              <p class="ps12"><span class="ts2">FROM Foreign key</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts2">TO Access key</span></p>
              <p class="ps12"><span class="ts2">Segment 1, literal 0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts2">Field rectype (D1)</span></p>
              <p class="ps12"><span class="ts2">Segment 2, field customer (D6)</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="ts2">Field customer (D6)</span><br />&nbsp;</p>
              <p><span class="ts2">In order to the type of literal value to insert&nbsp; for the literal segment in structure A, the code looks at the matching field segment in structure B. The field is a D1, so a numeric literal value will be inserted.</span></p>
              <p><span class="ts2">&nbsp;</span></p>
              <p class="ps1"><span class="ts2">IMPORTANT NOTE: This token can ONLY be used in a </span><a href="relationkeysegmentloops.htm#FROM_KEY_SEGMENT_LOOP" class="hs2">relation FROM key segment loop</a><span class="ts2">, and further </span><span class="ts5">ONLY</span><span class="ts2">&nbsp;when processing a </span><span class="ts5">LITERAL</span><span class="ts2">&nbsp;segment, which can only exist in a </span><span class="ts5">FOREIGN</span><span class="ts2">&nbsp;key. The </span><a href="keysegmentloopexpressiontokens.htm#SEG_TYPE_LITERAL" class="hs2">&lt;IF SEG_TYPE_LITERAL&gt;</a><span class="ts2">&nbsp;expression should be used to ensure this is the case. For example:</span></p>
              <p class="ps12"><span class="ts3">&lt;RELATION_LOOP&gt;</span></p>
              <p class="ps12"><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;FROM_KEY_SEGMENT_LOOP&gt;</span></p>
              <p class="ps12"><span class="ts3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;IF SEG_TYPE_LITERAL&gt;</span></p>
              <p class="ps12"><span class="ts3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts4">&lt;LITERAL_SEGMENT_VALUE&gt;</span></p>
              <p class="ps12"><span class="ts3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/IF SEG_TYPE_LITERAL&gt;</span></p>
              <p class="ps12"><span class="ts3">&nbsp;&nbsp;&nbsp; &lt;/FROM_KEY_SEGMENT_LOOP&gt;</span></p>
              <p class="ps12"><span class="ts3">&lt;/RELATION_LOOP&gt;</span></p>
              <p><span class="ts3">&nbsp;</span></p>
            </td>
          </tr>
        </table>
      </div>
      <p><span class="ts2">&nbsp;</span></p>
      <p><span class="ts2">&nbsp;</span></p>
      <div class="hr-wrapper">
        <hr class="hline1" />
      </div>
      <p class="ps8"><span class="ts10">Copyright &copy; 2021&nbsp; Synergex International, Inc.</span></p>
    </div>
  </div>
</div>
				</article>
			</main>
		</div>
		<footer>
			<div id="hs-footer"><div id="hs-content-f">
  <div id="hs-wrapper-f">
    <span id="hs-title-f">Copyright &copy; 2021  Synergex International, Inc.</span>
  </div>
</div></div>
		</footer>
</body>
</html>