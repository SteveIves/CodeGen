
import System
import System.Collections.Generic
import CodeGen.Engine
import CodeGen.RepositoryAPI

namespace CustomExtensionsExample

    ;;To implement a custom expression you must build a class that implements the CodeGen.Engine.IExpressionToken interface.
    ;;The class MUST have a default constructor. By default classes have an implicit default constructor, but if you need to
    ;;explicitly define a constructor, make sure you don't define any parameters.

    public class CustomStructureExpression implements IExpressionToken

        public property TokenName, String
            method get
            proc
                mreturn "CUSTOM_STRUCTURE_EXPRESSION"
            endmethod
        endproperty

        public property Description, String
            method get
            proc
                mreturn "An example of a custom structure expression."
            endmethod
        endproperty

        public property Validity, TokenValidity
            method get
            proc
                mreturn TokenValidity.Anywhere
            endmethod
        endproperty

        public method Evaluate, Boolean
            tkn, @Token
            template, @FileNode 
            loops, @IEnumerable<LoopNode>
            endparams
        proc
            lambda doEvaluate(str)
            begin
                ;Add code here to determine the result of the expression, and return true or false
                mreturn true
            end
            mreturn ExpressionEvaluator.EvaluateStructureExpression(tkn, template, loops, doEvaluate)
        endmethod

    endclass

endnamespace
