;;*****************************************************************************
;;
;; Title:       RpsEnumMember.dbl
;;
;; Type:        Class
;;
;; Description: Represents a single Repository enumeration member
;;
;; Date:        2nd November 2009
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2012, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

.define DDINFO_DEFINES_ONLY
.include "RPSLIB:ddinfo.def"
.undefine DDINFO_DEFINES_ONLY

import CodeGen.RepositoryAPI

namespace CodeGen.RepositoryAPI

    public class RpsEnumMember

        ;;Field attribute data
        protected mEnumName             ,a30
        protected mName                 ,a30
        protected mExplicitValue        ,a11
        protected mImplicitValue        ,a11

        ;; Constructor
        public method RpsEnumMember
            required in EnumName, a30
            required in Name, a30
            required in ExplicitValue, a11
            required in ImplicitValue, a11
            endparams
        proc
            RpsUtils.DbgLog("RpsEnumMember(EnumName,Name,ImplicitValue,ExplicitValue) constructor")
            Repository.CheckIsOpen()
            mEnumName = EnumName
            mName = Name
            mExplicitValue = ExplicitValue
            mImplicitValue = ImplicitValue
        endmethod

        ;;---------------------------------------------------------------------
        ;;Public properties to expose enumeration member attributes

        ;; Structure name (a30)
        public property EnumName, a
            method get
            proc
                mreturn %atrim(mEnumName)
            endmethod
        endproperty

        ;; Member name (a30)
        public property Name, a
            method get
            proc
                mreturn %atrim(mName)
            endmethod
        endproperty

        ;; Member explicit value (may be blank) (a11)
        public property ExplicitValue, a
            method get
            proc
                mreturn %atrim(mExplicitValue)
            endmethod
        endproperty

        ;; Member implicit value (will not be blank) (a11)
        public property ImplicitValue, a
            method get
            proc
                mreturn %atrim(mImplicitValue)
            endmethod
        endproperty

    endclass

endnamespace
